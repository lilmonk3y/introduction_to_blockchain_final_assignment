{
	"id": "60d4621e4e5f2657c256afd3219d281f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"Equation.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.9;\r\n\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\nimport \"BancorPower.sol\";\r\n\r\n\r\nlibrary Equation {\r\n  using SafeMath for uint256;\r\n\r\n  /// An expression tree is encoded as a set of nodes, with root node having index zero. Each node has 3 values:\r\n  ///  1. opcode: the expression that the node represents. See table below.\r\n  /// +--------+----------------------------------------+------+------------+\r\n  /// | Opcode |              Description               | i.e. | # children |\r\n  /// +--------+----------------------------------------+------+------------+\r\n  /// |   00   | Integer Constant                       |   c  |      0     |\r\n  /// |   01   | Variable                               |   X  |      0     |\r\n  /// |   02   | Arithmetic Square Root                 |   âˆš  |      1     |\r\n  /// |   03   | Boolean Not Condition                  |   !  |      1     |\r\n  /// |   04   | Arithmetic Addition                    |   +  |      2     |\r\n  /// |   05   | Arithmetic Subtraction                 |   -  |      2     |\r\n  /// |   06   | Arithmetic Multiplication              |   *  |      2     |\r\n  /// |   07   | Arithmetic Division                    |   /  |      2     |\r\n  /// |   08   | Arithmetic Exponentiation              |  **  |      2     |\r\n  /// |   09   | Arithmetic Percentage* (see below)     |   %  |      2     |\r\n  /// |   10   | Arithmetic Equal Comparison            |  ==  |      2     |\r\n  /// |   11   | Arithmetic Non-Equal Comparison        |  !=  |      2     |\r\n  /// |   12   | Arithmetic Less-Than Comparison        |  <   |      2     |\r\n  /// |   13   | Arithmetic Greater-Than Comparison     |  >   |      2     |\r\n  /// |   14   | Arithmetic Non-Greater-Than Comparison |  <=  |      2     |\r\n  /// |   15   | Arithmetic Non-Less-Than Comparison    |  >=  |      2     |\r\n  /// |   16   | Boolean And Condition                  |  &&  |      2     |\r\n  /// |   17   | Boolean Or Condition                   |  ||  |      2     |\r\n  /// |   18   | Ternary Operation                      |  ?:  |      3     |\r\n  /// |   19   | Bancor's log** (see below)             |      |      3     |\r\n  /// |   20   | Bancor's power*** (see below)          |      |      4     |\r\n  /// +--------+----------------------------------------+------+------------+\r\n  ///  2. children: the list of node indices of this node's sub-expressions. Different opcode nodes will have different\r\n  ///     number of children.\r\n  ///  3. value: the value inside the node. Currently this is only relevant for Integer Constant (Opcode 00).\r\n  /// (*) Arithmetic percentage is computed by multiplying the left-hand side value with the right-hand side,\r\n  ///     and divide the result by 10^18, rounded down to uint256 integer.\r\n  /// (**) Using BancorFormula, the opcode computes log of fractional numbers. However, this fraction's value must\r\n  ///     be more than 1. (baseN / baseD >= 1). The opcode takes 3 childrens(c, baseN, baseD), and computes\r\n  ///     (c * log(baseN / baseD)) limitation is in range of 1 <= baseN / baseD <= 58774717541114375398436826861112283890\r\n  ///     (= 1e76/FIXED_1), where FIXED_1 defined in BancorPower.sol\r\n  /// (***) Using BancorFomula, the opcode computes exponential of fractional numbers. The opcode takes 4 children\r\n  ///     (c,baseN,baseD,expV), and computes (c * ((baseN / baseD) ^ (expV / 1e6))). See implementation for the\r\n  ///     limitation of the each value's domain. The end result must be in uint256 range.\r\n  struct Node {\r\n    uint8 opcode;\r\n    uint8 child0;\r\n    uint8 child1;\r\n    uint8 child2;\r\n    uint8 child3;\r\n    uint256 value;\r\n  }\r\n\r\n  enum ExprType { Invalid, Math, Boolean }\r\n\r\n  uint8 constant OPCODE_CONST = 0;\r\n  uint8 constant OPCODE_VAR = 1;\r\n  uint8 constant OPCODE_SQRT = 2;\r\n  uint8 constant OPCODE_NOT = 3;\r\n  uint8 constant OPCODE_ADD = 4;\r\n  uint8 constant OPCODE_SUB = 5;\r\n  uint8 constant OPCODE_MUL = 6;\r\n  uint8 constant OPCODE_DIV = 7;\r\n  uint8 constant OPCODE_EXP = 8;\r\n  uint8 constant OPCODE_PCT = 9;\r\n  uint8 constant OPCODE_EQ = 10;\r\n  uint8 constant OPCODE_NE = 11;\r\n  uint8 constant OPCODE_LT = 12;\r\n  uint8 constant OPCODE_GT = 13;\r\n  uint8 constant OPCODE_LE = 14;\r\n  uint8 constant OPCODE_GE = 15;\r\n  uint8 constant OPCODE_AND = 16;\r\n  uint8 constant OPCODE_OR = 17;\r\n  uint8 constant OPCODE_IF = 18;\r\n  uint8 constant OPCODE_BANCOR_LOG = 19;\r\n  uint8 constant OPCODE_BANCOR_POWER = 20;\r\n  uint8 constant OPCODE_INVALID = 21;\r\n\r\n  /// @dev Initialize equation by array of opcodes/values in prefix order. Array\r\n  /// is read as if it is the *pre-order* traversal of the expression tree.\r\n  function init(Node[] storage self, uint256[] calldata _expressions) external {\r\n    /// Init should only be called when the equation is not yet initialized.\r\n    require(self.length == 0);\r\n    /// Limit expression length to < 256 to make sure gas cost is managable.\r\n    require(_expressions.length < 256);\r\n    for (uint8 idx = 0; idx < _expressions.length; ++idx) {\r\n      uint256 opcode = _expressions[idx];\r\n      require(opcode < OPCODE_INVALID);\r\n      Node memory node;\r\n      node.opcode = uint8(opcode);\r\n      /// Get the node's value. Only applicable on Integer Constant case.\r\n      if (opcode == OPCODE_CONST) {\r\n        node.value = _expressions[++idx];\r\n      }\r\n      self.push(node);\r\n    }\r\n    (uint8 lastNodeIndex,) = populateTree(self, 0);\r\n    require(lastNodeIndex == self.length - 1);\r\n  }\r\n\r\n  /// Calculate the Y position from the X position for this equation.\r\n  function calculate(Node[] storage self, uint256 xValue) external view returns (uint256) {\r\n    return solveMath(self, 0, xValue);\r\n  }\r\n\r\n  /// Return the number of children the given opcode node has.\r\n  function getChildrenCount(uint8 opcode) private pure returns (uint8) {\r\n    if (opcode <= OPCODE_VAR) {\r\n      return 0;\r\n    } else if (opcode <= OPCODE_NOT) {\r\n      return 1;\r\n    } else if (opcode <= OPCODE_OR) {\r\n      return 2;\r\n    } else if (opcode <= OPCODE_BANCOR_LOG) {\r\n      return 3;\r\n    } else if (opcode <= OPCODE_BANCOR_POWER) {\r\n      return 4;\r\n    }\r\n    revert();\r\n  }\r\n\r\n  /// Check whether the given opcode and list of expression types match. Revert on failure.\r\n  function checkExprType(uint8 opcode, ExprType[] memory types)\r\n    private pure returns (ExprType)\r\n  {\r\n    if (opcode <= OPCODE_VAR) {\r\n      return ExprType.Math;\r\n    } else if (opcode == OPCODE_SQRT) {\r\n      require(types[0] == ExprType.Math);\r\n      return ExprType.Math;\r\n    } else if (opcode == OPCODE_NOT) {\r\n      require(types[0] == ExprType.Boolean);\r\n      return ExprType.Boolean;\r\n    } else if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {\r\n      require(types[0] == ExprType.Math);\r\n      require(types[1] == ExprType.Math);\r\n      return ExprType.Math;\r\n    } else if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {\r\n      require(types[0] == ExprType.Math);\r\n      require(types[1] == ExprType.Math);\r\n      return ExprType.Boolean;\r\n    } else if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {\r\n      require(types[0] == ExprType.Boolean);\r\n      require(types[1] == ExprType.Boolean);\r\n      return ExprType.Boolean;\r\n    } else if (opcode == OPCODE_IF) {\r\n      require(types[0] == ExprType.Boolean);\r\n      require(types[1] != ExprType.Invalid);\r\n      require(types[1] == types[2]);\r\n      return types[1];\r\n    } else if (opcode == OPCODE_BANCOR_LOG) {\r\n      require(types[0] == ExprType.Math);\r\n      require(types[1] == ExprType.Math);\r\n      require(types[2] == ExprType.Math);\r\n      return ExprType.Math;\r\n    } else if (opcode == OPCODE_BANCOR_POWER) {\r\n      require(types[0] == ExprType.Math);\r\n      require(types[1] == ExprType.Math);\r\n      require(types[2] == ExprType.Math);\r\n      require(types[3] == ExprType.Math);\r\n      return ExprType.Math;\r\n    }\r\n    revert();\r\n  }\r\n\r\n  /// Helper function to recursively populate node infoMaprmation following the given pre-order\r\n  /// node list. It inspects the opcode and recursively call populateTree(s) accordingly.\r\n  /// @param self storage pointer to equation data to build tree.\r\n  /// @param currentNodeIndex the index of the current node to populate infoMap.\r\n  /// @return An (uint8, bool). The first value represents the last  (highest/rightmost) node\r\n  /// index of the current subtree. The second value indicates the type of this subtree.\r\n  function populateTree(Node[] storage self, uint8 currentNodeIndex)\r\n    private returns (uint8, ExprType)\r\n  {\r\n    require(currentNodeIndex < self.length);\r\n    Node storage node = self[currentNodeIndex];\r\n    uint8 opcode = node.opcode;\r\n    uint8 childrenCount = getChildrenCount(opcode);\r\n    ExprType[] memory childrenTypes = new ExprType[](childrenCount);\r\n    uint8 lastNodeIdx = currentNodeIndex;\r\n    for (uint8 idx = 0; idx < childrenCount; ++idx) {\r\n      if (idx == 0) node.child0 = lastNodeIdx + 1;\r\n      else if (idx == 1) node.child1 = lastNodeIdx + 1;\r\n      else if (idx == 2) node.child2 = lastNodeIdx + 1;\r\n      else if (idx == 3) node.child3 = lastNodeIdx + 1;\r\n      else revert();\r\n      (lastNodeIdx, childrenTypes[idx]) = populateTree(self, lastNodeIdx + 1);\r\n    }\r\n    ExprType exprType = checkExprType(opcode, childrenTypes);\r\n    return (lastNodeIdx, exprType);\r\n  }\r\n\r\n\r\n  function solveMath(Node[] storage self, uint8 nodeIdx, uint256 xValue)\r\n    private view returns (uint256)\r\n  {\r\n    Node storage node = self[nodeIdx];\r\n    uint8 opcode = node.opcode;\r\n    if (opcode == OPCODE_CONST) {\r\n      return node.value;\r\n    } else if (opcode == OPCODE_VAR) {\r\n      return xValue;\r\n    } else if (opcode == OPCODE_SQRT) {\r\n      uint256 childValue = solveMath(self, node.child0, xValue);\r\n      uint256 temp = childValue.add(1).div(2);\r\n      uint256 result = childValue;\r\n      while (temp < result) {\r\n        result = temp;\r\n        temp = childValue.div(temp).add(temp).div(2);\r\n      }\r\n      return result;\r\n    } else if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {\r\n      uint256 leftValue = solveMath(self, node.child0, xValue);\r\n      uint256 rightValue = solveMath(self, node.child1, xValue);\r\n      if (opcode == OPCODE_ADD) {\r\n        return leftValue.add(rightValue);\r\n      } else if (opcode == OPCODE_SUB) {\r\n        return leftValue.sub(rightValue);\r\n      } else if (opcode == OPCODE_MUL) {\r\n        return leftValue.mul(rightValue);\r\n      } else if (opcode == OPCODE_DIV) {\r\n        return leftValue.div(rightValue);\r\n      } else if (opcode == OPCODE_EXP) {\r\n        uint256 power = rightValue;\r\n        uint256 expResult = 1;\r\n        for (uint256 idx = 0; idx < power; ++idx) {\r\n          expResult = expResult.mul(leftValue);\r\n        }\r\n        return expResult;\r\n      } else if (opcode == OPCODE_PCT) {\r\n        return leftValue.mul(rightValue).div(1e18);\r\n      }\r\n    } else if (opcode == OPCODE_IF) {\r\n      bool condValue = solveBool(self, node.child0, xValue);\r\n      if (condValue) return solveMath(self, node.child1, xValue);\r\n      else return solveMath(self, node.child2, xValue);\r\n    } else if (opcode == OPCODE_BANCOR_LOG) {\r\n      uint256 multiplier = solveMath(self, node.child0, xValue);\r\n      uint256 baseN = solveMath(self, node.child1, xValue);\r\n      uint256 baseD = solveMath(self, node.child2, xValue);\r\n      return BancorPower.log(multiplier, baseN, baseD);\r\n    } else if (opcode == OPCODE_BANCOR_POWER) {\r\n      uint256 multiplier = solveMath(self, node.child0, xValue);\r\n      uint256 baseN = solveMath(self, node.child1, xValue);\r\n      uint256 baseD = solveMath(self, node.child2, xValue);\r\n      uint256 expV = solveMath(self, node.child3, xValue);\r\n      require(expV < 1 << 32);\r\n      (uint256 expResult, uint8 precision) = BancorPower.power(baseN, baseD, uint32(expV), 1e6);\r\n      return expResult.mul(multiplier) >> precision;\r\n    }\r\n    revert();\r\n  }\r\n\r\n  function solveBool(Node[] storage self, uint8 nodeIdx, uint256 xValue)\r\n    private view returns (bool)\r\n  {\r\n    Node storage node = self[nodeIdx];\r\n    uint8 opcode = node.opcode;\r\n    if (opcode == OPCODE_NOT) {\r\n      return !solveBool(self, node.child0, xValue);\r\n    } else if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {\r\n      uint256 leftValue = solveMath(self, node.child0, xValue);\r\n      uint256 rightValue = solveMath(self, node.child1, xValue);\r\n      if (opcode == OPCODE_EQ) {\r\n        return leftValue == rightValue;\r\n      } else if (opcode == OPCODE_NE) {\r\n        return leftValue != rightValue;\r\n      } else if (opcode == OPCODE_LT) {\r\n        return leftValue < rightValue;\r\n      } else if (opcode == OPCODE_GT) {\r\n        return leftValue > rightValue;\r\n      } else if (opcode == OPCODE_LE) {\r\n        return leftValue <= rightValue;\r\n      } else if (opcode == OPCODE_GE) {\r\n        return leftValue >= rightValue;\r\n      }\r\n    } else if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {\r\n      bool leftBoolValue = solveBool(self, node.child0, xValue);\r\n      if (opcode == OPCODE_AND) {\r\n        if (leftBoolValue) return solveBool(self, node.child1, xValue);\r\n        else return false;\r\n      } else if (opcode == OPCODE_OR) {\r\n        if (leftBoolValue) return true;\r\n        else return solveBool(self, node.child1, xValue);\r\n      }\r\n    } else if (opcode == OPCODE_IF) {\r\n      bool condValue = solveBool(self, node.child0, xValue);\r\n      if (condValue) return solveBool(self, node.child1, xValue);\r\n      else return solveBool(self, node.child2, xValue);\r\n    }\r\n    revert();\r\n  }\r\n}"
			},
			"BancorPower.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.9;\r\n\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\n\r\n/**\r\n * @title BancorPower, modified from the original \"BancorFomula.sol\"\r\n *        written by Bancor https://github.com/bancorprotocol/contracts\r\n *\r\n * @dev Changes include:\r\n *  1. Remove Bancor's specific functions and replace SafeMath with OpenZeppelin's.\r\n *  2. Change code from Contract to Library and change maxExpArray from being array\r\n *     with binary search inside `findPositionInMaxExpArray` to a simple linear search.\r\n *  3. Add requirement check that baseN >= baseD (this is always true for Bancor).\r\n * Licensed under Apache Lisense, Version 2.0.\r\n */\r\nlibrary BancorPower {\r\n    using SafeMath for uint256;\r\n\r\n    string internal constant version = '0.3';\r\n    uint256 private constant ONE = 1;\r\n    uint32 private constant MAX_WEIGHT = 1000000;\r\n    uint8 private constant MIN_PRECISION = 32;\r\n    uint8 private constant MAX_PRECISION = 127;\r\n\r\n    /**\r\n        Auto-generated via 'PrintIntScalingFactors.py'\r\n    */\r\n    uint256 private constant FIXED_1 = 0x080000000000000000000000000000000;\r\n    uint256 private constant FIXED_2 = 0x100000000000000000000000000000000;\r\n    uint256 private constant MAX_NUM = 0x200000000000000000000000000000000;\r\n\r\n    /**\r\n        Auto-generated via 'PrintLn2ScalingFactors.py'\r\n    */\r\n    uint256 private constant LN2_NUMERATOR   = 0x3f80fe03f80fe03f80fe03f80fe03f8;\r\n    uint256 private constant LN2_DENOMINATOR = 0x5b9de1d10bf4103d647b0955897ba80;\r\n\r\n    /**\r\n        Auto-generated via 'PrintFunctionOptimalLog.py' and 'PrintFunctionOptimalExp.py'\r\n    */\r\n    uint256 private constant OPT_LOG_MAX_VAL = 0x15bf0a8b1457695355fb8ac404e7a79e3;\r\n    uint256 private constant OPT_EXP_MAX_VAL = 0x800000000000000000000000000000000;\r\n\r\n    /**\r\n        General Description:\r\n            Determine a value of precision.\r\n            Calculate an integer approximation of (_baseN / _baseD) ^ (_expN / _expD) * 2 ^ precision.\r\n            Return the result along with the precision used.\r\n\r\n        Detailed Description:\r\n            Instead of calculating \"base ^ exp\", we calculate \"e ^ (log(base) * exp)\".\r\n            The value of \"log(base)\" is represented with an integer slightly smaller than \"log(base) * 2 ^ precision\".\r\n            The larger \"precision\" is, the more accurately this value represents the real value.\r\n            However, the larger \"precision\" is, the more bits are required in order to store this value.\r\n            And the exponentiation function, which takes \"x\" and calculates \"e ^ x\", is limited to a maximum exponent (maximum value of \"x\").\r\n            This maximum exponent depends on the \"precision\" used, and it is given by \"maxExpArray[precision] >> (MAX_PRECISION - precision)\".\r\n            Hence we need to determine the highest precision which can be used for the given input, before calling the exponentiation function.\r\n            This allows us to compute \"base ^ exp\" with maximum accuracy and without exceeding 256 bits in any of the intermediate computations.\r\n            This functions assumes that \"_expN < 2 ^ 256 / log(MAX_NUM - 1)\", otherwise the multiplication should be replaced with a \"safeMul\".\r\n    */\r\n    function power(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD) internal pure returns (uint256, uint8) {\r\n        require(_baseN < MAX_NUM);\r\n        require(_baseN >= _baseD);\r\n\r\n        uint256 baseLog;\r\n        uint256 base = _baseN * FIXED_1 / _baseD;\r\n        if (base < OPT_LOG_MAX_VAL) {\r\n            baseLog = optimalLog(base);\r\n        }\r\n        else {\r\n            baseLog = generalLog(base);\r\n        }\r\n\r\n        uint256 baseLogTimesExp = baseLog * _expN / _expD;\r\n        if (baseLogTimesExp < OPT_EXP_MAX_VAL) {\r\n            return (optimalExp(baseLogTimesExp), MAX_PRECISION);\r\n        }\r\n        else {\r\n            uint8 precision = findPositionInMaxExpArray(baseLogTimesExp);\r\n            return (generalExp(baseLogTimesExp >> (MAX_PRECISION - precision), precision), precision);\r\n        }\r\n    }\r\n\r\n    /**\r\n    *   c >= 10^18\r\n    *\r\n     */\r\n    function log(uint256 _c, uint256 _baseN, uint256 _baseD) internal pure returns (uint256) {\r\n        // require(_baseN < MAX_NUM)\r\n        require(_baseN >= _baseD);\r\n\r\n        uint256 baseLog;\r\n        uint256 base = _baseN * FIXED_1 / _baseD;\r\n        if (base < OPT_LOG_MAX_VAL) {\r\n            baseLog = optimalLog(base);\r\n        } else {\r\n            baseLog = generalLog(base);\r\n        }\r\n\r\n        return (baseLog * _c) / FIXED_1;\r\n    }\r\n\r\n    /**\r\n        Compute log(x / FIXED_1) * FIXED_1.\r\n        This functions assumes that \"x >= FIXED_1\", because the output would be negative otherwise.\r\n    */\r\n    function generalLog(uint256 x) internal pure returns (uint256) {\r\n        uint256 res = 0;\r\n\r\n        // If x >= 2, then we compute the integer part of log2(x), which is larger than 0.\r\n        if (x >= FIXED_2) {\r\n            uint8 count = floorLog2(x / FIXED_1);\r\n            x >>= count; // now x < 2\r\n            res = count * FIXED_1;\r\n        }\r\n\r\n        // If x > 1, then we compute the fraction part of log2(x), which is larger than 0.\r\n        if (x > FIXED_1) {\r\n            for (uint8 i = MAX_PRECISION; i > 0; --i) {\r\n                x = (x * x) / FIXED_1; // now 1 < x < 4\r\n                if (x >= FIXED_2) {\r\n                    x >>= 1; // now 1 < x < 2\r\n                    res += ONE << (i - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return res * LN2_NUMERATOR / LN2_DENOMINATOR;\r\n    }\r\n\r\n    /**\r\n        Compute the largest integer smaller than or equal to the binary logarithm of the input.\r\n    */\r\n    function floorLog2(uint256 _n) internal pure returns (uint8) {\r\n        uint8 res = 0;\r\n\r\n        if (_n < 256) {\r\n            // At most 8 iterations\r\n            while (_n > 1) {\r\n                _n >>= 1;\r\n                res += 1;\r\n            }\r\n        }\r\n        else {\r\n            // Exactly 8 iterations\r\n            for (uint8 s = 128; s > 0; s >>= 1) {\r\n                if (_n >= (ONE << s)) {\r\n                    _n >>= s;\r\n                    res |= s;\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n        The global \"maxExpArray\" is sorted in descending order, and therefore the following statements are equivalent:\r\n        - This function finds the position of [the smallest value in \"maxExpArray\" larger than or equal to \"x\"]\r\n        - This function finds the highest position of [a value in \"maxExpArray\" larger than or equal to \"x\"]\r\n    */\r\n    function findPositionInMaxExpArray(uint256 _x) internal pure returns (uint8) {\r\n        if (0x1c35fedd14ffffffffffffffffffffffff >= _x) return  32;\r\n        if (0x1b0ce43b323fffffffffffffffffffffff >= _x) return  33;\r\n        if (0x19f0028ec1ffffffffffffffffffffffff >= _x) return  34;\r\n        if (0x18ded91f0e7fffffffffffffffffffffff >= _x) return  35;\r\n        if (0x17d8ec7f0417ffffffffffffffffffffff >= _x) return  36;\r\n        if (0x16ddc6556cdbffffffffffffffffffffff >= _x) return  37;\r\n        if (0x15ecf52776a1ffffffffffffffffffffff >= _x) return  38;\r\n        if (0x15060c256cb2ffffffffffffffffffffff >= _x) return  39;\r\n        if (0x1428a2f98d72ffffffffffffffffffffff >= _x) return  40;\r\n        if (0x13545598e5c23fffffffffffffffffffff >= _x) return  41;\r\n        if (0x1288c4161ce1dfffffffffffffffffffff >= _x) return  42;\r\n        if (0x11c592761c666fffffffffffffffffffff >= _x) return  43;\r\n        if (0x110a688680a757ffffffffffffffffffff >= _x) return  44;\r\n        if (0x1056f1b5bedf77ffffffffffffffffffff >= _x) return  45;\r\n        if (0x0faadceceeff8bffffffffffffffffffff >= _x) return  46;\r\n        if (0x0f05dc6b27edadffffffffffffffffffff >= _x) return  47;\r\n        if (0x0e67a5a25da4107fffffffffffffffffff >= _x) return  48;\r\n        if (0x0dcff115b14eedffffffffffffffffffff >= _x) return  49;\r\n        if (0x0d3e7a392431239fffffffffffffffffff >= _x) return  50;\r\n        if (0x0cb2ff529eb71e4fffffffffffffffffff >= _x) return  51;\r\n        if (0x0c2d415c3db974afffffffffffffffffff >= _x) return  52;\r\n        if (0x0bad03e7d883f69bffffffffffffffffff >= _x) return  53;\r\n        if (0x0b320d03b2c343d5ffffffffffffffffff >= _x) return  54;\r\n        if (0x0abc25204e02828dffffffffffffffffff >= _x) return  55;\r\n        if (0x0a4b16f74ee4bb207fffffffffffffffff >= _x) return  56;\r\n        if (0x09deaf736ac1f569ffffffffffffffffff >= _x) return  57;\r\n        if (0x0976bd9952c7aa957fffffffffffffffff >= _x) return  58;\r\n        if (0x09131271922eaa606fffffffffffffffff >= _x) return  59;\r\n        if (0x08b380f3558668c46fffffffffffffffff >= _x) return  60;\r\n        if (0x0857ddf0117efa215bffffffffffffffff >= _x) return  61;\r\n        if (0x07ffffffffffffffffffffffffffffffff >= _x) return  62;\r\n        if (0x07abbf6f6abb9d087fffffffffffffffff >= _x) return  63;\r\n        if (0x075af62cbac95f7dfa7fffffffffffffff >= _x) return  64;\r\n        if (0x070d7fb7452e187ac13fffffffffffffff >= _x) return  65;\r\n        if (0x06c3390ecc8af379295fffffffffffffff >= _x) return  66;\r\n        if (0x067c00a3b07ffc01fd6fffffffffffffff >= _x) return  67;\r\n        if (0x0637b647c39cbb9d3d27ffffffffffffff >= _x) return  68;\r\n        if (0x05f63b1fc104dbd39587ffffffffffffff >= _x) return  69;\r\n        if (0x05b771955b36e12f7235ffffffffffffff >= _x) return  70;\r\n        if (0x057b3d49dda84556d6f6ffffffffffffff >= _x) return  71;\r\n        if (0x054183095b2c8ececf30ffffffffffffff >= _x) return  72;\r\n        if (0x050a28be635ca2b888f77fffffffffffff >= _x) return  73;\r\n        if (0x04d5156639708c9db33c3fffffffffffff >= _x) return  74;\r\n        if (0x04a23105873875bd52dfdfffffffffffff >= _x) return  75;\r\n        if (0x0471649d87199aa990756fffffffffffff >= _x) return  76;\r\n        if (0x04429a21a029d4c1457cfbffffffffffff >= _x) return  77;\r\n        if (0x0415bc6d6fb7dd71af2cb3ffffffffffff >= _x) return  78;\r\n        if (0x03eab73b3bbfe282243ce1ffffffffffff >= _x) return  79;\r\n        if (0x03c1771ac9fb6b4c18e229ffffffffffff >= _x) return  80;\r\n        if (0x0399e96897690418f785257fffffffffff >= _x) return  81;\r\n        if (0x0373fc456c53bb779bf0ea9fffffffffff >= _x) return  82;\r\n        if (0x034f9e8e490c48e67e6ab8bfffffffffff >= _x) return  83;\r\n        if (0x032cbfd4a7adc790560b3337ffffffffff >= _x) return  84;\r\n        if (0x030b50570f6e5d2acca94613ffffffffff >= _x) return  85;\r\n        if (0x02eb40f9f620fda6b56c2861ffffffffff >= _x) return  86;\r\n        if (0x02cc8340ecb0d0f520a6af58ffffffffff >= _x) return  87;\r\n        if (0x02af09481380a0a35cf1ba02ffffffffff >= _x) return  88;\r\n        if (0x0292c5bdd3b92ec810287b1b3fffffffff >= _x) return  89;\r\n        if (0x0277abdcdab07d5a77ac6d6b9fffffffff >= _x) return  90;\r\n        if (0x025daf6654b1eaa55fd64df5efffffffff >= _x) return  91;\r\n        if (0x0244c49c648baa98192dce88b7ffffffff >= _x) return  92;\r\n        if (0x022ce03cd5619a311b2471268bffffffff >= _x) return  93;\r\n        if (0x0215f77c045fbe885654a44a0fffffffff >= _x) return  94;\r\n        if (0x01ffffffffffffffffffffffffffffffff >= _x) return  95;\r\n        if (0x01eaefdbdaaee7421fc4d3ede5ffffffff >= _x) return  96;\r\n        if (0x01d6bd8b2eb257df7e8ca57b09bfffffff >= _x) return  97;\r\n        if (0x01c35fedd14b861eb0443f7f133fffffff >= _x) return  98;\r\n        if (0x01b0ce43b322bcde4a56e8ada5afffffff >= _x) return  99;\r\n        if (0x019f0028ec1fff007f5a195a39dfffffff >= _x) return 100;\r\n        if (0x018ded91f0e72ee74f49b15ba527ffffff >= _x) return 101;\r\n        if (0x017d8ec7f04136f4e5615fd41a63ffffff >= _x) return 102;\r\n        if (0x016ddc6556cdb84bdc8d12d22e6fffffff >= _x) return 103;\r\n        if (0x015ecf52776a1155b5bd8395814f7fffff >= _x) return 104;\r\n        if (0x015060c256cb23b3b3cc3754cf40ffffff >= _x) return 105;\r\n        if (0x01428a2f98d728ae223ddab715be3fffff >= _x) return 106;\r\n        if (0x013545598e5c23276ccf0ede68034fffff >= _x) return 107;\r\n        if (0x01288c4161ce1d6f54b7f61081194fffff >= _x) return 108;\r\n        if (0x011c592761c666aa641d5a01a40f17ffff >= _x) return 109;\r\n        if (0x0110a688680a7530515f3e6e6cfdcdffff >= _x) return 110;\r\n        if (0x01056f1b5bedf75c6bcb2ce8aed428ffff >= _x) return 111;\r\n        if (0x00faadceceeff8a0890f3875f008277fff >= _x) return 112;\r\n        if (0x00f05dc6b27edad306388a600f6ba0bfff >= _x) return 113;\r\n        if (0x00e67a5a25da41063de1495d5b18cdbfff >= _x) return 114;\r\n        if (0x00dcff115b14eedde6fc3aa5353f2e4fff >= _x) return 115;\r\n        if (0x00d3e7a3924312399f9aae2e0f868f8fff >= _x) return 116;\r\n        if (0x00cb2ff529eb71e41582cccd5a1ee26fff >= _x) return 117;\r\n        if (0x00c2d415c3db974ab32a51840c0b67edff >= _x) return 118;\r\n        if (0x00bad03e7d883f69ad5b0a186184e06bff >= _x) return 119;\r\n        if (0x00b320d03b2c343d4829abd6075f0cc5ff >= _x) return 120;\r\n        if (0x00abc25204e02828d73c6e80bcdb1a95bf >= _x) return 121;\r\n        if (0x00a4b16f74ee4bb2040a1ec6c15fbbf2df >= _x) return 122;\r\n        if (0x009deaf736ac1f569deb1b5ae3f36c130f >= _x) return 123;\r\n        if (0x00976bd9952c7aa957f5937d790ef65037 >= _x) return 124;\r\n        if (0x009131271922eaa6064b73a22d0bd4f2bf >= _x) return 125;\r\n        if (0x008b380f3558668c46c91c49a2f8e967b9 >= _x) return 126;\r\n        if (0x00857ddf0117efa215952912839f6473e6 >= _x) return 127;\r\n        require(false);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n        This function can be auto-generated by the script 'PrintFunctionGeneralExp.py'.\r\n        It approximates \"e ^ x\" via maclaurin summation: \"(x^0)/0! + (x^1)/1! + ... + (x^n)/n!\".\r\n        It returns \"e ^ (x / 2 ^ precision) * 2 ^ precision\", that is, the result is upshifted for accuracy.\r\n        The global \"maxExpArray\" maps each \"precision\" to \"((maximumExponent + 1) << (MAX_PRECISION - precision)) - 1\".\r\n        The maximum permitted value for \"x\" is therefore given by \"maxExpArray[precision] >> (MAX_PRECISION - precision)\".\r\n    */\r\n    function generalExp(uint256 _x, uint8 _precision) internal pure returns (uint256) {\r\n        uint256 xi = _x;\r\n        uint256 res = 0;\r\n\r\n        xi = (xi * _x) >> _precision; res += xi * 0x3442c4e6074a82f1797f72ac0000000; // add x^02 * (33! / 02!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x116b96f757c380fb287fd0e40000000; // add x^03 * (33! / 03!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x045ae5bdd5f0e03eca1ff4390000000; // add x^04 * (33! / 04!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00defabf91302cd95b9ffda50000000; // add x^05 * (33! / 05!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x002529ca9832b22439efff9b8000000; // add x^06 * (33! / 06!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00054f1cf12bd04e516b6da88000000; // add x^07 * (33! / 07!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000a9e39e257a09ca2d6db51000000; // add x^08 * (33! / 08!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000012e066e7b839fa050c309000000; // add x^09 * (33! / 09!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000001e33d7d926c329a1ad1a800000; // add x^10 * (33! / 10!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000002bee513bdb4a6b19b5f800000; // add x^11 * (33! / 11!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000003a9316fa79b88eccf2a00000; // add x^12 * (33! / 12!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000048177ebe1fa812375200000; // add x^13 * (33! / 13!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000005263fe90242dcbacf00000; // add x^14 * (33! / 14!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000000000057e22099c030d94100000; // add x^15 * (33! / 15!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000057e22099c030d9410000; // add x^16 * (33! / 16!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000052b6b54569976310000; // add x^17 * (33! / 17!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000004985f67696bf748000; // add x^18 * (33! / 18!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000000000000003dea12ea99e498000; // add x^19 * (33! / 19!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000000031880f2214b6e000; // add x^20 * (33! / 20!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000000000000000025bcff56eb36000; // add x^21 * (33! / 21!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000000000000000001b722e10ab1000; // add x^22 * (33! / 22!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000001317c70077000; // add x^23 * (33! / 23!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000000000000cba84aafa00; // add x^24 * (33! / 24!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000000000000082573a0a00; // add x^25 * (33! / 25!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000000000000005035ad900; // add x^26 * (33! / 26!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x000000000000000000000002f881b00; // add x^27 * (33! / 27!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000000000001b29340; // add x^28 * (33! / 28!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x00000000000000000000000000efc40; // add x^29 * (33! / 29!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000000000000007fe0; // add x^30 * (33! / 30!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000000000000000420; // add x^31 * (33! / 31!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000000000000000021; // add x^32 * (33! / 32!)\r\n        xi = (xi * _x) >> _precision; res += xi * 0x0000000000000000000000000000001; // add x^33 * (33! / 33!)\r\n\r\n        return res / 0x688589cc0e9505e2f2fee5580000000 + _x + (ONE << _precision); // divide by 33! and then add x^1 / 1! + x^0 / 0!\r\n    }\r\n\r\n    /**\r\n        Return log(x / FIXED_1) * FIXED_1\r\n        Input range: FIXED_1 <= x <= LOG_EXP_MAX_VAL - 1\r\n        Auto-generated via 'PrintFunctionOptimalLog.py'\r\n        Detailed description:\r\n        - Rewrite the input as a product of natural exponents and a single residual r, such that 1 < r < 2\r\n        - The natural logarithm of each (pre-calculated) exponent is the degree of the exponent\r\n        - The natural logarithm of r is calculated via Taylor series for log(1 + x), where x = r - 1\r\n        - The natural logarithm of the input is calculated by summing up the intermediate results above\r\n        - For example: log(250) = log(e^4 * e^1 * e^0.5 * 1.021692859) = 4 + 1 + 0.5 + log(1 + 0.021692859)\r\n    */\r\n    function optimalLog(uint256 x) internal pure returns (uint256) {\r\n        uint256 res = 0;\r\n\r\n        uint256 y;\r\n        uint256 z;\r\n        uint256 w;\r\n\r\n        if (x >= 0xd3094c70f034de4b96ff7d5b6f99fcd8) {res += 0x40000000000000000000000000000000; x = x * FIXED_1 / 0xd3094c70f034de4b96ff7d5b6f99fcd8;} // add 1 / 2^1\r\n        if (x >= 0xa45af1e1f40c333b3de1db4dd55f29a7) {res += 0x20000000000000000000000000000000; x = x * FIXED_1 / 0xa45af1e1f40c333b3de1db4dd55f29a7;} // add 1 / 2^2\r\n        if (x >= 0x910b022db7ae67ce76b441c27035c6a1) {res += 0x10000000000000000000000000000000; x = x * FIXED_1 / 0x910b022db7ae67ce76b441c27035c6a1;} // add 1 / 2^3\r\n        if (x >= 0x88415abbe9a76bead8d00cf112e4d4a8) {res += 0x08000000000000000000000000000000; x = x * FIXED_1 / 0x88415abbe9a76bead8d00cf112e4d4a8;} // add 1 / 2^4\r\n        if (x >= 0x84102b00893f64c705e841d5d4064bd3) {res += 0x04000000000000000000000000000000; x = x * FIXED_1 / 0x84102b00893f64c705e841d5d4064bd3;} // add 1 / 2^5\r\n        if (x >= 0x8204055aaef1c8bd5c3259f4822735a2) {res += 0x02000000000000000000000000000000; x = x * FIXED_1 / 0x8204055aaef1c8bd5c3259f4822735a2;} // add 1 / 2^6\r\n        if (x >= 0x810100ab00222d861931c15e39b44e99) {res += 0x01000000000000000000000000000000; x = x * FIXED_1 / 0x810100ab00222d861931c15e39b44e99;} // add 1 / 2^7\r\n        if (x >= 0x808040155aabbbe9451521693554f733) {res += 0x00800000000000000000000000000000; x = x * FIXED_1 / 0x808040155aabbbe9451521693554f733;} // add 1 / 2^8\r\n\r\n        z = y = x - FIXED_1;\r\n        w = y * y / FIXED_1;\r\n        res += z * (0x100000000000000000000000000000000 - y) / 0x100000000000000000000000000000000; z = z * w / FIXED_1; // add y^01 / 01 - y^02 / 02\r\n        res += z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) / 0x200000000000000000000000000000000; z = z * w / FIXED_1; // add y^03 / 03 - y^04 / 04\r\n        res += z * (0x099999999999999999999999999999999 - y) / 0x300000000000000000000000000000000; z = z * w / FIXED_1; // add y^05 / 05 - y^06 / 06\r\n        res += z * (0x092492492492492492492492492492492 - y) / 0x400000000000000000000000000000000; z = z * w / FIXED_1; // add y^07 / 07 - y^08 / 08\r\n        res += z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) / 0x500000000000000000000000000000000; z = z * w / FIXED_1; // add y^09 / 09 - y^10 / 10\r\n        res += z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) / 0x600000000000000000000000000000000; z = z * w / FIXED_1; // add y^11 / 11 - y^12 / 12\r\n        res += z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) / 0x700000000000000000000000000000000; z = z * w / FIXED_1; // add y^13 / 13 - y^14 / 14\r\n        res += z * (0x088888888888888888888888888888888 - y) / 0x800000000000000000000000000000000;                      // add y^15 / 15 - y^16 / 16\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n        Return e ^ (x / FIXED_1) * FIXED_1\r\n        Input range: 0 <= x <= OPT_EXP_MAX_VAL - 1\r\n        Auto-generated via 'PrintFunctionOptimalExp.py'\r\n        Detailed description:\r\n        - Rewrite the input as a sum of binary exponents and a single residual r, as small as possible\r\n        - The exponentiation of each binary exponent is given (pre-calculated)\r\n        - The exponentiation of r is calculated via Taylor series for e^x, where x = r\r\n        - The exponentiation of the input is calculated by multiplying the intermediate results above\r\n        - For example: e^5.021692859 = e^(4 + 1 + 0.5 + 0.021692859) = e^4 * e^1 * e^0.5 * e^0.021692859\r\n    */\r\n    function optimalExp(uint256 x) internal pure returns (uint256) {\r\n        uint256 res = 0;\r\n\r\n        uint256 y;\r\n        uint256 z;\r\n\r\n        z = y = x % 0x10000000000000000000000000000000; // get the input modulo 2^(-3)\r\n        z = z * y / FIXED_1; res += z * 0x10e1b3be415a0000; // add y^02 * (20! / 02!)\r\n        z = z * y / FIXED_1; res += z * 0x05a0913f6b1e0000; // add y^03 * (20! / 03!)\r\n        z = z * y / FIXED_1; res += z * 0x0168244fdac78000; // add y^04 * (20! / 04!)\r\n        z = z * y / FIXED_1; res += z * 0x004807432bc18000; // add y^05 * (20! / 05!)\r\n        z = z * y / FIXED_1; res += z * 0x000c0135dca04000; // add y^06 * (20! / 06!)\r\n        z = z * y / FIXED_1; res += z * 0x0001b707b1cdc000; // add y^07 * (20! / 07!)\r\n        z = z * y / FIXED_1; res += z * 0x000036e0f639b800; // add y^08 * (20! / 08!)\r\n        z = z * y / FIXED_1; res += z * 0x00000618fee9f800; // add y^09 * (20! / 09!)\r\n        z = z * y / FIXED_1; res += z * 0x0000009c197dcc00; // add y^10 * (20! / 10!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000e30dce400; // add y^11 * (20! / 11!)\r\n        z = z * y / FIXED_1; res += z * 0x000000012ebd1300; // add y^12 * (20! / 12!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000017499f00; // add y^13 * (20! / 13!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000001a9d480; // add y^14 * (20! / 14!)\r\n        z = z * y / FIXED_1; res += z * 0x00000000001c6380; // add y^15 * (20! / 15!)\r\n        z = z * y / FIXED_1; res += z * 0x000000000001c638; // add y^16 * (20! / 16!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000000001ab8; // add y^17 * (20! / 17!)\r\n        z = z * y / FIXED_1; res += z * 0x000000000000017c; // add y^18 * (20! / 18!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000000000014; // add y^19 * (20! / 19!)\r\n        z = z * y / FIXED_1; res += z * 0x0000000000000001; // add y^20 * (20! / 20!)\r\n        res = res / 0x21c3677c82b40000 + y + FIXED_1; // divide by 20! and then add y^1 / 1! + y^0 / 0!\r\n\r\n        if ((x & 0x010000000000000000000000000000000) != 0) res = res * 0x1c3d6a24ed82218787d624d3e5eba95f9 / 0x18ebef9eac820ae8682b9793ac6d1e776; // multiply by e^2^(-3)\r\n        if ((x & 0x020000000000000000000000000000000) != 0) res = res * 0x18ebef9eac820ae8682b9793ac6d1e778 / 0x1368b2fc6f9609fe7aceb46aa619baed4; // multiply by e^2^(-2)\r\n        if ((x & 0x040000000000000000000000000000000) != 0) res = res * 0x1368b2fc6f9609fe7aceb46aa619baed5 / 0x0bc5ab1b16779be3575bd8f0520a9f21f; // multiply by e^2^(-1)\r\n        if ((x & 0x080000000000000000000000000000000) != 0) res = res * 0x0bc5ab1b16779be3575bd8f0520a9f21e / 0x0454aaa8efe072e7f6ddbab84b40a55c9; // multiply by e^2^(+0)\r\n        if ((x & 0x100000000000000000000000000000000) != 0) res = res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 / 0x00960aadc109e7a3bf4578099615711ea; // multiply by e^2^(+1)\r\n        if ((x & 0x200000000000000000000000000000000) != 0) res = res * 0x00960aadc109e7a3bf4578099615711d7 / 0x0002bf84208204f5977f9a8cf01fdce3d; // multiply by e^2^(+2)\r\n        if ((x & 0x400000000000000000000000000000000) != 0) res = res * 0x0002bf84208204f5977f9a8cf01fdc307 / 0x0000003c6ab775dd0b95b4cbee7e65d11; // multiply by e^2^(+3)\r\n\r\n        return res;\r\n    }\r\n}"
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.23;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BancorPower.sol": {
				"BancorPower": {
					"abi": [],
					"devdoc": {
						"details": "Changes include:  1. Remove Bancor's specific functions and replace SafeMath with OpenZeppelin's.  2. Change code from Contract to Library and change maxExpArray from being array     with binary search inside `findPositionInMaxExpArray` to a simple linear search.  3. Add requirement check that baseN >= baseD (this is always true for Bancor). Licensed under Apache Lisense, Version 2.0.",
						"kind": "dev",
						"methods": {},
						"title": "BancorPower, modified from the original \"BancorFomula.sol\"        written by Bancor https://github.com/bancorprotocol/contracts",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BancorPower.sol\":700:25226  library BancorPower {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BancorPower.sol\":700:25226  library BancorPower {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203321e90e58f47d12af916485f8de86f671bb365aed65f03d728e15e0234edd7864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203321e90e58f47d12af916485f8de86f671bb365aed65f03d728e15e0234edd7864736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x21 0xE9 0xE PC DELEGATECALL PUSH30 0x12AF916485F8DE86F671BB365AED65F03D728E15E0234EDD7864736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "700:24526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203321e90e58f47d12af916485f8de86f671bb365aed65f03d728e15e0234edd7864736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x21 0xE9 0xE PC DELEGATECALL PUSH30 0x12AF916485F8DE86F671BB365AED65F03D728E15E0234EDD7864736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "700:24526:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findPositionInMaxExpArray(uint256)": "infinite",
								"floorLog2(uint256)": "infinite",
								"generalExp(uint256,uint8)": "infinite",
								"generalLog(uint256)": "infinite",
								"log(uint256,uint256,uint256)": "infinite",
								"optimalExp(uint256)": "infinite",
								"optimalLog(uint256)": "infinite",
								"power(uint256,uint256,uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 700,
									"end": 25226,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203321e90e58f47d12af916485f8de86f671bb365aed65f03d728e15e0234edd7864736f6c63430008170033",
									".code": [
										{
											"begin": 700,
											"end": 25226,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 25226,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"BancorPower.sol",
								"Equation.sol",
								"openzeppelin-solidity/contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Changes include:  1. Remove Bancor's specific functions and replace SafeMath with OpenZeppelin's.  2. Change code from Contract to Library and change maxExpArray from being array     with binary search inside `findPositionInMaxExpArray` to a simple linear search.  3. Add requirement check that baseN >= baseD (this is always true for Bancor). Licensed under Apache Lisense, Version 2.0.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BancorPower, modified from the original \\\"BancorFomula.sol\\\"        written by Bancor https://github.com/bancorprotocol/contracts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BancorPower.sol\":\"BancorPower\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BancorPower.sol\":{\"keccak256\":\"0x57af7d4dbd6838243123a74ab2ffb1547105204c64d2f24d0352ea184c41db38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1de09b93e7d26869162c0ecc0bb08997a0efa35d41d3296bb8cfc96b70bd6fa\",\"dweb:/ipfs/QmYSYmwummE7v3GA3ukHrkEwSjLnafXQzj5CN8QP7HZNoc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x0c1300c35c12691b679fb7084ffa234e0b02067a3bdeb0731c406df87144df9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60b3868bf8e52d578558e064a0456c0e22d23afa64d8d3e12edd6329a2b7a302\",\"dweb:/ipfs/QmRzEYJmUfZ8DToEaLVaCbKg6GQgvnrTZamfQ5vsHZcZGr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Equation.sol": {
				"Equation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"init(Equation.Node[] storage,uint256[])": {
								"details": "Initialize equation by array of opcodes/values in prefix order. Array is read as if it is the *pre-order* traversal of the expression tree."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Equation.sol\":153:13493  library Equation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Equation.sol\":153:13493  library Equation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4dec36e3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8e501fc7\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":5576:5710  function calculate(Node[] storage self, uint256 xValue) external view returns (uint256) {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Equation.sol\":4685:5499  function init(Node[] storage self, uint256[] calldata _expressions) external {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Equation.sol\":5576:5710  function calculate(Node[] storage self, uint256 xValue) external view returns (uint256) {... */\n    tag_7:\n        /* \"Equation.sol\":5655:5662  uint256 */\n      0x00\n        /* \"Equation.sol\":5678:5704  solveMath(self, 0, xValue) */\n      tag_16\n        /* \"Equation.sol\":5688:5692  self */\n      dup4\n        /* \"Equation.sol\":5694:5695  0 */\n      0x00\n        /* \"Equation.sol\":5697:5703  xValue */\n      dup5\n        /* \"Equation.sol\":5678:5687  solveMath */\n      tag_17\n        /* \"Equation.sol\":5678:5704  solveMath(self, 0, xValue) */\n      jump\t// in\n    tag_16:\n        /* \"Equation.sol\":5671:5704  return solveMath(self, 0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":5576:5710  function calculate(Node[] storage self, uint256 xValue) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Equation.sol\":4685:5499  function init(Node[] storage self, uint256[] calldata _expressions) external {... */\n    tag_14:\n        /* \"Equation.sol\":4870:4871  0 */\n      0x00\n        /* \"Equation.sol\":4855:4859  self */\n      dup4\n        /* \"Equation.sol\":4855:4866  self.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Equation.sol\":4855:4871  self.length == 0 */\n      eq\n        /* \"Equation.sol\":4847:4872  require(self.length == 0) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"Equation.sol\":4987:4990  256 */\n      0x0100\n        /* \"Equation.sol\":4965:4977  _expressions */\n      dup3\n      dup3\n        /* \"Equation.sol\":4965:4984  _expressions.length */\n      swap1\n      pop\n        /* \"Equation.sol\":4965:4990  _expressions.length < 256 */\n      lt\n        /* \"Equation.sol\":4957:4991  require(_expressions.length < 256) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"Equation.sol\":5003:5012  uint8 idx */\n      0x00\n        /* \"Equation.sol\":4998:5393  for (uint8 idx = 0; idx < _expressions.length; ++idx) {... */\n    tag_21:\n        /* \"Equation.sol\":5024:5036  _expressions */\n      dup3\n      dup3\n        /* \"Equation.sol\":5024:5043  _expressions.length */\n      swap1\n      pop\n        /* \"Equation.sol\":5018:5021  idx */\n      dup2\n        /* \"Equation.sol\":5018:5043  idx < _expressions.length */\n      0xff\n      and\n      lt\n        /* \"Equation.sol\":4998:5393  for (uint8 idx = 0; idx < _expressions.length; ++idx) {... */\n      iszero\n      tag_22\n      jumpi\n        /* \"Equation.sol\":5061:5075  uint256 opcode */\n      0x00\n        /* \"Equation.sol\":5078:5090  _expressions */\n      dup4\n      dup4\n        /* \"Equation.sol\":5091:5094  idx */\n      dup4\n        /* \"Equation.sol\":5078:5095  _expressions[idx] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Equation.sol\":5061:5095  uint256 opcode = _expressions[idx] */\n      swap1\n      pop\n        /* \"Equation.sol\":4517:4519  21 */\n      0x15\n        /* \"Equation.sol\":5112:5135  opcode < OPCODE_INVALID */\n      0xff\n      and\n        /* \"Equation.sol\":5112:5118  opcode */\n      dup2\n        /* \"Equation.sol\":5112:5135  opcode < OPCODE_INVALID */\n      lt\n        /* \"Equation.sol\":5104:5136  require(opcode < OPCODE_INVALID) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"Equation.sol\":5145:5161  Node memory node */\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"Equation.sol\":5190:5196  opcode */\n      dup2\n        /* \"Equation.sol\":5170:5174  node */\n      dup2\n        /* \"Equation.sol\":5170:5181  node.opcode */\n      0x00\n      add\n        /* \"Equation.sol\":5170:5197  node.opcode = uint8(opcode) */\n      swap1\n      0xff\n      and\n      swap1\n      dup2\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Equation.sol\":3779:3780  0 */\n      0x00\n        /* \"Equation.sol\":5285:5307  opcode == OPCODE_CONST */\n      0xff\n      and\n        /* \"Equation.sol\":5285:5291  opcode */\n      dup3\n        /* \"Equation.sol\":5285:5307  opcode == OPCODE_CONST */\n      sub\n        /* \"Equation.sol\":5281:5362  if (opcode == OPCODE_CONST) {... */\n      tag_30\n      jumpi\n        /* \"Equation.sol\":5333:5345  _expressions */\n      dup5\n      dup5\n        /* \"Equation.sol\":5346:5351  ++idx */\n      dup5\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      swap5\n      pop\n      dup5\n        /* \"Equation.sol\":5333:5352  _expressions[++idx] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_33\n      jumpi\n      tag_34\n      tag_26\n      jump\t// in\n    tag_34:\n    tag_33:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Equation.sol\":5320:5324  node */\n      dup2\n        /* \"Equation.sol\":5320:5330  node.value */\n      0xa0\n      add\n        /* \"Equation.sol\":5320:5352  node.value = _expressions[++idx] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Equation.sol\":5281:5362  if (opcode == OPCODE_CONST) {... */\n    tag_30:\n        /* \"Equation.sol\":5370:5374  self */\n      dup6\n        /* \"Equation.sol\":5380:5384  node */\n      dup2\n        /* \"Equation.sol\":5370:5385  self.push(node) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x02)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x03)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"Equation.sol\":5052:5393  {... */\n      pop\n      pop\n        /* \"Equation.sol\":5045:5050  ++idx */\n      dup1\n      tag_36\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      swap1\n      pop\n        /* \"Equation.sol\":4998:5393  for (uint8 idx = 0; idx < _expressions.length; ++idx) {... */\n      jump(tag_21)\n    tag_22:\n      pop\n        /* \"Equation.sol\":5400:5419  uint8 lastNodeIndex */\n      0x00\n        /* \"Equation.sol\":5424:5445  populateTree(self, 0) */\n      tag_37\n        /* \"Equation.sol\":5437:5441  self */\n      dup5\n        /* \"Equation.sol\":5443:5444  0 */\n      0x00\n        /* \"Equation.sol\":5424:5436  populateTree */\n      tag_38\n        /* \"Equation.sol\":5424:5445  populateTree(self, 0) */\n      jump\t// in\n    tag_37:\n        /* \"Equation.sol\":5399:5445  (uint8 lastNodeIndex,) = populateTree(self, 0) */\n      pop\n      swap1\n      pop\n        /* \"Equation.sol\":5491:5492  1 */\n      0x01\n        /* \"Equation.sol\":5477:5481  self */\n      dup5\n        /* \"Equation.sol\":5477:5488  self.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Equation.sol\":5477:5492  self.length - 1 */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"Equation.sol\":5460:5473  lastNodeIndex */\n      dup2\n        /* \"Equation.sol\":5460:5492  lastNodeIndex == self.length - 1 */\n      0xff\n      and\n      eq\n        /* \"Equation.sol\":5452:5493  require(lastNodeIndex == self.length - 1) */\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n        /* \"Equation.sol\":4762:5499  {... */\n      pop\n        /* \"Equation.sol\":4685:5499  function init(Node[] storage self, uint256[] calldata _expressions) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Equation.sol\":9318:11865  function solveMath(Node[] storage self, uint8 nodeIdx, uint256 xValue)... */\n    tag_17:\n        /* \"Equation.sol\":9416:9423  uint256 */\n      0x00\n        /* \"Equation.sol\":9435:9452  Node storage node */\n      dup1\n        /* \"Equation.sol\":9455:9459  self */\n      dup5\n        /* \"Equation.sol\":9460:9467  nodeIdx */\n      dup5\n        /* \"Equation.sol\":9455:9468  self[nodeIdx] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      tag_44\n      tag_26\n      jump\t// in\n    tag_44:\n    tag_43:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Equation.sol\":9435:9468  Node storage node = self[nodeIdx] */\n      swap1\n      pop\n        /* \"Equation.sol\":9475:9487  uint8 opcode */\n      0x00\n        /* \"Equation.sol\":9490:9494  node */\n      dup2\n        /* \"Equation.sol\":9490:9501  node.opcode */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":9475:9501  uint8 opcode = node.opcode */\n      swap1\n      pop\n        /* \"Equation.sol\":3779:3780  0 */\n      0x00\n        /* \"Equation.sol\":9512:9534  opcode == OPCODE_CONST */\n      0xff\n      and\n        /* \"Equation.sol\":9512:9518  opcode */\n      dup2\n        /* \"Equation.sol\":9512:9534  opcode == OPCODE_CONST */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":9508:11845  if (opcode == OPCODE_CONST) {... */\n      tag_46\n      jumpi\n        /* \"Equation.sol\":9552:9556  node */\n      dup2\n        /* \"Equation.sol\":9552:9562  node.value */\n      0x01\n      add\n      sload\n        /* \"Equation.sol\":9545:9562  return node.value */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":9508:11845  if (opcode == OPCODE_CONST) {... */\n    tag_46:\n        /* \"Equation.sol\":3813:3814  1 */\n      0x01\n        /* \"Equation.sol\":9580:9600  opcode == OPCODE_VAR */\n      0xff\n      and\n        /* \"Equation.sol\":9580:9586  opcode */\n      dup2\n        /* \"Equation.sol\":9580:9600  opcode == OPCODE_VAR */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":9576:11845  if (opcode == OPCODE_VAR) {... */\n      tag_48\n      jumpi\n        /* \"Equation.sol\":9618:9624  xValue */\n      dup4\n        /* \"Equation.sol\":9611:9624  return xValue */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":9576:11845  if (opcode == OPCODE_VAR) {... */\n    tag_48:\n        /* \"Equation.sol\":3848:3849  2 */\n      0x02\n        /* \"Equation.sol\":9642:9663  opcode == OPCODE_SQRT */\n      0xff\n      and\n        /* \"Equation.sol\":9642:9648  opcode */\n      dup2\n        /* \"Equation.sol\":9642:9663  opcode == OPCODE_SQRT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":9638:11845  if (opcode == OPCODE_SQRT) {... */\n      tag_50\n      jumpi\n        /* \"Equation.sol\":9674:9692  uint256 childValue */\n      0x00\n        /* \"Equation.sol\":9695:9731  solveMath(self, node.child0, xValue) */\n      tag_51\n        /* \"Equation.sol\":9705:9709  self */\n      dup8\n        /* \"Equation.sol\":9711:9715  node */\n      dup5\n        /* \"Equation.sol\":9711:9722  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":9724:9730  xValue */\n      dup8\n        /* \"Equation.sol\":9695:9704  solveMath */\n      tag_17\n        /* \"Equation.sol\":9695:9731  solveMath(self, node.child0, xValue) */\n      jump\t// in\n    tag_51:\n        /* \"Equation.sol\":9674:9731  uint256 childValue = solveMath(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":9740:9752  uint256 temp */\n      0x00\n        /* \"Equation.sol\":9755:9779  childValue.add(1).div(2) */\n      tag_52\n        /* \"Equation.sol\":9777:9778  2 */\n      0x02\n        /* \"Equation.sol\":9755:9772  childValue.add(1) */\n      tag_53\n        /* \"Equation.sol\":9770:9771  1 */\n      0x01\n        /* \"Equation.sol\":9755:9765  childValue */\n      dup6\n        /* \"Equation.sol\":9755:9769  childValue.add */\n      tag_54\n      swap1\n        /* \"Equation.sol\":9755:9772  childValue.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"Equation.sol\":9755:9776  childValue.add(1).div */\n      tag_55\n      swap1\n        /* \"Equation.sol\":9755:9779  childValue.add(1).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"Equation.sol\":9740:9779  uint256 temp = childValue.add(1).div(2) */\n      swap1\n      pop\n        /* \"Equation.sol\":9788:9802  uint256 result */\n      0x00\n        /* \"Equation.sol\":9805:9815  childValue */\n      dup3\n        /* \"Equation.sol\":9788:9815  uint256 result = childValue */\n      swap1\n      pop\n        /* \"Equation.sol\":9824:9935  while (temp < result) {... */\n    tag_56:\n        /* \"Equation.sol\":9838:9844  result */\n      dup1\n        /* \"Equation.sol\":9831:9835  temp */\n      dup3\n        /* \"Equation.sol\":9831:9844  temp < result */\n      lt\n        /* \"Equation.sol\":9824:9935  while (temp < result) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"Equation.sol\":9866:9870  temp */\n      dup2\n        /* \"Equation.sol\":9857:9870  result = temp */\n      swap1\n      pop\n        /* \"Equation.sol\":9888:9925  childValue.div(temp).add(temp).div(2) */\n      tag_58\n        /* \"Equation.sol\":9923:9924  2 */\n      0x02\n        /* \"Equation.sol\":9888:9918  childValue.div(temp).add(temp) */\n      tag_59\n        /* \"Equation.sol\":9913:9917  temp */\n      dup5\n        /* \"Equation.sol\":9888:9908  childValue.div(temp) */\n      tag_60\n        /* \"Equation.sol\":9903:9907  temp */\n      dup7\n        /* \"Equation.sol\":9888:9898  childValue */\n      dup9\n        /* \"Equation.sol\":9888:9902  childValue.div */\n      tag_55\n      swap1\n        /* \"Equation.sol\":9888:9908  childValue.div(temp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"Equation.sol\":9888:9912  childValue.div(temp).add */\n      tag_54\n      swap1\n        /* \"Equation.sol\":9888:9918  childValue.div(temp).add(temp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"Equation.sol\":9888:9922  childValue.div(temp).add(temp).div */\n      tag_55\n      swap1\n        /* \"Equation.sol\":9888:9925  childValue.div(temp).add(temp).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"Equation.sol\":9881:9925  temp = childValue.div(temp).add(temp).div(2) */\n      swap2\n      pop\n        /* \"Equation.sol\":9824:9935  while (temp < result) {... */\n      jump(tag_56)\n    tag_57:\n        /* \"Equation.sol\":9950:9956  result */\n      dup1\n        /* \"Equation.sol\":9943:9956  return result */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":9638:11845  if (opcode == OPCODE_SQRT) {... */\n    tag_50:\n        /* \"Equation.sol\":3916:3917  4 */\n      0x04\n        /* \"Equation.sol\":9974:9994  opcode >= OPCODE_ADD */\n      0xff\n      and\n        /* \"Equation.sol\":9974:9980  opcode */\n      dup2\n        /* \"Equation.sol\":9974:9994  opcode >= OPCODE_ADD */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":9974:10018  opcode >= OPCODE_ADD && opcode <= OPCODE_PCT */\n      dup1\n      iszero\n      tag_62\n      jumpi\n      pop\n        /* \"Equation.sol\":4086:4087  9 */\n      0x09\n        /* \"Equation.sol\":9998:10018  opcode <= OPCODE_PCT */\n      0xff\n      and\n        /* \"Equation.sol\":9998:10004  opcode */\n      dup2\n        /* \"Equation.sol\":9998:10018  opcode <= OPCODE_PCT */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":9974:10018  opcode >= OPCODE_ADD && opcode <= OPCODE_PCT */\n    tag_62:\n        /* \"Equation.sol\":9970:11845  if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"Equation.sol\":10029:10046  uint256 leftValue */\n      0x00\n        /* \"Equation.sol\":10049:10085  solveMath(self, node.child0, xValue) */\n      tag_64\n        /* \"Equation.sol\":10059:10063  self */\n      dup8\n        /* \"Equation.sol\":10065:10069  node */\n      dup5\n        /* \"Equation.sol\":10065:10076  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":10078:10084  xValue */\n      dup8\n        /* \"Equation.sol\":10049:10058  solveMath */\n      tag_17\n        /* \"Equation.sol\":10049:10085  solveMath(self, node.child0, xValue) */\n      jump\t// in\n    tag_64:\n        /* \"Equation.sol\":10029:10085  uint256 leftValue = solveMath(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":10094:10112  uint256 rightValue */\n      0x00\n        /* \"Equation.sol\":10115:10151  solveMath(self, node.child1, xValue) */\n      tag_65\n        /* \"Equation.sol\":10125:10129  self */\n      dup9\n        /* \"Equation.sol\":10131:10135  node */\n      dup6\n        /* \"Equation.sol\":10131:10142  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":10144:10150  xValue */\n      dup9\n        /* \"Equation.sol\":10115:10124  solveMath */\n      tag_17\n        /* \"Equation.sol\":10115:10151  solveMath(self, node.child1, xValue) */\n      jump\t// in\n    tag_65:\n        /* \"Equation.sol\":10094:10151  uint256 rightValue = solveMath(self, node.child1, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":3916:3917  4 */\n      0x04\n        /* \"Equation.sol\":10164:10184  opcode == OPCODE_ADD */\n      0xff\n      and\n        /* \"Equation.sol\":10164:10170  opcode */\n      dup4\n        /* \"Equation.sol\":10164:10184  opcode == OPCODE_ADD */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10160:10840  if (opcode == OPCODE_ADD) {... */\n      tag_66\n      jumpi\n        /* \"Equation.sol\":10204:10229  leftValue.add(rightValue) */\n      tag_67\n        /* \"Equation.sol\":10218:10228  rightValue */\n      dup2\n        /* \"Equation.sol\":10204:10213  leftValue */\n      dup4\n        /* \"Equation.sol\":10204:10217  leftValue.add */\n      tag_54\n      swap1\n        /* \"Equation.sol\":10204:10229  leftValue.add(rightValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"Equation.sol\":10197:10229  return leftValue.add(rightValue) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10160:10840  if (opcode == OPCODE_ADD) {... */\n    tag_66:\n        /* \"Equation.sol\":3950:3951  5 */\n      0x05\n        /* \"Equation.sol\":10249:10269  opcode == OPCODE_SUB */\n      0xff\n      and\n        /* \"Equation.sol\":10249:10255  opcode */\n      dup4\n        /* \"Equation.sol\":10249:10269  opcode == OPCODE_SUB */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10245:10840  if (opcode == OPCODE_SUB) {... */\n      tag_69\n      jumpi\n        /* \"Equation.sol\":10289:10314  leftValue.sub(rightValue) */\n      tag_70\n        /* \"Equation.sol\":10303:10313  rightValue */\n      dup2\n        /* \"Equation.sol\":10289:10298  leftValue */\n      dup4\n        /* \"Equation.sol\":10289:10302  leftValue.sub */\n      tag_71\n      swap1\n        /* \"Equation.sol\":10289:10314  leftValue.sub(rightValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Equation.sol\":10282:10314  return leftValue.sub(rightValue) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10245:10840  if (opcode == OPCODE_SUB) {... */\n    tag_69:\n        /* \"Equation.sol\":3984:3985  6 */\n      0x06\n        /* \"Equation.sol\":10334:10354  opcode == OPCODE_MUL */\n      0xff\n      and\n        /* \"Equation.sol\":10334:10340  opcode */\n      dup4\n        /* \"Equation.sol\":10334:10354  opcode == OPCODE_MUL */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10330:10840  if (opcode == OPCODE_MUL) {... */\n      tag_73\n      jumpi\n        /* \"Equation.sol\":10374:10399  leftValue.mul(rightValue) */\n      tag_74\n        /* \"Equation.sol\":10388:10398  rightValue */\n      dup2\n        /* \"Equation.sol\":10374:10383  leftValue */\n      dup4\n        /* \"Equation.sol\":10374:10387  leftValue.mul */\n      tag_75\n      swap1\n        /* \"Equation.sol\":10374:10399  leftValue.mul(rightValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"Equation.sol\":10367:10399  return leftValue.mul(rightValue) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10330:10840  if (opcode == OPCODE_MUL) {... */\n    tag_73:\n        /* \"Equation.sol\":4018:4019  7 */\n      0x07\n        /* \"Equation.sol\":10419:10439  opcode == OPCODE_DIV */\n      0xff\n      and\n        /* \"Equation.sol\":10419:10425  opcode */\n      dup4\n        /* \"Equation.sol\":10419:10439  opcode == OPCODE_DIV */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10415:10840  if (opcode == OPCODE_DIV) {... */\n      tag_77\n      jumpi\n        /* \"Equation.sol\":10459:10484  leftValue.div(rightValue) */\n      tag_78\n        /* \"Equation.sol\":10473:10483  rightValue */\n      dup2\n        /* \"Equation.sol\":10459:10468  leftValue */\n      dup4\n        /* \"Equation.sol\":10459:10472  leftValue.div */\n      tag_55\n      swap1\n        /* \"Equation.sol\":10459:10484  leftValue.div(rightValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"Equation.sol\":10452:10484  return leftValue.div(rightValue) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10415:10840  if (opcode == OPCODE_DIV) {... */\n    tag_77:\n        /* \"Equation.sol\":4052:4053  8 */\n      0x08\n        /* \"Equation.sol\":10504:10524  opcode == OPCODE_EXP */\n      0xff\n      and\n        /* \"Equation.sol\":10504:10510  opcode */\n      dup4\n        /* \"Equation.sol\":10504:10524  opcode == OPCODE_EXP */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10500:10840  if (opcode == OPCODE_EXP) {... */\n      tag_80\n      jumpi\n        /* \"Equation.sol\":10537:10550  uint256 power */\n      0x00\n        /* \"Equation.sol\":10553:10563  rightValue */\n      dup2\n        /* \"Equation.sol\":10537:10563  uint256 power = rightValue */\n      swap1\n      pop\n        /* \"Equation.sol\":10574:10591  uint256 expResult */\n      0x00\n        /* \"Equation.sol\":10594:10595  1 */\n      0x01\n        /* \"Equation.sol\":10574:10595  uint256 expResult = 1 */\n      swap1\n      pop\n        /* \"Equation.sol\":10611:10622  uint256 idx */\n      0x00\n        /* \"Equation.sol\":10606:10709  for (uint256 idx = 0; idx < power; ++idx) {... */\n    tag_81:\n        /* \"Equation.sol\":10634:10639  power */\n      dup3\n        /* \"Equation.sol\":10628:10631  idx */\n      dup2\n        /* \"Equation.sol\":10628:10639  idx < power */\n      lt\n        /* \"Equation.sol\":10606:10709  for (uint256 idx = 0; idx < power; ++idx) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"Equation.sol\":10673:10697  expResult.mul(leftValue) */\n      tag_84\n        /* \"Equation.sol\":10687:10696  leftValue */\n      dup6\n        /* \"Equation.sol\":10673:10682  expResult */\n      dup4\n        /* \"Equation.sol\":10673:10686  expResult.mul */\n      tag_75\n      swap1\n        /* \"Equation.sol\":10673:10697  expResult.mul(leftValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"Equation.sol\":10661:10697  expResult = expResult.mul(leftValue) */\n      swap2\n      pop\n        /* \"Equation.sol\":10641:10646  ++idx */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Equation.sol\":10606:10709  for (uint256 idx = 0; idx < power; ++idx) {... */\n      jump(tag_81)\n    tag_82:\n      pop\n        /* \"Equation.sol\":10726:10735  expResult */\n      dup1\n        /* \"Equation.sol\":10719:10735  return expResult */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10500:10840  if (opcode == OPCODE_EXP) {... */\n    tag_80:\n        /* \"Equation.sol\":4086:4087  9 */\n      0x09\n        /* \"Equation.sol\":10755:10775  opcode == OPCODE_PCT */\n      0xff\n      and\n        /* \"Equation.sol\":10755:10761  opcode */\n      dup4\n        /* \"Equation.sol\":10755:10775  opcode == OPCODE_PCT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10751:10840  if (opcode == OPCODE_PCT) {... */\n      tag_86\n      jumpi\n        /* \"Equation.sol\":10795:10830  leftValue.mul(rightValue).div(1e18) */\n      tag_87\n        /* \"Equation.sol\":10825:10829  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Equation.sol\":10795:10820  leftValue.mul(rightValue) */\n      tag_88\n        /* \"Equation.sol\":10809:10819  rightValue */\n      dup4\n        /* \"Equation.sol\":10795:10804  leftValue */\n      dup6\n        /* \"Equation.sol\":10795:10808  leftValue.mul */\n      tag_75\n      swap1\n        /* \"Equation.sol\":10795:10820  leftValue.mul(rightValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"Equation.sol\":10795:10824  leftValue.mul(rightValue).div */\n      tag_55\n      swap1\n        /* \"Equation.sol\":10795:10830  leftValue.mul(rightValue).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"Equation.sol\":10788:10830  return leftValue.mul(rightValue).div(1e18) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10751:10840  if (opcode == OPCODE_PCT) {... */\n    tag_86:\n        /* \"Equation.sol\":10020:10847  {... */\n      pop\n      pop\n        /* \"Equation.sol\":9970:11845  if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {... */\n      jump(tag_89)\n    tag_63:\n        /* \"Equation.sol\":4392:4394  18 */\n      0x12\n        /* \"Equation.sol\":10857:10876  opcode == OPCODE_IF */\n      0xff\n      and\n        /* \"Equation.sol\":10857:10863  opcode */\n      dup2\n        /* \"Equation.sol\":10857:10876  opcode == OPCODE_IF */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":10853:11845  if (opcode == OPCODE_IF) {... */\n      tag_90\n      jumpi\n        /* \"Equation.sol\":10887:10901  bool condValue */\n      0x00\n        /* \"Equation.sol\":10904:10940  solveBool(self, node.child0, xValue) */\n      tag_91\n        /* \"Equation.sol\":10914:10918  self */\n      dup8\n        /* \"Equation.sol\":10920:10924  node */\n      dup5\n        /* \"Equation.sol\":10920:10931  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":10933:10939  xValue */\n      dup8\n        /* \"Equation.sol\":10904:10913  solveBool */\n      tag_92\n        /* \"Equation.sol\":10904:10940  solveBool(self, node.child0, xValue) */\n      jump\t// in\n    tag_91:\n        /* \"Equation.sol\":10887:10940  bool condValue = solveBool(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":10953:10962  condValue */\n      dup1\n        /* \"Equation.sol\":10949:11064  if (condValue) return solveMath(self, node.child1, xValue);... */\n      iszero\n      tag_93\n      jumpi\n        /* \"Equation.sol\":10971:11007  solveMath(self, node.child1, xValue) */\n      tag_94\n        /* \"Equation.sol\":10981:10985  self */\n      dup8\n        /* \"Equation.sol\":10987:10991  node */\n      dup5\n        /* \"Equation.sol\":10987:10998  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11000:11006  xValue */\n      dup8\n        /* \"Equation.sol\":10971:10980  solveMath */\n      tag_17\n        /* \"Equation.sol\":10971:11007  solveMath(self, node.child1, xValue) */\n      jump\t// in\n    tag_94:\n        /* \"Equation.sol\":10964:11007  return solveMath(self, node.child1, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10949:11064  if (condValue) return solveMath(self, node.child1, xValue);... */\n    tag_93:\n        /* \"Equation.sol\":11028:11064  solveMath(self, node.child2, xValue) */\n      tag_96\n        /* \"Equation.sol\":11038:11042  self */\n      dup8\n        /* \"Equation.sol\":11044:11048  node */\n      dup5\n        /* \"Equation.sol\":11044:11055  node.child2 */\n      0x00\n      add\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11057:11063  xValue */\n      dup8\n        /* \"Equation.sol\":11028:11037  solveMath */\n      tag_17\n        /* \"Equation.sol\":11028:11064  solveMath(self, node.child2, xValue) */\n      jump\t// in\n    tag_96:\n        /* \"Equation.sol\":11021:11064  return solveMath(self, node.child2, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":10853:11845  if (opcode == OPCODE_IF) {... */\n    tag_90:\n        /* \"Equation.sol\":4434:4436  19 */\n      0x13\n        /* \"Equation.sol\":11082:11109  opcode == OPCODE_BANCOR_LOG */\n      0xff\n      and\n        /* \"Equation.sol\":11082:11088  opcode */\n      dup2\n        /* \"Equation.sol\":11082:11109  opcode == OPCODE_BANCOR_LOG */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":11078:11845  if (opcode == OPCODE_BANCOR_LOG) {... */\n      tag_98\n      jumpi\n        /* \"Equation.sol\":11120:11138  uint256 multiplier */\n      0x00\n        /* \"Equation.sol\":11141:11177  solveMath(self, node.child0, xValue) */\n      tag_99\n        /* \"Equation.sol\":11151:11155  self */\n      dup8\n        /* \"Equation.sol\":11157:11161  node */\n      dup5\n        /* \"Equation.sol\":11157:11168  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11170:11176  xValue */\n      dup8\n        /* \"Equation.sol\":11141:11150  solveMath */\n      tag_17\n        /* \"Equation.sol\":11141:11177  solveMath(self, node.child0, xValue) */\n      jump\t// in\n    tag_99:\n        /* \"Equation.sol\":11120:11177  uint256 multiplier = solveMath(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11186:11199  uint256 baseN */\n      0x00\n        /* \"Equation.sol\":11202:11238  solveMath(self, node.child1, xValue) */\n      tag_100\n        /* \"Equation.sol\":11212:11216  self */\n      dup9\n        /* \"Equation.sol\":11218:11222  node */\n      dup6\n        /* \"Equation.sol\":11218:11229  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11231:11237  xValue */\n      dup9\n        /* \"Equation.sol\":11202:11211  solveMath */\n      tag_17\n        /* \"Equation.sol\":11202:11238  solveMath(self, node.child1, xValue) */\n      jump\t// in\n    tag_100:\n        /* \"Equation.sol\":11186:11238  uint256 baseN = solveMath(self, node.child1, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11247:11260  uint256 baseD */\n      0x00\n        /* \"Equation.sol\":11263:11299  solveMath(self, node.child2, xValue) */\n      tag_101\n        /* \"Equation.sol\":11273:11277  self */\n      dup10\n        /* \"Equation.sol\":11279:11283  node */\n      dup7\n        /* \"Equation.sol\":11279:11290  node.child2 */\n      0x00\n      add\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11292:11298  xValue */\n      dup10\n        /* \"Equation.sol\":11263:11272  solveMath */\n      tag_17\n        /* \"Equation.sol\":11263:11299  solveMath(self, node.child2, xValue) */\n      jump\t// in\n    tag_101:\n        /* \"Equation.sol\":11247:11299  uint256 baseD = solveMath(self, node.child2, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11315:11356  BancorPower.log(multiplier, baseN, baseD) */\n      tag_102\n        /* \"Equation.sol\":11331:11341  multiplier */\n      dup4\n        /* \"Equation.sol\":11343:11348  baseN */\n      dup4\n        /* \"Equation.sol\":11350:11355  baseD */\n      dup4\n        /* \"Equation.sol\":11315:11330  BancorPower.log */\n      tag_103\n        /* \"Equation.sol\":11315:11356  BancorPower.log(multiplier, baseN, baseD) */\n      jump\t// in\n    tag_102:\n        /* \"Equation.sol\":11308:11356  return BancorPower.log(multiplier, baseN, baseD) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":11078:11845  if (opcode == OPCODE_BANCOR_LOG) {... */\n    tag_98:\n        /* \"Equation.sol\":4478:4480  20 */\n      0x14\n        /* \"Equation.sol\":11374:11403  opcode == OPCODE_BANCOR_POWER */\n      0xff\n      and\n        /* \"Equation.sol\":11374:11380  opcode */\n      dup2\n        /* \"Equation.sol\":11374:11403  opcode == OPCODE_BANCOR_POWER */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":11370:11845  if (opcode == OPCODE_BANCOR_POWER) {... */\n      tag_105\n      jumpi\n        /* \"Equation.sol\":11414:11432  uint256 multiplier */\n      0x00\n        /* \"Equation.sol\":11435:11471  solveMath(self, node.child0, xValue) */\n      tag_106\n        /* \"Equation.sol\":11445:11449  self */\n      dup8\n        /* \"Equation.sol\":11451:11455  node */\n      dup5\n        /* \"Equation.sol\":11451:11462  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11464:11470  xValue */\n      dup8\n        /* \"Equation.sol\":11435:11444  solveMath */\n      tag_17\n        /* \"Equation.sol\":11435:11471  solveMath(self, node.child0, xValue) */\n      jump\t// in\n    tag_106:\n        /* \"Equation.sol\":11414:11471  uint256 multiplier = solveMath(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11480:11493  uint256 baseN */\n      0x00\n        /* \"Equation.sol\":11496:11532  solveMath(self, node.child1, xValue) */\n      tag_107\n        /* \"Equation.sol\":11506:11510  self */\n      dup9\n        /* \"Equation.sol\":11512:11516  node */\n      dup6\n        /* \"Equation.sol\":11512:11523  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11525:11531  xValue */\n      dup9\n        /* \"Equation.sol\":11496:11505  solveMath */\n      tag_17\n        /* \"Equation.sol\":11496:11532  solveMath(self, node.child1, xValue) */\n      jump\t// in\n    tag_107:\n        /* \"Equation.sol\":11480:11532  uint256 baseN = solveMath(self, node.child1, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11541:11554  uint256 baseD */\n      0x00\n        /* \"Equation.sol\":11557:11593  solveMath(self, node.child2, xValue) */\n      tag_108\n        /* \"Equation.sol\":11567:11571  self */\n      dup10\n        /* \"Equation.sol\":11573:11577  node */\n      dup7\n        /* \"Equation.sol\":11573:11584  node.child2 */\n      0x00\n      add\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11586:11592  xValue */\n      dup10\n        /* \"Equation.sol\":11557:11566  solveMath */\n      tag_17\n        /* \"Equation.sol\":11557:11593  solveMath(self, node.child2, xValue) */\n      jump\t// in\n    tag_108:\n        /* \"Equation.sol\":11541:11593  uint256 baseD = solveMath(self, node.child2, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11602:11614  uint256 expV */\n      0x00\n        /* \"Equation.sol\":11617:11653  solveMath(self, node.child3, xValue) */\n      tag_109\n        /* \"Equation.sol\":11627:11631  self */\n      dup11\n        /* \"Equation.sol\":11633:11637  node */\n      dup8\n        /* \"Equation.sol\":11633:11644  node.child3 */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":11646:11652  xValue */\n      dup11\n        /* \"Equation.sol\":11617:11626  solveMath */\n      tag_17\n        /* \"Equation.sol\":11617:11653  solveMath(self, node.child3, xValue) */\n      jump\t// in\n    tag_109:\n        /* \"Equation.sol\":11602:11653  uint256 expV = solveMath(self, node.child3, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":11677:11684  1 << 32 */\n      0x0100000000\n        /* \"Equation.sol\":11670:11674  expV */\n      dup2\n        /* \"Equation.sol\":11670:11684  expV < 1 << 32 */\n      lt\n        /* \"Equation.sol\":11662:11685  require(expV < 1 << 32) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"Equation.sol\":11695:11712  uint256 expResult */\n      0x00\n        /* \"Equation.sol\":11714:11729  uint8 precision */\n      dup1\n        /* \"Equation.sol\":11733:11783  BancorPower.power(baseN, baseD, uint32(expV), 1e6) */\n      tag_111\n        /* \"Equation.sol\":11751:11756  baseN */\n      dup6\n        /* \"Equation.sol\":11758:11763  baseD */\n      dup6\n        /* \"Equation.sol\":11772:11776  expV */\n      dup6\n        /* \"Equation.sol\":11779:11782  1e6 */\n      0x0f4240\n        /* \"Equation.sol\":11733:11750  BancorPower.power */\n      tag_112\n        /* \"Equation.sol\":11733:11783  BancorPower.power(baseN, baseD, uint32(expV), 1e6) */\n      jump\t// in\n    tag_111:\n        /* \"Equation.sol\":11694:11783  (uint256 expResult, uint8 precision) = BancorPower.power(baseN, baseD, uint32(expV), 1e6) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Equation.sol\":11828:11837  precision */\n      dup1\n        /* \"Equation.sol\":11799:11837  expResult.mul(multiplier) >> precision */\n      0xff\n      and\n        /* \"Equation.sol\":11799:11824  expResult.mul(multiplier) */\n      tag_113\n        /* \"Equation.sol\":11813:11823  multiplier */\n      dup8\n        /* \"Equation.sol\":11799:11808  expResult */\n      dup5\n        /* \"Equation.sol\":11799:11812  expResult.mul */\n      tag_75\n      swap1\n        /* \"Equation.sol\":11799:11824  expResult.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"Equation.sol\":11799:11837  expResult.mul(multiplier) >> precision */\n      swap1\n      shr\n        /* \"Equation.sol\":11792:11837  return expResult.mul(multiplier) >> precision */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n        /* \"Equation.sol\":11370:11845  if (opcode == OPCODE_BANCOR_POWER) {... */\n    tag_105:\n        /* \"Equation.sol\":9970:11845  if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {... */\n    tag_89:\n        /* \"Equation.sol\":11851:11859  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":9318:11865  function solveMath(Node[] storage self, uint8 nodeIdx, uint256 xValue)... */\n    tag_42:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Equation.sol\":8414:9310  function populateTree(Node[] storage self, uint8 currentNodeIndex)... */\n    tag_38:\n        /* \"Equation.sol\":8503:8508  uint8 */\n      0x00\n        /* \"Equation.sol\":8510:8518  ExprType */\n      dup1\n        /* \"Equation.sol\":8557:8561  self */\n      dup4\n        /* \"Equation.sol\":8557:8568  self.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Equation.sol\":8538:8554  currentNodeIndex */\n      dup4\n        /* \"Equation.sol\":8538:8568  currentNodeIndex < self.length */\n      0xff\n      and\n      lt\n        /* \"Equation.sol\":8530:8569  require(currentNodeIndex < self.length) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"Equation.sol\":8576:8593  Node storage node */\n      0x00\n        /* \"Equation.sol\":8596:8600  self */\n      dup5\n        /* \"Equation.sol\":8601:8617  currentNodeIndex */\n      dup5\n        /* \"Equation.sol\":8596:8618  self[currentNodeIndex] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_26\n      jump\t// in\n    tag_117:\n    tag_116:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Equation.sol\":8576:8618  Node storage node = self[currentNodeIndex] */\n      swap1\n      pop\n        /* \"Equation.sol\":8625:8637  uint8 opcode */\n      0x00\n        /* \"Equation.sol\":8640:8644  node */\n      dup2\n        /* \"Equation.sol\":8640:8651  node.opcode */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":8625:8651  uint8 opcode = node.opcode */\n      swap1\n      pop\n        /* \"Equation.sol\":8658:8677  uint8 childrenCount */\n      0x00\n        /* \"Equation.sol\":8680:8704  getChildrenCount(opcode) */\n      tag_119\n        /* \"Equation.sol\":8697:8703  opcode */\n      dup3\n        /* \"Equation.sol\":8680:8696  getChildrenCount */\n      tag_120\n        /* \"Equation.sol\":8680:8704  getChildrenCount(opcode) */\n      jump\t// in\n    tag_119:\n        /* \"Equation.sol\":8658:8704  uint8 childrenCount = getChildrenCount(opcode) */\n      swap1\n      pop\n        /* \"Equation.sol\":8711:8742  ExprType[] memory childrenTypes */\n      0x00\n        /* \"Equation.sol\":8760:8773  childrenCount */\n      dup2\n        /* \"Equation.sol\":8745:8774  new ExprType[](childrenCount) */\n      0xff\n      and\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"Equation.sol\":8711:8774  ExprType[] memory childrenTypes = new ExprType[](childrenCount) */\n      swap1\n      pop\n        /* \"Equation.sol\":8781:8798  uint8 lastNodeIdx */\n      0x00\n        /* \"Equation.sol\":8801:8817  currentNodeIndex */\n      dup8\n        /* \"Equation.sol\":8781:8817  uint8 lastNodeIdx = currentNodeIndex */\n      swap1\n      pop\n        /* \"Equation.sol\":8829:8838  uint8 idx */\n      0x00\n        /* \"Equation.sol\":8824:9205  for (uint8 idx = 0; idx < childrenCount; ++idx) {... */\n    tag_125:\n        /* \"Equation.sol\":8850:8863  childrenCount */\n      dup4\n        /* \"Equation.sol\":8844:8863  idx < childrenCount */\n      0xff\n      and\n        /* \"Equation.sol\":8844:8847  idx */\n      dup2\n        /* \"Equation.sol\":8844:8863  idx < childrenCount */\n      0xff\n      and\n      lt\n        /* \"Equation.sol\":8824:9205  for (uint8 idx = 0; idx < childrenCount; ++idx) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"Equation.sol\":8892:8893  0 */\n      0x00\n        /* \"Equation.sol\":8885:8888  idx */\n      dup2\n        /* \"Equation.sol\":8885:8893  idx == 0 */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":8881:9117  if (idx == 0) node.child0 = lastNodeIdx + 1;... */\n      tag_128\n      jumpi\n        /* \"Equation.sol\":8923:8924  1 */\n      0x01\n        /* \"Equation.sol\":8909:8920  lastNodeIdx */\n      dup3\n        /* \"Equation.sol\":8909:8924  lastNodeIdx + 1 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"Equation.sol\":8895:8899  node */\n      dup7\n        /* \"Equation.sol\":8895:8906  node.child0 */\n      0x00\n      add\n      0x01\n        /* \"Equation.sol\":8895:8924  node.child0 = lastNodeIdx + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Equation.sol\":8881:9117  if (idx == 0) node.child0 = lastNodeIdx + 1;... */\n      jump(tag_131)\n    tag_128:\n        /* \"Equation.sol\":8949:8950  1 */\n      0x01\n        /* \"Equation.sol\":8942:8945  idx */\n      dup2\n        /* \"Equation.sol\":8942:8950  idx == 1 */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":8938:9117  if (idx == 1) node.child1 = lastNodeIdx + 1;... */\n      tag_132\n      jumpi\n        /* \"Equation.sol\":8980:8981  1 */\n      0x01\n        /* \"Equation.sol\":8966:8977  lastNodeIdx */\n      dup3\n        /* \"Equation.sol\":8966:8981  lastNodeIdx + 1 */\n      tag_133\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_133:\n        /* \"Equation.sol\":8952:8956  node */\n      dup7\n        /* \"Equation.sol\":8952:8963  node.child1 */\n      0x00\n      add\n      0x02\n        /* \"Equation.sol\":8952:8981  node.child1 = lastNodeIdx + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Equation.sol\":8938:9117  if (idx == 1) node.child1 = lastNodeIdx + 1;... */\n      jump(tag_134)\n    tag_132:\n        /* \"Equation.sol\":9006:9007  2 */\n      0x02\n        /* \"Equation.sol\":8999:9002  idx */\n      dup2\n        /* \"Equation.sol\":8999:9007  idx == 2 */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":8995:9117  if (idx == 2) node.child2 = lastNodeIdx + 1;... */\n      tag_135\n      jumpi\n        /* \"Equation.sol\":9037:9038  1 */\n      0x01\n        /* \"Equation.sol\":9023:9034  lastNodeIdx */\n      dup3\n        /* \"Equation.sol\":9023:9038  lastNodeIdx + 1 */\n      tag_136\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_136:\n        /* \"Equation.sol\":9009:9013  node */\n      dup7\n        /* \"Equation.sol\":9009:9020  node.child2 */\n      0x00\n      add\n      0x03\n        /* \"Equation.sol\":9009:9038  node.child2 = lastNodeIdx + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Equation.sol\":8995:9117  if (idx == 2) node.child2 = lastNodeIdx + 1;... */\n      jump(tag_137)\n    tag_135:\n        /* \"Equation.sol\":9063:9064  3 */\n      0x03\n        /* \"Equation.sol\":9056:9059  idx */\n      dup2\n        /* \"Equation.sol\":9056:9064  idx == 3 */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":9052:9117  if (idx == 3) node.child3 = lastNodeIdx + 1;... */\n      tag_138\n      jumpi\n        /* \"Equation.sol\":9094:9095  1 */\n      0x01\n        /* \"Equation.sol\":9080:9091  lastNodeIdx */\n      dup3\n        /* \"Equation.sol\":9080:9095  lastNodeIdx + 1 */\n      tag_139\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"Equation.sol\":9066:9070  node */\n      dup7\n        /* \"Equation.sol\":9066:9077  node.child3 */\n      0x00\n      add\n      0x04\n        /* \"Equation.sol\":9066:9095  node.child3 = lastNodeIdx + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Equation.sol\":9052:9117  if (idx == 3) node.child3 = lastNodeIdx + 1;... */\n      jump(tag_140)\n    tag_138:\n        /* \"Equation.sol\":9109:9117  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":9052:9117  if (idx == 3) node.child3 = lastNodeIdx + 1;... */\n    tag_140:\n        /* \"Equation.sol\":8995:9117  if (idx == 2) node.child2 = lastNodeIdx + 1;... */\n    tag_137:\n        /* \"Equation.sol\":8938:9117  if (idx == 1) node.child1 = lastNodeIdx + 1;... */\n    tag_134:\n        /* \"Equation.sol\":8881:9117  if (idx == 0) node.child0 = lastNodeIdx + 1;... */\n    tag_131:\n        /* \"Equation.sol\":9162:9197  populateTree(self, lastNodeIdx + 1) */\n      tag_141\n        /* \"Equation.sol\":9175:9179  self */\n      dup11\n        /* \"Equation.sol\":9195:9196  1 */\n      0x01\n        /* \"Equation.sol\":9181:9192  lastNodeIdx */\n      dup5\n        /* \"Equation.sol\":9181:9196  lastNodeIdx + 1 */\n      tag_142\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_142:\n        /* \"Equation.sol\":9162:9174  populateTree */\n      tag_38\n        /* \"Equation.sol\":9162:9197  populateTree(self, lastNodeIdx + 1) */\n      jump\t// in\n    tag_141:\n        /* \"Equation.sol\":9140:9153  childrenTypes */\n      dup5\n        /* \"Equation.sol\":9154:9157  idx */\n      dup4\n        /* \"Equation.sol\":9140:9158  childrenTypes[idx] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_144\n      tag_26\n      jump\t// in\n    tag_144:\n    tag_143:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Equation.sol\":9126:9197  (lastNodeIdx, childrenTypes[idx]) = populateTree(self, lastNodeIdx + 1) */\n      dup2\n      0x02\n      dup2\n      gt\n      iszero\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_147\n      jump\t// in\n    tag_149:\n    tag_148:\n      dup2\n      mstore\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"Equation.sol\":8865:8870  ++idx */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Equation.sol\":8824:9205  for (uint8 idx = 0; idx < childrenCount; ++idx) {... */\n      jump(tag_125)\n    tag_126:\n      pop\n        /* \"Equation.sol\":9211:9228  ExprType exprType */\n      0x00\n        /* \"Equation.sol\":9231:9267  checkExprType(opcode, childrenTypes) */\n      tag_150\n        /* \"Equation.sol\":9245:9251  opcode */\n      dup6\n        /* \"Equation.sol\":9253:9266  childrenTypes */\n      dup5\n        /* \"Equation.sol\":9231:9244  checkExprType */\n      tag_151\n        /* \"Equation.sol\":9231:9267  checkExprType(opcode, childrenTypes) */\n      jump\t// in\n    tag_150:\n        /* \"Equation.sol\":9211:9267  ExprType exprType = checkExprType(opcode, childrenTypes) */\n      swap1\n      pop\n        /* \"Equation.sol\":9282:9293  lastNodeIdx */\n      dup2\n        /* \"Equation.sol\":9295:9303  exprType */\n      dup2\n        /* \"Equation.sol\":9274:9304  return (lastNodeIdx, exprType) */\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Equation.sol\":8414:9310  function populateTree(Node[] storage self, uint8 currentNodeIndex)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1041:1164  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_54:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1099:1108  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1124:1125  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1120:1121  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1120:1125  a + b */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1116:1125  c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1143:1144  a */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1138:1139  c */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1138:1144  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1131:1145  assert(c >= a) */\n      tag_155\n      jumpi\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n    tag_155:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":1041:1164  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":485:757  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_55:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":543:550  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":751:752  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":747:748  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":747:752  a / b */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":740:752  return a / b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":485:757  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":869:979  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":927:934  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":954:955  a */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":949:950  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":949:955  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":942:956  assert(b <= a) */\n      tag_162\n      jumpi\n      tag_163\n      tag_157\n      jump\t// in\n    tag_163:\n    tag_162:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":973:974  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":969:970  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":969:974  a - b */\n      tag_164\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_164:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":962:974  return a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":869:979  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":236:403  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_75:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":294:303  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":320:321  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":315:316  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":315:321  a == 0 */\n      sub\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":311:346  if (a == 0) {... */\n      tag_166\n      jumpi\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":338:339  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":331:339  return 0 */\n      swap1\n      pop\n      jump(tag_165)\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":311:346  if (a == 0) {... */\n    tag_166:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":359:360  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":355:356  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":355:360  a * b */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":351:360  c = a * b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":382:383  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":377:378  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":373:374  c */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":373:378  c / a */\n      tag_169\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_169:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":373:383  c / a == b */\n      eq\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":366:384  assert(c / a == b) */\n      tag_170\n      jumpi\n      tag_171\n      tag_157\n      jump\t// in\n    tag_171:\n    tag_170:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":236:403  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_165:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Equation.sol\":11871:13490  function solveBool(Node[] storage self, uint8 nodeIdx, uint256 xValue)... */\n    tag_92:\n        /* \"Equation.sol\":11969:11973  bool */\n      0x00\n        /* \"Equation.sol\":11985:12002  Node storage node */\n      dup1\n        /* \"Equation.sol\":12005:12009  self */\n      dup5\n        /* \"Equation.sol\":12010:12017  nodeIdx */\n      dup5\n        /* \"Equation.sol\":12005:12018  self[nodeIdx] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_174\n      tag_26\n      jump\t// in\n    tag_174:\n    tag_173:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Equation.sol\":11985:12018  Node storage node = self[nodeIdx] */\n      swap1\n      pop\n        /* \"Equation.sol\":12025:12037  uint8 opcode */\n      0x00\n        /* \"Equation.sol\":12040:12044  node */\n      dup2\n        /* \"Equation.sol\":12040:12051  node.opcode */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":12025:12051  uint8 opcode = node.opcode */\n      swap1\n      pop\n        /* \"Equation.sol\":3882:3883  3 */\n      0x03\n        /* \"Equation.sol\":12062:12082  opcode == OPCODE_NOT */\n      0xff\n      and\n        /* \"Equation.sol\":12062:12068  opcode */\n      dup2\n        /* \"Equation.sol\":12062:12082  opcode == OPCODE_NOT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12058:13470  if (opcode == OPCODE_NOT) {... */\n      tag_176\n      jumpi\n        /* \"Equation.sol\":12101:12137  solveBool(self, node.child0, xValue) */\n      tag_177\n        /* \"Equation.sol\":12111:12115  self */\n      dup7\n        /* \"Equation.sol\":12117:12121  node */\n      dup4\n        /* \"Equation.sol\":12117:12128  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":12130:12136  xValue */\n      dup7\n        /* \"Equation.sol\":12101:12110  solveBool */\n      tag_92\n        /* \"Equation.sol\":12101:12137  solveBool(self, node.child0, xValue) */\n      jump\t// in\n    tag_177:\n        /* \"Equation.sol\":12100:12137  !solveBool(self, node.child0, xValue) */\n      iszero\n        /* \"Equation.sol\":12093:12137  return !solveBool(self, node.child0, xValue) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12058:13470  if (opcode == OPCODE_NOT) {... */\n    tag_176:\n        /* \"Equation.sol\":4119:4121  10 */\n      0x0a\n        /* \"Equation.sol\":12155:12174  opcode >= OPCODE_EQ */\n      0xff\n      and\n        /* \"Equation.sol\":12155:12161  opcode */\n      dup2\n        /* \"Equation.sol\":12155:12174  opcode >= OPCODE_EQ */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":12155:12197  opcode >= OPCODE_EQ && opcode <= OPCODE_GE */\n      dup1\n      iszero\n      tag_179\n      jumpi\n      pop\n        /* \"Equation.sol\":4289:4291  15 */\n      0x0f\n        /* \"Equation.sol\":12178:12197  opcode <= OPCODE_GE */\n      0xff\n      and\n        /* \"Equation.sol\":12178:12184  opcode */\n      dup2\n        /* \"Equation.sol\":12178:12197  opcode <= OPCODE_GE */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":12155:12197  opcode >= OPCODE_EQ && opcode <= OPCODE_GE */\n    tag_179:\n        /* \"Equation.sol\":12151:13470  if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"Equation.sol\":12208:12225  uint256 leftValue */\n      0x00\n        /* \"Equation.sol\":12228:12264  solveMath(self, node.child0, xValue) */\n      tag_181\n        /* \"Equation.sol\":12238:12242  self */\n      dup8\n        /* \"Equation.sol\":12244:12248  node */\n      dup5\n        /* \"Equation.sol\":12244:12255  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":12257:12263  xValue */\n      dup8\n        /* \"Equation.sol\":12228:12237  solveMath */\n      tag_17\n        /* \"Equation.sol\":12228:12264  solveMath(self, node.child0, xValue) */\n      jump\t// in\n    tag_181:\n        /* \"Equation.sol\":12208:12264  uint256 leftValue = solveMath(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":12273:12291  uint256 rightValue */\n      0x00\n        /* \"Equation.sol\":12294:12330  solveMath(self, node.child1, xValue) */\n      tag_182\n        /* \"Equation.sol\":12304:12308  self */\n      dup9\n        /* \"Equation.sol\":12310:12314  node */\n      dup6\n        /* \"Equation.sol\":12310:12321  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":12323:12329  xValue */\n      dup9\n        /* \"Equation.sol\":12294:12303  solveMath */\n      tag_17\n        /* \"Equation.sol\":12294:12330  solveMath(self, node.child1, xValue) */\n      jump\t// in\n    tag_182:\n        /* \"Equation.sol\":12273:12330  uint256 rightValue = solveMath(self, node.child1, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":4119:4121  10 */\n      0x0a\n        /* \"Equation.sol\":12343:12362  opcode == OPCODE_EQ */\n      0xff\n      and\n        /* \"Equation.sol\":12343:12349  opcode */\n      dup4\n        /* \"Equation.sol\":12343:12362  opcode == OPCODE_EQ */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12339:12823  if (opcode == OPCODE_EQ) {... */\n      tag_183\n      jumpi\n        /* \"Equation.sol\":12395:12405  rightValue */\n      dup1\n        /* \"Equation.sol\":12382:12391  leftValue */\n      dup3\n        /* \"Equation.sol\":12382:12405  leftValue == rightValue */\n      eq\n        /* \"Equation.sol\":12375:12405  return leftValue == rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12339:12823  if (opcode == OPCODE_EQ) {... */\n    tag_183:\n        /* \"Equation.sol\":4153:4155  11 */\n      0x0b\n        /* \"Equation.sol\":12425:12444  opcode == OPCODE_NE */\n      0xff\n      and\n        /* \"Equation.sol\":12425:12431  opcode */\n      dup4\n        /* \"Equation.sol\":12425:12444  opcode == OPCODE_NE */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12421:12823  if (opcode == OPCODE_NE) {... */\n      tag_185\n      jumpi\n        /* \"Equation.sol\":12477:12487  rightValue */\n      dup1\n        /* \"Equation.sol\":12464:12473  leftValue */\n      dup3\n        /* \"Equation.sol\":12464:12487  leftValue != rightValue */\n      eq\n      iszero\n        /* \"Equation.sol\":12457:12487  return leftValue != rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12421:12823  if (opcode == OPCODE_NE) {... */\n    tag_185:\n        /* \"Equation.sol\":4187:4189  12 */\n      0x0c\n        /* \"Equation.sol\":12507:12526  opcode == OPCODE_LT */\n      0xff\n      and\n        /* \"Equation.sol\":12507:12513  opcode */\n      dup4\n        /* \"Equation.sol\":12507:12526  opcode == OPCODE_LT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12503:12823  if (opcode == OPCODE_LT) {... */\n      tag_187\n      jumpi\n        /* \"Equation.sol\":12558:12568  rightValue */\n      dup1\n        /* \"Equation.sol\":12546:12555  leftValue */\n      dup3\n        /* \"Equation.sol\":12546:12568  leftValue < rightValue */\n      lt\n        /* \"Equation.sol\":12539:12568  return leftValue < rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12503:12823  if (opcode == OPCODE_LT) {... */\n    tag_187:\n        /* \"Equation.sol\":4221:4223  13 */\n      0x0d\n        /* \"Equation.sol\":12588:12607  opcode == OPCODE_GT */\n      0xff\n      and\n        /* \"Equation.sol\":12588:12594  opcode */\n      dup4\n        /* \"Equation.sol\":12588:12607  opcode == OPCODE_GT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12584:12823  if (opcode == OPCODE_GT) {... */\n      tag_189\n      jumpi\n        /* \"Equation.sol\":12639:12649  rightValue */\n      dup1\n        /* \"Equation.sol\":12627:12636  leftValue */\n      dup3\n        /* \"Equation.sol\":12627:12649  leftValue > rightValue */\n      gt\n        /* \"Equation.sol\":12620:12649  return leftValue > rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12584:12823  if (opcode == OPCODE_GT) {... */\n    tag_189:\n        /* \"Equation.sol\":4255:4257  14 */\n      0x0e\n        /* \"Equation.sol\":12669:12688  opcode == OPCODE_LE */\n      0xff\n      and\n        /* \"Equation.sol\":12669:12675  opcode */\n      dup4\n        /* \"Equation.sol\":12669:12688  opcode == OPCODE_LE */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12665:12823  if (opcode == OPCODE_LE) {... */\n      tag_191\n      jumpi\n        /* \"Equation.sol\":12721:12731  rightValue */\n      dup1\n        /* \"Equation.sol\":12708:12717  leftValue */\n      dup3\n        /* \"Equation.sol\":12708:12731  leftValue <= rightValue */\n      gt\n      iszero\n        /* \"Equation.sol\":12701:12731  return leftValue <= rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12665:12823  if (opcode == OPCODE_LE) {... */\n    tag_191:\n        /* \"Equation.sol\":4289:4291  15 */\n      0x0f\n        /* \"Equation.sol\":12751:12770  opcode == OPCODE_GE */\n      0xff\n      and\n        /* \"Equation.sol\":12751:12757  opcode */\n      dup4\n        /* \"Equation.sol\":12751:12770  opcode == OPCODE_GE */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12747:12823  if (opcode == OPCODE_GE) {... */\n      tag_193\n      jumpi\n        /* \"Equation.sol\":12803:12813  rightValue */\n      dup1\n        /* \"Equation.sol\":12790:12799  leftValue */\n      dup3\n        /* \"Equation.sol\":12790:12813  leftValue >= rightValue */\n      lt\n      iszero\n        /* \"Equation.sol\":12783:12813  return leftValue >= rightValue */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12747:12823  if (opcode == OPCODE_GE) {... */\n    tag_193:\n        /* \"Equation.sol\":12199:12830  {... */\n      pop\n      pop\n        /* \"Equation.sol\":12151:13470  if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {... */\n      jump(tag_194)\n    tag_180:\n        /* \"Equation.sol\":4324:4326  16 */\n      0x10\n        /* \"Equation.sol\":12840:12860  opcode >= OPCODE_AND */\n      0xff\n      and\n        /* \"Equation.sol\":12840:12846  opcode */\n      dup2\n        /* \"Equation.sol\":12840:12860  opcode >= OPCODE_AND */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":12840:12883  opcode >= OPCODE_AND && opcode <= OPCODE_OR */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"Equation.sol\":4358:4360  17 */\n      0x11\n        /* \"Equation.sol\":12864:12883  opcode <= OPCODE_OR */\n      0xff\n      and\n        /* \"Equation.sol\":12864:12870  opcode */\n      dup2\n        /* \"Equation.sol\":12864:12883  opcode <= OPCODE_OR */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":12840:12883  opcode >= OPCODE_AND && opcode <= OPCODE_OR */\n    tag_195:\n        /* \"Equation.sol\":12836:13470  if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"Equation.sol\":12894:12912  bool leftBoolValue */\n      0x00\n        /* \"Equation.sol\":12915:12951  solveBool(self, node.child0, xValue) */\n      tag_197\n        /* \"Equation.sol\":12925:12929  self */\n      dup8\n        /* \"Equation.sol\":12931:12935  node */\n      dup5\n        /* \"Equation.sol\":12931:12942  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":12944:12950  xValue */\n      dup8\n        /* \"Equation.sol\":12915:12924  solveBool */\n      tag_92\n        /* \"Equation.sol\":12915:12951  solveBool(self, node.child0, xValue) */\n      jump\t// in\n    tag_197:\n        /* \"Equation.sol\":12894:12951  bool leftBoolValue = solveBool(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":4324:4326  16 */\n      0x10\n        /* \"Equation.sol\":12964:12984  opcode == OPCODE_AND */\n      0xff\n      and\n        /* \"Equation.sol\":12964:12970  opcode */\n      dup3\n        /* \"Equation.sol\":12964:12984  opcode == OPCODE_AND */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":12960:13238  if (opcode == OPCODE_AND) {... */\n      tag_198\n      jumpi\n        /* \"Equation.sol\":13001:13014  leftBoolValue */\n      dup1\n        /* \"Equation.sol\":12997:13087  if (leftBoolValue) return solveBool(self, node.child1, xValue);... */\n      iszero\n      tag_199\n      jumpi\n        /* \"Equation.sol\":13023:13059  solveBool(self, node.child1, xValue) */\n      tag_200\n        /* \"Equation.sol\":13033:13037  self */\n      dup8\n        /* \"Equation.sol\":13039:13043  node */\n      dup5\n        /* \"Equation.sol\":13039:13050  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":13052:13058  xValue */\n      dup8\n        /* \"Equation.sol\":13023:13032  solveBool */\n      tag_92\n        /* \"Equation.sol\":13023:13059  solveBool(self, node.child1, xValue) */\n      jump\t// in\n    tag_200:\n        /* \"Equation.sol\":13016:13059  return solveBool(self, node.child1, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12997:13087  if (leftBoolValue) return solveBool(self, node.child1, xValue);... */\n    tag_199:\n        /* \"Equation.sol\":13082:13087  false */\n      0x00\n        /* \"Equation.sol\":13075:13087  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":12960:13238  if (opcode == OPCODE_AND) {... */\n    tag_198:\n        /* \"Equation.sol\":4358:4360  17 */\n      0x11\n        /* \"Equation.sol\":13107:13126  opcode == OPCODE_OR */\n      0xff\n      and\n        /* \"Equation.sol\":13107:13113  opcode */\n      dup3\n        /* \"Equation.sol\":13107:13126  opcode == OPCODE_OR */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":13103:13238  if (opcode == OPCODE_OR) {... */\n      tag_203\n      jumpi\n        /* \"Equation.sol\":13143:13156  leftBoolValue */\n      dup1\n        /* \"Equation.sol\":13139:13228  if (leftBoolValue) return true;... */\n      iszero\n      tag_204\n      jumpi\n        /* \"Equation.sol\":13165:13169  true */\n      0x01\n        /* \"Equation.sol\":13158:13169  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":13139:13228  if (leftBoolValue) return true;... */\n    tag_204:\n        /* \"Equation.sol\":13192:13228  solveBool(self, node.child1, xValue) */\n      tag_206\n        /* \"Equation.sol\":13202:13206  self */\n      dup8\n        /* \"Equation.sol\":13208:13212  node */\n      dup5\n        /* \"Equation.sol\":13208:13219  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":13221:13227  xValue */\n      dup8\n        /* \"Equation.sol\":13192:13201  solveBool */\n      tag_92\n        /* \"Equation.sol\":13192:13228  solveBool(self, node.child1, xValue) */\n      jump\t// in\n    tag_206:\n        /* \"Equation.sol\":13185:13228  return solveBool(self, node.child1, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":13103:13238  if (opcode == OPCODE_OR) {... */\n    tag_203:\n        /* \"Equation.sol\":12885:13245  {... */\n      pop\n        /* \"Equation.sol\":12836:13470  if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {... */\n      jump(tag_207)\n    tag_196:\n        /* \"Equation.sol\":4392:4394  18 */\n      0x12\n        /* \"Equation.sol\":13255:13274  opcode == OPCODE_IF */\n      0xff\n      and\n        /* \"Equation.sol\":13255:13261  opcode */\n      dup2\n        /* \"Equation.sol\":13255:13274  opcode == OPCODE_IF */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":13251:13470  if (opcode == OPCODE_IF) {... */\n      tag_208\n      jumpi\n        /* \"Equation.sol\":13285:13299  bool condValue */\n      0x00\n        /* \"Equation.sol\":13302:13338  solveBool(self, node.child0, xValue) */\n      tag_209\n        /* \"Equation.sol\":13312:13316  self */\n      dup8\n        /* \"Equation.sol\":13318:13322  node */\n      dup5\n        /* \"Equation.sol\":13318:13329  node.child0 */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":13331:13337  xValue */\n      dup8\n        /* \"Equation.sol\":13302:13311  solveBool */\n      tag_92\n        /* \"Equation.sol\":13302:13338  solveBool(self, node.child0, xValue) */\n      jump\t// in\n    tag_209:\n        /* \"Equation.sol\":13285:13338  bool condValue = solveBool(self, node.child0, xValue) */\n      swap1\n      pop\n        /* \"Equation.sol\":13351:13360  condValue */\n      dup1\n        /* \"Equation.sol\":13347:13462  if (condValue) return solveBool(self, node.child1, xValue);... */\n      iszero\n      tag_210\n      jumpi\n        /* \"Equation.sol\":13369:13405  solveBool(self, node.child1, xValue) */\n      tag_211\n        /* \"Equation.sol\":13379:13383  self */\n      dup8\n        /* \"Equation.sol\":13385:13389  node */\n      dup5\n        /* \"Equation.sol\":13385:13396  node.child1 */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":13398:13404  xValue */\n      dup8\n        /* \"Equation.sol\":13369:13378  solveBool */\n      tag_92\n        /* \"Equation.sol\":13369:13405  solveBool(self, node.child1, xValue) */\n      jump\t// in\n    tag_211:\n        /* \"Equation.sol\":13362:13405  return solveBool(self, node.child1, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":13347:13462  if (condValue) return solveBool(self, node.child1, xValue);... */\n    tag_210:\n        /* \"Equation.sol\":13426:13462  solveBool(self, node.child2, xValue) */\n      tag_213\n        /* \"Equation.sol\":13436:13440  self */\n      dup8\n        /* \"Equation.sol\":13442:13446  node */\n      dup5\n        /* \"Equation.sol\":13442:13453  node.child2 */\n      0x00\n      add\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Equation.sol\":13455:13461  xValue */\n      dup8\n        /* \"Equation.sol\":13426:13435  solveBool */\n      tag_92\n        /* \"Equation.sol\":13426:13462  solveBool(self, node.child2, xValue) */\n      jump\t// in\n    tag_213:\n        /* \"Equation.sol\":13419:13462  return solveBool(self, node.child2, xValue) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_172)\n        /* \"Equation.sol\":13251:13470  if (opcode == OPCODE_IF) {... */\n    tag_208:\n        /* \"Equation.sol\":12836:13470  if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {... */\n    tag_207:\n        /* \"Equation.sol\":12151:13470  if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {... */\n    tag_194:\n        /* \"Equation.sol\":13476:13484  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":11871:13490  function solveBool(Node[] storage self, uint8 nodeIdx, uint256 xValue)... */\n    tag_172:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":4130:4574  function log(uint256 _c, uint256 _baseN, uint256 _baseD) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"BancorPower.sol\":4210:4217  uint256 */\n      0x00\n        /* \"BancorPower.sol\":4286:4292  _baseD */\n      dup2\n        /* \"BancorPower.sol\":4276:4282  _baseN */\n      dup4\n        /* \"BancorPower.sol\":4276:4292  _baseN >= _baseD */\n      lt\n      iszero\n        /* \"BancorPower.sol\":4268:4293  require(_baseN >= _baseD) */\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n        /* \"BancorPower.sol\":4306:4321  uint256 baseLog */\n      0x00\n        /* \"BancorPower.sol\":4332:4344  uint256 base */\n      dup1\n        /* \"BancorPower.sol\":4366:4372  _baseD */\n      dup4\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":4347:4353  _baseN */\n      dup7\n        /* \"BancorPower.sol\":4347:4363  _baseN * FIXED_1 */\n      tag_216\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_216:\n        /* \"BancorPower.sol\":4347:4372  _baseN * FIXED_1 / _baseD */\n      tag_217\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_217:\n        /* \"BancorPower.sol\":4332:4372  uint256 base = _baseN * FIXED_1 / _baseD */\n      swap1\n      pop\n        /* \"BancorPower.sol\":1695:1730  0x15bf0a8b1457695355fb8ac404e7a79e3 */\n      0x015bf0a8b1457695355fb8ac404e7a79e3\n        /* \"BancorPower.sol\":4387:4391  base */\n      dup2\n        /* \"BancorPower.sol\":4387:4409  base < OPT_LOG_MAX_VAL */\n      lt\n        /* \"BancorPower.sol\":4383:4523  if (base < OPT_LOG_MAX_VAL) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"BancorPower.sol\":4436:4452  optimalLog(base) */\n      tag_219\n        /* \"BancorPower.sol\":4447:4451  base */\n      dup2\n        /* \"BancorPower.sol\":4436:4446  optimalLog */\n      tag_220\n        /* \"BancorPower.sol\":4436:4452  optimalLog(base) */\n      jump\t// in\n    tag_219:\n        /* \"BancorPower.sol\":4426:4452  baseLog = optimalLog(base) */\n      swap2\n      pop\n        /* \"BancorPower.sol\":4383:4523  if (base < OPT_LOG_MAX_VAL) {... */\n      jump(tag_221)\n    tag_218:\n        /* \"BancorPower.sol\":4495:4511  generalLog(base) */\n      tag_222\n        /* \"BancorPower.sol\":4506:4510  base */\n      dup2\n        /* \"BancorPower.sol\":4495:4505  generalLog */\n      tag_223\n        /* \"BancorPower.sol\":4495:4511  generalLog(base) */\n      jump\t// in\n    tag_222:\n        /* \"BancorPower.sol\":4485:4511  baseLog = generalLog(base) */\n      swap2\n      pop\n        /* \"BancorPower.sol\":4383:4523  if (base < OPT_LOG_MAX_VAL) {... */\n    tag_221:\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":4553:4555  _c */\n      dup7\n        /* \"BancorPower.sol\":4543:4550  baseLog */\n      dup4\n        /* \"BancorPower.sol\":4543:4555  baseLog * _c */\n      tag_224\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_224:\n        /* \"BancorPower.sol\":4542:4566  (baseLog * _c) / FIXED_1 */\n      tag_225\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_225:\n        /* \"BancorPower.sol\":4535:4566  return (baseLog * _c) / FIXED_1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"BancorPower.sol\":4130:4574  function log(uint256 _c, uint256 _baseN, uint256 _baseD) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":3250:4077  function power(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD) internal pure returns (uint256, uint8) {... */\n    tag_112:\n        /* \"BancorPower.sol\":3348:3355  uint256 */\n      0x00\n        /* \"BancorPower.sol\":3357:3362  uint8 */\n      dup1\n        /* \"BancorPower.sol\":1260:1295  0x200000000000000000000000000000000 */\n      0x0200000000000000000000000000000000\n        /* \"BancorPower.sol\":3383:3389  _baseN */\n      dup7\n        /* \"BancorPower.sol\":3383:3399  _baseN < MAX_NUM */\n      lt\n        /* \"BancorPower.sol\":3375:3400  require(_baseN < MAX_NUM) */\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n        /* \"BancorPower.sol\":3429:3435  _baseD */\n      dup5\n        /* \"BancorPower.sol\":3419:3425  _baseN */\n      dup7\n        /* \"BancorPower.sol\":3419:3435  _baseN >= _baseD */\n      lt\n      iszero\n        /* \"BancorPower.sol\":3411:3436  require(_baseN >= _baseD) */\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n        /* \"BancorPower.sol\":3449:3464  uint256 baseLog */\n      0x00\n        /* \"BancorPower.sol\":3475:3487  uint256 base */\n      dup1\n        /* \"BancorPower.sol\":3509:3515  _baseD */\n      dup7\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":3490:3496  _baseN */\n      dup10\n        /* \"BancorPower.sol\":3490:3506  _baseN * FIXED_1 */\n      tag_229\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_229:\n        /* \"BancorPower.sol\":3490:3515  _baseN * FIXED_1 / _baseD */\n      tag_230\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_230:\n        /* \"BancorPower.sol\":3475:3515  uint256 base = _baseN * FIXED_1 / _baseD */\n      swap1\n      pop\n        /* \"BancorPower.sol\":1695:1730  0x15bf0a8b1457695355fb8ac404e7a79e3 */\n      0x015bf0a8b1457695355fb8ac404e7a79e3\n        /* \"BancorPower.sol\":3530:3534  base */\n      dup2\n        /* \"BancorPower.sol\":3530:3552  base < OPT_LOG_MAX_VAL */\n      lt\n        /* \"BancorPower.sol\":3526:3675  if (base < OPT_LOG_MAX_VAL) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"BancorPower.sol\":3579:3595  optimalLog(base) */\n      tag_232\n        /* \"BancorPower.sol\":3590:3594  base */\n      dup2\n        /* \"BancorPower.sol\":3579:3589  optimalLog */\n      tag_220\n        /* \"BancorPower.sol\":3579:3595  optimalLog(base) */\n      jump\t// in\n    tag_232:\n        /* \"BancorPower.sol\":3569:3595  baseLog = optimalLog(base) */\n      swap2\n      pop\n        /* \"BancorPower.sol\":3526:3675  if (base < OPT_LOG_MAX_VAL) {... */\n      jump(tag_233)\n    tag_231:\n        /* \"BancorPower.sol\":3647:3663  generalLog(base) */\n      tag_234\n        /* \"BancorPower.sol\":3658:3662  base */\n      dup2\n        /* \"BancorPower.sol\":3647:3657  generalLog */\n      tag_223\n        /* \"BancorPower.sol\":3647:3663  generalLog(base) */\n      jump\t// in\n    tag_234:\n        /* \"BancorPower.sol\":3637:3663  baseLog = generalLog(base) */\n      swap2\n      pop\n        /* \"BancorPower.sol\":3526:3675  if (base < OPT_LOG_MAX_VAL) {... */\n    tag_233:\n        /* \"BancorPower.sol\":3687:3710  uint256 baseLogTimesExp */\n      0x00\n        /* \"BancorPower.sol\":3731:3736  _expD */\n      dup6\n        /* \"BancorPower.sol\":3713:3736  baseLog * _expN / _expD */\n      0xffffffff\n      and\n        /* \"BancorPower.sol\":3723:3728  _expN */\n      dup8\n        /* \"BancorPower.sol\":3713:3728  baseLog * _expN */\n      0xffffffff\n      and\n        /* \"BancorPower.sol\":3713:3720  baseLog */\n      dup5\n        /* \"BancorPower.sol\":3713:3728  baseLog * _expN */\n      tag_235\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_235:\n        /* \"BancorPower.sol\":3713:3736  baseLog * _expN / _expD */\n      tag_236\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"BancorPower.sol\":3687:3736  uint256 baseLogTimesExp = baseLog * _expN / _expD */\n      swap1\n      pop\n        /* \"BancorPower.sol\":1780:1815  0x800000000000000000000000000000000 */\n      0x0800000000000000000000000000000000\n        /* \"BancorPower.sol\":3751:3766  baseLogTimesExp */\n      dup2\n        /* \"BancorPower.sol\":3751:3784  baseLogTimesExp < OPT_EXP_MAX_VAL */\n      lt\n        /* \"BancorPower.sol\":3747:4070  if (baseLogTimesExp < OPT_EXP_MAX_VAL) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"BancorPower.sol\":3809:3836  optimalExp(baseLogTimesExp) */\n      tag_238\n        /* \"BancorPower.sol\":3820:3835  baseLogTimesExp */\n      dup2\n        /* \"BancorPower.sol\":3809:3819  optimalExp */\n      tag_239\n        /* \"BancorPower.sol\":3809:3836  optimalExp(baseLogTimesExp) */\n      jump\t// in\n    tag_238:\n        /* \"BancorPower.sol\":986:989  127 */\n      0x7f\n        /* \"BancorPower.sol\":3801:3852  return (optimalExp(baseLogTimesExp), MAX_PRECISION) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_226)\n        /* \"BancorPower.sol\":3747:4070  if (baseLogTimesExp < OPT_EXP_MAX_VAL) {... */\n    tag_237:\n        /* \"BancorPower.sol\":3894:3909  uint8 precision */\n      0x00\n        /* \"BancorPower.sol\":3912:3954  findPositionInMaxExpArray(baseLogTimesExp) */\n      tag_241\n        /* \"BancorPower.sol\":3938:3953  baseLogTimesExp */\n      dup3\n        /* \"BancorPower.sol\":3912:3937  findPositionInMaxExpArray */\n      tag_242\n        /* \"BancorPower.sol\":3912:3954  findPositionInMaxExpArray(baseLogTimesExp) */\n      jump\t// in\n    tag_241:\n        /* \"BancorPower.sol\":3894:3954  uint8 precision = findPositionInMaxExpArray(baseLogTimesExp) */\n      swap1\n      pop\n        /* \"BancorPower.sol\":3977:4046  generalExp(baseLogTimesExp >> (MAX_PRECISION - precision), precision) */\n      tag_243\n        /* \"BancorPower.sol\":4024:4033  precision */\n      dup2\n        /* \"BancorPower.sol\":986:989  127 */\n      0x7f\n        /* \"BancorPower.sol\":4008:4033  MAX_PRECISION - precision */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"BancorPower.sol\":3988:4034  baseLogTimesExp >> (MAX_PRECISION - precision) */\n      0xff\n      and\n        /* \"BancorPower.sol\":3988:4003  baseLogTimesExp */\n      dup4\n        /* \"BancorPower.sol\":3988:4034  baseLogTimesExp >> (MAX_PRECISION - precision) */\n      swap1\n      shr\n        /* \"BancorPower.sol\":4036:4045  precision */\n      dup3\n        /* \"BancorPower.sol\":3977:3987  generalExp */\n      tag_246\n        /* \"BancorPower.sol\":3977:4046  generalExp(baseLogTimesExp >> (MAX_PRECISION - precision), precision) */\n      jump\t// in\n    tag_243:\n        /* \"BancorPower.sol\":4048:4057  precision */\n      dup2\n        /* \"BancorPower.sol\":3969:4058  return (generalExp(baseLogTimesExp >> (MAX_PRECISION - precision), precision), precision) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BancorPower.sol\":3250:4077  function power(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD) internal pure returns (uint256, uint8) {... */\n    tag_226:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Equation.sol\":5780:6170  function getChildrenCount(uint8 opcode) private pure returns (uint8) {... */\n    tag_120:\n        /* \"Equation.sol\":5842:5847  uint8 */\n      0x00\n        /* \"Equation.sol\":3813:3814  1 */\n      0x01\n        /* \"Equation.sol\":5860:5880  opcode <= OPCODE_VAR */\n      0xff\n      and\n        /* \"Equation.sol\":5860:5866  opcode */\n      dup3\n        /* \"Equation.sol\":5860:5880  opcode <= OPCODE_VAR */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":5856:6150  if (opcode <= OPCODE_VAR) {... */\n      tag_248\n      jumpi\n        /* \"Equation.sol\":5898:5899  0 */\n      0x00\n        /* \"Equation.sol\":5891:5899  return 0 */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"Equation.sol\":5856:6150  if (opcode <= OPCODE_VAR) {... */\n    tag_248:\n        /* \"Equation.sol\":3882:3883  3 */\n      0x03\n        /* \"Equation.sol\":5917:5937  opcode <= OPCODE_NOT */\n      0xff\n      and\n        /* \"Equation.sol\":5917:5923  opcode */\n      dup3\n        /* \"Equation.sol\":5917:5937  opcode <= OPCODE_NOT */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":5913:6150  if (opcode <= OPCODE_NOT) {... */\n      tag_250\n      jumpi\n        /* \"Equation.sol\":5955:5956  1 */\n      0x01\n        /* \"Equation.sol\":5948:5956  return 1 */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"Equation.sol\":5913:6150  if (opcode <= OPCODE_NOT) {... */\n    tag_250:\n        /* \"Equation.sol\":4358:4360  17 */\n      0x11\n        /* \"Equation.sol\":5974:5993  opcode <= OPCODE_OR */\n      0xff\n      and\n        /* \"Equation.sol\":5974:5980  opcode */\n      dup3\n        /* \"Equation.sol\":5974:5993  opcode <= OPCODE_OR */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":5970:6150  if (opcode <= OPCODE_OR) {... */\n      tag_252\n      jumpi\n        /* \"Equation.sol\":6011:6012  2 */\n      0x02\n        /* \"Equation.sol\":6004:6012  return 2 */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"Equation.sol\":5970:6150  if (opcode <= OPCODE_OR) {... */\n    tag_252:\n        /* \"Equation.sol\":4434:4436  19 */\n      0x13\n        /* \"Equation.sol\":6030:6057  opcode <= OPCODE_BANCOR_LOG */\n      0xff\n      and\n        /* \"Equation.sol\":6030:6036  opcode */\n      dup3\n        /* \"Equation.sol\":6030:6057  opcode <= OPCODE_BANCOR_LOG */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":6026:6150  if (opcode <= OPCODE_BANCOR_LOG) {... */\n      tag_254\n      jumpi\n        /* \"Equation.sol\":6075:6076  3 */\n      0x03\n        /* \"Equation.sol\":6068:6076  return 3 */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"Equation.sol\":6026:6150  if (opcode <= OPCODE_BANCOR_LOG) {... */\n    tag_254:\n        /* \"Equation.sol\":4478:4480  20 */\n      0x14\n        /* \"Equation.sol\":6094:6123  opcode <= OPCODE_BANCOR_POWER */\n      0xff\n      and\n        /* \"Equation.sol\":6094:6100  opcode */\n      dup3\n        /* \"Equation.sol\":6094:6123  opcode <= OPCODE_BANCOR_POWER */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":6090:6150  if (opcode <= OPCODE_BANCOR_POWER) {... */\n      tag_256\n      jumpi\n        /* \"Equation.sol\":6141:6142  4 */\n      0x04\n        /* \"Equation.sol\":6134:6142  return 4 */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"Equation.sol\":6090:6150  if (opcode <= OPCODE_BANCOR_POWER) {... */\n    tag_256:\n        /* \"Equation.sol\":6156:6164  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":5780:6170  function getChildrenCount(uint8 opcode) private pure returns (uint8) {... */\n    tag_247:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Equation.sol\":6269:7886  function checkExprType(uint8 opcode, ExprType[] memory types)... */\n    tag_151:\n        /* \"Equation.sol\":6358:6366  ExprType */\n      0x00\n        /* \"Equation.sol\":3813:3814  1 */\n      0x01\n        /* \"Equation.sol\":6382:6402  opcode <= OPCODE_VAR */\n      0xff\n      and\n        /* \"Equation.sol\":6382:6388  opcode */\n      dup4\n        /* \"Equation.sol\":6382:6402  opcode <= OPCODE_VAR */\n      0xff\n      and\n      gt\n        /* \"Equation.sol\":6378:7866  if (opcode <= OPCODE_VAR) {... */\n      tag_258\n      jumpi\n        /* \"Equation.sol\":6420:6433  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6413:6433  return ExprType.Math */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":6378:7866  if (opcode <= OPCODE_VAR) {... */\n    tag_258:\n        /* \"Equation.sol\":3848:3849  2 */\n      0x02\n        /* \"Equation.sol\":6451:6472  opcode == OPCODE_SQRT */\n      0xff\n      and\n        /* \"Equation.sol\":6451:6457  opcode */\n      dup4\n        /* \"Equation.sol\":6451:6472  opcode == OPCODE_SQRT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":6447:7866  if (opcode == OPCODE_SQRT) {... */\n      tag_260\n      jumpi\n        /* \"Equation.sol\":6503:6516  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6491:6516  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_147\n      jump\t// in\n    tag_262:\n    tag_261:\n        /* \"Equation.sol\":6491:6496  types */\n      dup3\n        /* \"Equation.sol\":6497:6498  0 */\n      0x00\n        /* \"Equation.sol\":6491:6499  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_264\n      tag_26\n      jump\t// in\n    tag_264:\n    tag_263:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6491:6516  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_265\n      jumpi\n      tag_266\n      tag_147\n      jump\t// in\n    tag_266:\n    tag_265:\n      eq\n        /* \"Equation.sol\":6483:6517  require(types[0] == ExprType.Math) */\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n        /* \"Equation.sol\":6533:6546  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6526:6546  return ExprType.Math */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":6447:7866  if (opcode == OPCODE_SQRT) {... */\n    tag_260:\n        /* \"Equation.sol\":3882:3883  3 */\n      0x03\n        /* \"Equation.sol\":6564:6584  opcode == OPCODE_NOT */\n      0xff\n      and\n        /* \"Equation.sol\":6564:6570  opcode */\n      dup4\n        /* \"Equation.sol\":6564:6584  opcode == OPCODE_NOT */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":6560:7866  if (opcode == OPCODE_NOT) {... */\n      tag_269\n      jumpi\n        /* \"Equation.sol\":6615:6631  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":6603:6631  types[0] == ExprType.Boolean */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_270\n      jumpi\n      tag_271\n      tag_147\n      jump\t// in\n    tag_271:\n    tag_270:\n        /* \"Equation.sol\":6603:6608  types */\n      dup3\n        /* \"Equation.sol\":6609:6610  0 */\n      0x00\n        /* \"Equation.sol\":6603:6611  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_272\n      jumpi\n      tag_273\n      tag_26\n      jump\t// in\n    tag_273:\n    tag_272:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6603:6631  types[0] == ExprType.Boolean */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_274\n      jumpi\n      tag_275\n      tag_147\n      jump\t// in\n    tag_275:\n    tag_274:\n      eq\n        /* \"Equation.sol\":6595:6632  require(types[0] == ExprType.Boolean) */\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n        /* \"Equation.sol\":6648:6664  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":6641:6664  return ExprType.Boolean */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":6560:7866  if (opcode == OPCODE_NOT) {... */\n    tag_269:\n        /* \"Equation.sol\":3916:3917  4 */\n      0x04\n        /* \"Equation.sol\":6682:6702  opcode >= OPCODE_ADD */\n      0xff\n      and\n        /* \"Equation.sol\":6682:6688  opcode */\n      dup4\n        /* \"Equation.sol\":6682:6702  opcode >= OPCODE_ADD */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":6682:6726  opcode >= OPCODE_ADD && opcode <= OPCODE_PCT */\n      dup1\n      iszero\n      tag_278\n      jumpi\n      pop\n        /* \"Equation.sol\":4086:4087  9 */\n      0x09\n        /* \"Equation.sol\":6706:6726  opcode <= OPCODE_PCT */\n      0xff\n      and\n        /* \"Equation.sol\":6706:6712  opcode */\n      dup4\n        /* \"Equation.sol\":6706:6726  opcode <= OPCODE_PCT */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":6682:6726  opcode >= OPCODE_ADD && opcode <= OPCODE_PCT */\n    tag_278:\n        /* \"Equation.sol\":6678:7866  if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"Equation.sol\":6757:6770  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6745:6770  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_147\n      jump\t// in\n    tag_281:\n    tag_280:\n        /* \"Equation.sol\":6745:6750  types */\n      dup3\n        /* \"Equation.sol\":6751:6752  0 */\n      0x00\n        /* \"Equation.sol\":6745:6753  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_282\n      jumpi\n      tag_283\n      tag_26\n      jump\t// in\n    tag_283:\n    tag_282:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6745:6770  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_285\n      tag_147\n      jump\t// in\n    tag_285:\n    tag_284:\n      eq\n        /* \"Equation.sol\":6737:6771  require(types[0] == ExprType.Math) */\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n        /* \"Equation.sol\":6800:6813  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6788:6813  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_147\n      jump\t// in\n    tag_288:\n    tag_287:\n        /* \"Equation.sol\":6788:6793  types */\n      dup3\n        /* \"Equation.sol\":6794:6795  1 */\n      0x01\n        /* \"Equation.sol\":6788:6796  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_290\n      tag_26\n      jump\t// in\n    tag_290:\n    tag_289:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6788:6813  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_291\n      jumpi\n      tag_292\n      tag_147\n      jump\t// in\n    tag_292:\n    tag_291:\n      eq\n        /* \"Equation.sol\":6780:6814  require(types[1] == ExprType.Math) */\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n        /* \"Equation.sol\":6830:6843  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6823:6843  return ExprType.Math */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":6678:7866  if (opcode >= OPCODE_ADD && opcode <= OPCODE_PCT) {... */\n    tag_279:\n        /* \"Equation.sol\":4119:4121  10 */\n      0x0a\n        /* \"Equation.sol\":6861:6880  opcode >= OPCODE_EQ */\n      0xff\n      and\n        /* \"Equation.sol\":6861:6867  opcode */\n      dup4\n        /* \"Equation.sol\":6861:6880  opcode >= OPCODE_EQ */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":6861:6903  opcode >= OPCODE_EQ && opcode <= OPCODE_GE */\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n        /* \"Equation.sol\":4289:4291  15 */\n      0x0f\n        /* \"Equation.sol\":6884:6903  opcode <= OPCODE_GE */\n      0xff\n      and\n        /* \"Equation.sol\":6884:6890  opcode */\n      dup4\n        /* \"Equation.sol\":6884:6903  opcode <= OPCODE_GE */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":6861:6903  opcode >= OPCODE_EQ && opcode <= OPCODE_GE */\n    tag_295:\n        /* \"Equation.sol\":6857:7866  if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"Equation.sol\":6934:6947  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6922:6947  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_297\n      jumpi\n      tag_298\n      tag_147\n      jump\t// in\n    tag_298:\n    tag_297:\n        /* \"Equation.sol\":6922:6927  types */\n      dup3\n        /* \"Equation.sol\":6928:6929  0 */\n      0x00\n        /* \"Equation.sol\":6922:6930  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_300\n      tag_26\n      jump\t// in\n    tag_300:\n    tag_299:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6922:6947  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_302\n      tag_147\n      jump\t// in\n    tag_302:\n    tag_301:\n      eq\n        /* \"Equation.sol\":6914:6948  require(types[0] == ExprType.Math) */\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n        /* \"Equation.sol\":6977:6990  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":6965:6990  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_304\n      jumpi\n      tag_305\n      tag_147\n      jump\t// in\n    tag_305:\n    tag_304:\n        /* \"Equation.sol\":6965:6970  types */\n      dup3\n        /* \"Equation.sol\":6971:6972  1 */\n      0x01\n        /* \"Equation.sol\":6965:6973  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_307\n      tag_26\n      jump\t// in\n    tag_307:\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":6965:6990  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_308\n      jumpi\n      tag_309\n      tag_147\n      jump\t// in\n    tag_309:\n    tag_308:\n      eq\n        /* \"Equation.sol\":6957:6991  require(types[1] == ExprType.Math) */\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n        /* \"Equation.sol\":7007:7023  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":7000:7023  return ExprType.Boolean */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":6857:7866  if (opcode >= OPCODE_EQ && opcode <= OPCODE_GE) {... */\n    tag_296:\n        /* \"Equation.sol\":4324:4326  16 */\n      0x10\n        /* \"Equation.sol\":7041:7061  opcode >= OPCODE_AND */\n      0xff\n      and\n        /* \"Equation.sol\":7041:7047  opcode */\n      dup4\n        /* \"Equation.sol\":7041:7061  opcode >= OPCODE_AND */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Equation.sol\":7041:7084  opcode >= OPCODE_AND && opcode <= OPCODE_OR */\n      dup1\n      iszero\n      tag_312\n      jumpi\n      pop\n        /* \"Equation.sol\":4358:4360  17 */\n      0x11\n        /* \"Equation.sol\":7065:7084  opcode <= OPCODE_OR */\n      0xff\n      and\n        /* \"Equation.sol\":7065:7071  opcode */\n      dup4\n        /* \"Equation.sol\":7065:7084  opcode <= OPCODE_OR */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Equation.sol\":7041:7084  opcode >= OPCODE_AND && opcode <= OPCODE_OR */\n    tag_312:\n        /* \"Equation.sol\":7037:7866  if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"Equation.sol\":7115:7131  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":7103:7131  types[0] == ExprType.Boolean */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_314\n      jumpi\n      tag_315\n      tag_147\n      jump\t// in\n    tag_315:\n    tag_314:\n        /* \"Equation.sol\":7103:7108  types */\n      dup3\n        /* \"Equation.sol\":7109:7110  0 */\n      0x00\n        /* \"Equation.sol\":7103:7111  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_317\n      tag_26\n      jump\t// in\n    tag_317:\n    tag_316:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7103:7131  types[0] == ExprType.Boolean */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_318\n      jumpi\n      tag_319\n      tag_147\n      jump\t// in\n    tag_319:\n    tag_318:\n      eq\n        /* \"Equation.sol\":7095:7132  require(types[0] == ExprType.Boolean) */\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n        /* \"Equation.sol\":7161:7177  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":7149:7177  types[1] == ExprType.Boolean */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_321\n      jumpi\n      tag_322\n      tag_147\n      jump\t// in\n    tag_322:\n    tag_321:\n        /* \"Equation.sol\":7149:7154  types */\n      dup3\n        /* \"Equation.sol\":7155:7156  1 */\n      0x01\n        /* \"Equation.sol\":7149:7157  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_324\n      tag_26\n      jump\t// in\n    tag_324:\n    tag_323:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7149:7177  types[1] == ExprType.Boolean */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_325\n      jumpi\n      tag_326\n      tag_147\n      jump\t// in\n    tag_326:\n    tag_325:\n      eq\n        /* \"Equation.sol\":7141:7178  require(types[1] == ExprType.Boolean) */\n      tag_327\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_327:\n        /* \"Equation.sol\":7194:7210  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":7187:7210  return ExprType.Boolean */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":7037:7866  if (opcode >= OPCODE_AND && opcode <= OPCODE_OR) {... */\n    tag_313:\n        /* \"Equation.sol\":4392:4394  18 */\n      0x12\n        /* \"Equation.sol\":7228:7247  opcode == OPCODE_IF */\n      0xff\n      and\n        /* \"Equation.sol\":7228:7234  opcode */\n      dup4\n        /* \"Equation.sol\":7228:7247  opcode == OPCODE_IF */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":7224:7866  if (opcode == OPCODE_IF) {... */\n      tag_329\n      jumpi\n        /* \"Equation.sol\":7278:7294  ExprType.Boolean */\n      0x02\n        /* \"Equation.sol\":7266:7294  types[0] == ExprType.Boolean */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_330\n      jumpi\n      tag_331\n      tag_147\n      jump\t// in\n    tag_331:\n    tag_330:\n        /* \"Equation.sol\":7266:7271  types */\n      dup3\n        /* \"Equation.sol\":7272:7273  0 */\n      0x00\n        /* \"Equation.sol\":7266:7274  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_333\n      tag_26\n      jump\t// in\n    tag_333:\n    tag_332:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7266:7294  types[0] == ExprType.Boolean */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_334\n      jumpi\n      tag_335\n      tag_147\n      jump\t// in\n    tag_335:\n    tag_334:\n      eq\n        /* \"Equation.sol\":7258:7295  require(types[0] == ExprType.Boolean) */\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n        /* \"Equation.sol\":7324:7340  ExprType.Invalid */\n      0x00\n        /* \"Equation.sol\":7312:7340  types[1] != ExprType.Invalid */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_337\n      jumpi\n      tag_338\n      tag_147\n      jump\t// in\n    tag_338:\n    tag_337:\n        /* \"Equation.sol\":7312:7317  types */\n      dup3\n        /* \"Equation.sol\":7318:7319  1 */\n      0x01\n        /* \"Equation.sol\":7312:7320  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_340\n      tag_26\n      jump\t// in\n    tag_340:\n    tag_339:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7312:7340  types[1] != ExprType.Invalid */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_341\n      jumpi\n      tag_342\n      tag_147\n      jump\t// in\n    tag_342:\n    tag_341:\n      sub\n        /* \"Equation.sol\":7304:7341  require(types[1] != ExprType.Invalid) */\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n        /* \"Equation.sol\":7370:7375  types */\n      dup2\n        /* \"Equation.sol\":7376:7377  2 */\n      0x02\n        /* \"Equation.sol\":7370:7378  types[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_344\n      jumpi\n      tag_345\n      tag_26\n      jump\t// in\n    tag_345:\n    tag_344:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7358:7378  types[1] == types[2] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_346\n      jumpi\n      tag_347\n      tag_147\n      jump\t// in\n    tag_347:\n    tag_346:\n        /* \"Equation.sol\":7358:7363  types */\n      dup3\n        /* \"Equation.sol\":7364:7365  1 */\n      0x01\n        /* \"Equation.sol\":7358:7366  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_349\n      tag_26\n      jump\t// in\n    tag_349:\n    tag_348:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7358:7378  types[1] == types[2] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_350\n      jumpi\n      tag_351\n      tag_147\n      jump\t// in\n    tag_351:\n    tag_350:\n      eq\n        /* \"Equation.sol\":7350:7379  require(types[1] == types[2]) */\n      tag_352\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_352:\n        /* \"Equation.sol\":7395:7400  types */\n      dup2\n        /* \"Equation.sol\":7401:7402  1 */\n      0x01\n        /* \"Equation.sol\":7395:7403  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_353\n      jumpi\n      tag_354\n      tag_26\n      jump\t// in\n    tag_354:\n    tag_353:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7388:7403  return types[1] */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":7224:7866  if (opcode == OPCODE_IF) {... */\n    tag_329:\n        /* \"Equation.sol\":4434:4436  19 */\n      0x13\n        /* \"Equation.sol\":7421:7448  opcode == OPCODE_BANCOR_LOG */\n      0xff\n      and\n        /* \"Equation.sol\":7421:7427  opcode */\n      dup4\n        /* \"Equation.sol\":7421:7448  opcode == OPCODE_BANCOR_LOG */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":7417:7866  if (opcode == OPCODE_BANCOR_LOG) {... */\n      tag_356\n      jumpi\n        /* \"Equation.sol\":7479:7492  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7467:7492  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_357\n      jumpi\n      tag_358\n      tag_147\n      jump\t// in\n    tag_358:\n    tag_357:\n        /* \"Equation.sol\":7467:7472  types */\n      dup3\n        /* \"Equation.sol\":7473:7474  0 */\n      0x00\n        /* \"Equation.sol\":7467:7475  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_359\n      jumpi\n      tag_360\n      tag_26\n      jump\t// in\n    tag_360:\n    tag_359:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7467:7492  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_361\n      jumpi\n      tag_362\n      tag_147\n      jump\t// in\n    tag_362:\n    tag_361:\n      eq\n        /* \"Equation.sol\":7459:7493  require(types[0] == ExprType.Math) */\n      tag_363\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_363:\n        /* \"Equation.sol\":7522:7535  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7510:7535  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_364\n      jumpi\n      tag_365\n      tag_147\n      jump\t// in\n    tag_365:\n    tag_364:\n        /* \"Equation.sol\":7510:7515  types */\n      dup3\n        /* \"Equation.sol\":7516:7517  1 */\n      0x01\n        /* \"Equation.sol\":7510:7518  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      tag_367\n      tag_26\n      jump\t// in\n    tag_367:\n    tag_366:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7510:7535  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_368\n      jumpi\n      tag_369\n      tag_147\n      jump\t// in\n    tag_369:\n    tag_368:\n      eq\n        /* \"Equation.sol\":7502:7536  require(types[1] == ExprType.Math) */\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n        /* \"Equation.sol\":7565:7578  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7553:7578  types[2] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_371\n      jumpi\n      tag_372\n      tag_147\n      jump\t// in\n    tag_372:\n    tag_371:\n        /* \"Equation.sol\":7553:7558  types */\n      dup3\n        /* \"Equation.sol\":7559:7560  2 */\n      0x02\n        /* \"Equation.sol\":7553:7561  types[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_374\n      tag_26\n      jump\t// in\n    tag_374:\n    tag_373:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7553:7578  types[2] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_375\n      jumpi\n      tag_376\n      tag_147\n      jump\t// in\n    tag_376:\n    tag_375:\n      eq\n        /* \"Equation.sol\":7545:7579  require(types[2] == ExprType.Math) */\n      tag_377\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_377:\n        /* \"Equation.sol\":7595:7608  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7588:7608  return ExprType.Math */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":7417:7866  if (opcode == OPCODE_BANCOR_LOG) {... */\n    tag_356:\n        /* \"Equation.sol\":4478:4480  20 */\n      0x14\n        /* \"Equation.sol\":7626:7655  opcode == OPCODE_BANCOR_POWER */\n      0xff\n      and\n        /* \"Equation.sol\":7626:7632  opcode */\n      dup4\n        /* \"Equation.sol\":7626:7655  opcode == OPCODE_BANCOR_POWER */\n      0xff\n      and\n      sub\n        /* \"Equation.sol\":7622:7866  if (opcode == OPCODE_BANCOR_POWER) {... */\n      tag_379\n      jumpi\n        /* \"Equation.sol\":7686:7699  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7674:7699  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_380\n      jumpi\n      tag_381\n      tag_147\n      jump\t// in\n    tag_381:\n    tag_380:\n        /* \"Equation.sol\":7674:7679  types */\n      dup3\n        /* \"Equation.sol\":7680:7681  0 */\n      0x00\n        /* \"Equation.sol\":7674:7682  types[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_382\n      jumpi\n      tag_383\n      tag_26\n      jump\t// in\n    tag_383:\n    tag_382:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7674:7699  types[0] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_384\n      jumpi\n      tag_385\n      tag_147\n      jump\t// in\n    tag_385:\n    tag_384:\n      eq\n        /* \"Equation.sol\":7666:7700  require(types[0] == ExprType.Math) */\n      tag_386\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_386:\n        /* \"Equation.sol\":7729:7742  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7717:7742  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_387\n      jumpi\n      tag_388\n      tag_147\n      jump\t// in\n    tag_388:\n    tag_387:\n        /* \"Equation.sol\":7717:7722  types */\n      dup3\n        /* \"Equation.sol\":7723:7724  1 */\n      0x01\n        /* \"Equation.sol\":7717:7725  types[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_389\n      jumpi\n      tag_390\n      tag_26\n      jump\t// in\n    tag_390:\n    tag_389:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7717:7742  types[1] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_391\n      jumpi\n      tag_392\n      tag_147\n      jump\t// in\n    tag_392:\n    tag_391:\n      eq\n        /* \"Equation.sol\":7709:7743  require(types[1] == ExprType.Math) */\n      tag_393\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_393:\n        /* \"Equation.sol\":7772:7785  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7760:7785  types[2] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_394\n      jumpi\n      tag_395\n      tag_147\n      jump\t// in\n    tag_395:\n    tag_394:\n        /* \"Equation.sol\":7760:7765  types */\n      dup3\n        /* \"Equation.sol\":7766:7767  2 */\n      0x02\n        /* \"Equation.sol\":7760:7768  types[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_397\n      tag_26\n      jump\t// in\n    tag_397:\n    tag_396:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7760:7785  types[2] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_398\n      jumpi\n      tag_399\n      tag_147\n      jump\t// in\n    tag_399:\n    tag_398:\n      eq\n        /* \"Equation.sol\":7752:7786  require(types[2] == ExprType.Math) */\n      tag_400\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_400:\n        /* \"Equation.sol\":7815:7828  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7803:7828  types[3] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_401\n      jumpi\n      tag_402\n      tag_147\n      jump\t// in\n    tag_402:\n    tag_401:\n        /* \"Equation.sol\":7803:7808  types */\n      dup3\n        /* \"Equation.sol\":7809:7810  3 */\n      0x03\n        /* \"Equation.sol\":7803:7811  types[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_404\n      tag_26\n      jump\t// in\n    tag_404:\n    tag_403:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Equation.sol\":7803:7828  types[3] == ExprType.Math */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_405\n      jumpi\n      tag_406\n      tag_147\n      jump\t// in\n    tag_406:\n    tag_405:\n      eq\n        /* \"Equation.sol\":7795:7829  require(types[3] == ExprType.Math) */\n      tag_407\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_407:\n        /* \"Equation.sol\":7845:7858  ExprType.Math */\n      0x01\n        /* \"Equation.sol\":7838:7858  return ExprType.Math */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"Equation.sol\":7622:7866  if (opcode == OPCODE_BANCOR_POWER) {... */\n    tag_379:\n        /* \"Equation.sol\":7872:7880  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Equation.sol\":6269:7886  function checkExprType(uint8 opcode, ExprType[] memory types)... */\n    tag_257:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":18519:21317  function optimalLog(uint256 x) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"BancorPower.sol\":18573:18580  uint256 */\n      0x00\n        /* \"BancorPower.sol\":18593:18604  uint256 res */\n      dup1\n        /* \"BancorPower.sol\":18607:18608  0 */\n      0x00\n        /* \"BancorPower.sol\":18593:18608  uint256 res = 0 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":18621:18630  uint256 y */\n      0x00\n        /* \"BancorPower.sol\":18641:18650  uint256 z */\n      dup1\n        /* \"BancorPower.sol\":18661:18670  uint256 w */\n      0x00\n        /* \"BancorPower.sol\":18692:18726  0xd3094c70f034de4b96ff7d5b6f99fcd8 */\n      0xd3094c70f034de4b96ff7d5b6f99fcd8\n        /* \"BancorPower.sol\":18687:18688  x */\n      dup7\n        /* \"BancorPower.sol\":18687:18726  x >= 0xd3094c70f034de4b96ff7d5b6f99fcd8 */\n      lt\n        /* \"BancorPower.sol\":18683:18826  if (x >= 0xd3094c70f034de4b96ff7d5b6f99fcd8) {res += 0x40000000000000000000000000000000; x = x * FIXED_1 / 0xd3094c70f034de4b96ff7d5b6f99fcd8;} */\n      tag_409\n      jumpi\n        /* \"BancorPower.sol\":18736:18770  0x40000000000000000000000000000000 */\n      0x40000000000000000000000000000000\n        /* \"BancorPower.sol\":18729:18770  res += 0x40000000000000000000000000000000 */\n      dup5\n      tag_410\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_410:\n      swap4\n      pop\n        /* \"BancorPower.sol\":18790:18824  0xd3094c70f034de4b96ff7d5b6f99fcd8 */\n      0xd3094c70f034de4b96ff7d5b6f99fcd8\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":18776:18777  x */\n      dup8\n        /* \"BancorPower.sol\":18776:18787  x * FIXED_1 */\n      tag_411\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_411:\n        /* \"BancorPower.sol\":18776:18824  x * FIXED_1 / 0xd3094c70f034de4b96ff7d5b6f99fcd8 */\n      tag_412\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_412:\n        /* \"BancorPower.sol\":18772:18824  x = x * FIXED_1 / 0xd3094c70f034de4b96ff7d5b6f99fcd8 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":18683:18826  if (x >= 0xd3094c70f034de4b96ff7d5b6f99fcd8) {res += 0x40000000000000000000000000000000; x = x * FIXED_1 / 0xd3094c70f034de4b96ff7d5b6f99fcd8;} */\n    tag_409:\n        /* \"BancorPower.sol\":18860:18894  0xa45af1e1f40c333b3de1db4dd55f29a7 */\n      0xa45af1e1f40c333b3de1db4dd55f29a7\n        /* \"BancorPower.sol\":18855:18856  x */\n      dup7\n        /* \"BancorPower.sol\":18855:18894  x >= 0xa45af1e1f40c333b3de1db4dd55f29a7 */\n      lt\n        /* \"BancorPower.sol\":18851:18994  if (x >= 0xa45af1e1f40c333b3de1db4dd55f29a7) {res += 0x20000000000000000000000000000000; x = x * FIXED_1 / 0xa45af1e1f40c333b3de1db4dd55f29a7;} */\n      tag_413\n      jumpi\n        /* \"BancorPower.sol\":18904:18938  0x20000000000000000000000000000000 */\n      0x20000000000000000000000000000000\n        /* \"BancorPower.sol\":18897:18938  res += 0x20000000000000000000000000000000 */\n      dup5\n      tag_414\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_414:\n      swap4\n      pop\n        /* \"BancorPower.sol\":18958:18992  0xa45af1e1f40c333b3de1db4dd55f29a7 */\n      0xa45af1e1f40c333b3de1db4dd55f29a7\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":18944:18945  x */\n      dup8\n        /* \"BancorPower.sol\":18944:18955  x * FIXED_1 */\n      tag_415\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_415:\n        /* \"BancorPower.sol\":18944:18992  x * FIXED_1 / 0xa45af1e1f40c333b3de1db4dd55f29a7 */\n      tag_416\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_416:\n        /* \"BancorPower.sol\":18940:18992  x = x * FIXED_1 / 0xa45af1e1f40c333b3de1db4dd55f29a7 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":18851:18994  if (x >= 0xa45af1e1f40c333b3de1db4dd55f29a7) {res += 0x20000000000000000000000000000000; x = x * FIXED_1 / 0xa45af1e1f40c333b3de1db4dd55f29a7;} */\n    tag_413:\n        /* \"BancorPower.sol\":19028:19062  0x910b022db7ae67ce76b441c27035c6a1 */\n      0x910b022db7ae67ce76b441c27035c6a1\n        /* \"BancorPower.sol\":19023:19024  x */\n      dup7\n        /* \"BancorPower.sol\":19023:19062  x >= 0x910b022db7ae67ce76b441c27035c6a1 */\n      lt\n        /* \"BancorPower.sol\":19019:19162  if (x >= 0x910b022db7ae67ce76b441c27035c6a1) {res += 0x10000000000000000000000000000000; x = x * FIXED_1 / 0x910b022db7ae67ce76b441c27035c6a1;} */\n      tag_417\n      jumpi\n        /* \"BancorPower.sol\":19072:19106  0x10000000000000000000000000000000 */\n      0x10000000000000000000000000000000\n        /* \"BancorPower.sol\":19065:19106  res += 0x10000000000000000000000000000000 */\n      dup5\n      tag_418\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_418:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19126:19160  0x910b022db7ae67ce76b441c27035c6a1 */\n      0x910b022db7ae67ce76b441c27035c6a1\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19112:19113  x */\n      dup8\n        /* \"BancorPower.sol\":19112:19123  x * FIXED_1 */\n      tag_419\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_419:\n        /* \"BancorPower.sol\":19112:19160  x * FIXED_1 / 0x910b022db7ae67ce76b441c27035c6a1 */\n      tag_420\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_420:\n        /* \"BancorPower.sol\":19108:19160  x = x * FIXED_1 / 0x910b022db7ae67ce76b441c27035c6a1 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19019:19162  if (x >= 0x910b022db7ae67ce76b441c27035c6a1) {res += 0x10000000000000000000000000000000; x = x * FIXED_1 / 0x910b022db7ae67ce76b441c27035c6a1;} */\n    tag_417:\n        /* \"BancorPower.sol\":19196:19230  0x88415abbe9a76bead8d00cf112e4d4a8 */\n      0x88415abbe9a76bead8d00cf112e4d4a8\n        /* \"BancorPower.sol\":19191:19192  x */\n      dup7\n        /* \"BancorPower.sol\":19191:19230  x >= 0x88415abbe9a76bead8d00cf112e4d4a8 */\n      lt\n        /* \"BancorPower.sol\":19187:19330  if (x >= 0x88415abbe9a76bead8d00cf112e4d4a8) {res += 0x08000000000000000000000000000000; x = x * FIXED_1 / 0x88415abbe9a76bead8d00cf112e4d4a8;} */\n      tag_421\n      jumpi\n        /* \"BancorPower.sol\":19240:19274  0x08000000000000000000000000000000 */\n      0x08000000000000000000000000000000\n        /* \"BancorPower.sol\":19233:19274  res += 0x08000000000000000000000000000000 */\n      dup5\n      tag_422\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_422:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19294:19328  0x88415abbe9a76bead8d00cf112e4d4a8 */\n      0x88415abbe9a76bead8d00cf112e4d4a8\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19280:19281  x */\n      dup8\n        /* \"BancorPower.sol\":19280:19291  x * FIXED_1 */\n      tag_423\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_423:\n        /* \"BancorPower.sol\":19280:19328  x * FIXED_1 / 0x88415abbe9a76bead8d00cf112e4d4a8 */\n      tag_424\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_424:\n        /* \"BancorPower.sol\":19276:19328  x = x * FIXED_1 / 0x88415abbe9a76bead8d00cf112e4d4a8 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19187:19330  if (x >= 0x88415abbe9a76bead8d00cf112e4d4a8) {res += 0x08000000000000000000000000000000; x = x * FIXED_1 / 0x88415abbe9a76bead8d00cf112e4d4a8;} */\n    tag_421:\n        /* \"BancorPower.sol\":19364:19398  0x84102b00893f64c705e841d5d4064bd3 */\n      0x84102b00893f64c705e841d5d4064bd3\n        /* \"BancorPower.sol\":19359:19360  x */\n      dup7\n        /* \"BancorPower.sol\":19359:19398  x >= 0x84102b00893f64c705e841d5d4064bd3 */\n      lt\n        /* \"BancorPower.sol\":19355:19498  if (x >= 0x84102b00893f64c705e841d5d4064bd3) {res += 0x04000000000000000000000000000000; x = x * FIXED_1 / 0x84102b00893f64c705e841d5d4064bd3;} */\n      tag_425\n      jumpi\n        /* \"BancorPower.sol\":19408:19442  0x04000000000000000000000000000000 */\n      0x04000000000000000000000000000000\n        /* \"BancorPower.sol\":19401:19442  res += 0x04000000000000000000000000000000 */\n      dup5\n      tag_426\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_426:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19462:19496  0x84102b00893f64c705e841d5d4064bd3 */\n      0x84102b00893f64c705e841d5d4064bd3\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19448:19449  x */\n      dup8\n        /* \"BancorPower.sol\":19448:19459  x * FIXED_1 */\n      tag_427\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_427:\n        /* \"BancorPower.sol\":19448:19496  x * FIXED_1 / 0x84102b00893f64c705e841d5d4064bd3 */\n      tag_428\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_428:\n        /* \"BancorPower.sol\":19444:19496  x = x * FIXED_1 / 0x84102b00893f64c705e841d5d4064bd3 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19355:19498  if (x >= 0x84102b00893f64c705e841d5d4064bd3) {res += 0x04000000000000000000000000000000; x = x * FIXED_1 / 0x84102b00893f64c705e841d5d4064bd3;} */\n    tag_425:\n        /* \"BancorPower.sol\":19532:19566  0x8204055aaef1c8bd5c3259f4822735a2 */\n      0x8204055aaef1c8bd5c3259f4822735a2\n        /* \"BancorPower.sol\":19527:19528  x */\n      dup7\n        /* \"BancorPower.sol\":19527:19566  x >= 0x8204055aaef1c8bd5c3259f4822735a2 */\n      lt\n        /* \"BancorPower.sol\":19523:19666  if (x >= 0x8204055aaef1c8bd5c3259f4822735a2) {res += 0x02000000000000000000000000000000; x = x * FIXED_1 / 0x8204055aaef1c8bd5c3259f4822735a2;} */\n      tag_429\n      jumpi\n        /* \"BancorPower.sol\":19576:19610  0x02000000000000000000000000000000 */\n      0x02000000000000000000000000000000\n        /* \"BancorPower.sol\":19569:19610  res += 0x02000000000000000000000000000000 */\n      dup5\n      tag_430\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_430:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19630:19664  0x8204055aaef1c8bd5c3259f4822735a2 */\n      0x8204055aaef1c8bd5c3259f4822735a2\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19616:19617  x */\n      dup8\n        /* \"BancorPower.sol\":19616:19627  x * FIXED_1 */\n      tag_431\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_431:\n        /* \"BancorPower.sol\":19616:19664  x * FIXED_1 / 0x8204055aaef1c8bd5c3259f4822735a2 */\n      tag_432\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_432:\n        /* \"BancorPower.sol\":19612:19664  x = x * FIXED_1 / 0x8204055aaef1c8bd5c3259f4822735a2 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19523:19666  if (x >= 0x8204055aaef1c8bd5c3259f4822735a2) {res += 0x02000000000000000000000000000000; x = x * FIXED_1 / 0x8204055aaef1c8bd5c3259f4822735a2;} */\n    tag_429:\n        /* \"BancorPower.sol\":19700:19734  0x810100ab00222d861931c15e39b44e99 */\n      0x810100ab00222d861931c15e39b44e99\n        /* \"BancorPower.sol\":19695:19696  x */\n      dup7\n        /* \"BancorPower.sol\":19695:19734  x >= 0x810100ab00222d861931c15e39b44e99 */\n      lt\n        /* \"BancorPower.sol\":19691:19834  if (x >= 0x810100ab00222d861931c15e39b44e99) {res += 0x01000000000000000000000000000000; x = x * FIXED_1 / 0x810100ab00222d861931c15e39b44e99;} */\n      tag_433\n      jumpi\n        /* \"BancorPower.sol\":19744:19778  0x01000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"BancorPower.sol\":19737:19778  res += 0x01000000000000000000000000000000 */\n      dup5\n      tag_434\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_434:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19798:19832  0x810100ab00222d861931c15e39b44e99 */\n      0x810100ab00222d861931c15e39b44e99\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19784:19785  x */\n      dup8\n        /* \"BancorPower.sol\":19784:19795  x * FIXED_1 */\n      tag_435\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_435:\n        /* \"BancorPower.sol\":19784:19832  x * FIXED_1 / 0x810100ab00222d861931c15e39b44e99 */\n      tag_436\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_436:\n        /* \"BancorPower.sol\":19780:19832  x = x * FIXED_1 / 0x810100ab00222d861931c15e39b44e99 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19691:19834  if (x >= 0x810100ab00222d861931c15e39b44e99) {res += 0x01000000000000000000000000000000; x = x * FIXED_1 / 0x810100ab00222d861931c15e39b44e99;} */\n    tag_433:\n        /* \"BancorPower.sol\":19868:19902  0x808040155aabbbe9451521693554f733 */\n      0x808040155aabbbe9451521693554f733\n        /* \"BancorPower.sol\":19863:19864  x */\n      dup7\n        /* \"BancorPower.sol\":19863:19902  x >= 0x808040155aabbbe9451521693554f733 */\n      lt\n        /* \"BancorPower.sol\":19859:20002  if (x >= 0x808040155aabbbe9451521693554f733) {res += 0x00800000000000000000000000000000; x = x * FIXED_1 / 0x808040155aabbbe9451521693554f733;} */\n      tag_437\n      jumpi\n        /* \"BancorPower.sol\":19912:19946  0x00800000000000000000000000000000 */\n      0x800000000000000000000000000000\n        /* \"BancorPower.sol\":19905:19946  res += 0x00800000000000000000000000000000 */\n      dup5\n      tag_438\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_438:\n      swap4\n      pop\n        /* \"BancorPower.sol\":19966:20000  0x808040155aabbbe9451521693554f733 */\n      0x808040155aabbbe9451521693554f733\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":19952:19953  x */\n      dup8\n        /* \"BancorPower.sol\":19952:19963  x * FIXED_1 */\n      tag_439\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_439:\n        /* \"BancorPower.sol\":19952:20000  x * FIXED_1 / 0x808040155aabbbe9451521693554f733 */\n      tag_440\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_440:\n        /* \"BancorPower.sol\":19948:20000  x = x * FIXED_1 / 0x808040155aabbbe9451521693554f733 */\n      swap6\n      pop\n        /* \"BancorPower.sol\":19859:20002  if (x >= 0x808040155aabbbe9451521693554f733) {res += 0x00800000000000000000000000000000; x = x * FIXED_1 / 0x808040155aabbbe9451521693554f733;} */\n    tag_437:\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20037:20038  x */\n      dup7\n        /* \"BancorPower.sol\":20037:20048  x - FIXED_1 */\n      tag_441\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_441:\n        /* \"BancorPower.sol\":20033:20048  y = x - FIXED_1 */\n      swap3\n      pop\n      dup3\n        /* \"BancorPower.sol\":20029:20048  z = y = x - FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20067:20068  y */\n      dup4\n        /* \"BancorPower.sol\":20063:20064  y */\n      dup5\n        /* \"BancorPower.sol\":20063:20068  y * y */\n      tag_442\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_442:\n        /* \"BancorPower.sol\":20063:20078  y * y / FIXED_1 */\n      tag_443\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_443:\n        /* \"BancorPower.sol\":20059:20078  w = y * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":20144:20179  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"BancorPower.sol\":20139:20140  y */\n      dup4\n        /* \"BancorPower.sol\":20101:20136  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"BancorPower.sol\":20101:20140  0x100000000000000000000000000000000 - y */\n      tag_444\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_444:\n        /* \"BancorPower.sol\":20096:20097  z */\n      dup4\n        /* \"BancorPower.sol\":20096:20141  z * (0x100000000000000000000000000000000 - y) */\n      tag_445\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_445:\n        /* \"BancorPower.sol\":20096:20179  z * (0x100000000000000000000000000000000 - y) / 0x100000000000000000000000000000000 */\n      tag_446\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_446:\n        /* \"BancorPower.sol\":20089:20179  res += z * (0x100000000000000000000000000000000 - y) / 0x100000000000000000000000000000000 */\n      dup5\n      tag_447\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_447:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20189:20190  w */\n      dup2\n        /* \"BancorPower.sol\":20185:20186  z */\n      dup4\n        /* \"BancorPower.sol\":20185:20190  z * w */\n      tag_448\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_448:\n        /* \"BancorPower.sol\":20185:20200  z * w / FIXED_1 */\n      tag_449\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_449:\n        /* \"BancorPower.sol\":20181:20200  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":20295:20330  0x200000000000000000000000000000000 */\n      0x0200000000000000000000000000000000\n        /* \"BancorPower.sol\":20290:20291  y */\n      dup4\n        /* \"BancorPower.sol\":20252:20287  0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa */\n      0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n        /* \"BancorPower.sol\":20252:20291  0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y */\n      tag_450\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_450:\n        /* \"BancorPower.sol\":20247:20248  z */\n      dup4\n        /* \"BancorPower.sol\":20247:20292  z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) */\n      tag_451\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_451:\n        /* \"BancorPower.sol\":20247:20330  z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) / 0x200000000000000000000000000000000 */\n      tag_452\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_452:\n        /* \"BancorPower.sol\":20240:20330  res += z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) / 0x200000000000000000000000000000000 */\n      dup5\n      tag_453\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_453:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20340:20341  w */\n      dup2\n        /* \"BancorPower.sol\":20336:20337  z */\n      dup4\n        /* \"BancorPower.sol\":20336:20341  z * w */\n      tag_454\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_454:\n        /* \"BancorPower.sol\":20336:20351  z * w / FIXED_1 */\n      tag_455\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_455:\n        /* \"BancorPower.sol\":20332:20351  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":20446:20481  0x300000000000000000000000000000000 */\n      0x0300000000000000000000000000000000\n        /* \"BancorPower.sol\":20441:20442  y */\n      dup4\n        /* \"BancorPower.sol\":20403:20438  0x099999999999999999999999999999999 */\n      0x99999999999999999999999999999999\n        /* \"BancorPower.sol\":20403:20442  0x099999999999999999999999999999999 - y */\n      tag_456\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_456:\n        /* \"BancorPower.sol\":20398:20399  z */\n      dup4\n        /* \"BancorPower.sol\":20398:20443  z * (0x099999999999999999999999999999999 - y) */\n      tag_457\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_457:\n        /* \"BancorPower.sol\":20398:20481  z * (0x099999999999999999999999999999999 - y) / 0x300000000000000000000000000000000 */\n      tag_458\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_458:\n        /* \"BancorPower.sol\":20391:20481  res += z * (0x099999999999999999999999999999999 - y) / 0x300000000000000000000000000000000 */\n      dup5\n      tag_459\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_459:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20491:20492  w */\n      dup2\n        /* \"BancorPower.sol\":20487:20488  z */\n      dup4\n        /* \"BancorPower.sol\":20487:20492  z * w */\n      tag_460\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_460:\n        /* \"BancorPower.sol\":20487:20502  z * w / FIXED_1 */\n      tag_461\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_461:\n        /* \"BancorPower.sol\":20483:20502  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":20597:20632  0x400000000000000000000000000000000 */\n      0x0400000000000000000000000000000000\n        /* \"BancorPower.sol\":20592:20593  y */\n      dup4\n        /* \"BancorPower.sol\":20554:20589  0x092492492492492492492492492492492 */\n      0x92492492492492492492492492492492\n        /* \"BancorPower.sol\":20554:20593  0x092492492492492492492492492492492 - y */\n      tag_462\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_462:\n        /* \"BancorPower.sol\":20549:20550  z */\n      dup4\n        /* \"BancorPower.sol\":20549:20594  z * (0x092492492492492492492492492492492 - y) */\n      tag_463\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_463:\n        /* \"BancorPower.sol\":20549:20632  z * (0x092492492492492492492492492492492 - y) / 0x400000000000000000000000000000000 */\n      tag_464\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_464:\n        /* \"BancorPower.sol\":20542:20632  res += z * (0x092492492492492492492492492492492 - y) / 0x400000000000000000000000000000000 */\n      dup5\n      tag_465\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_465:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20642:20643  w */\n      dup2\n        /* \"BancorPower.sol\":20638:20639  z */\n      dup4\n        /* \"BancorPower.sol\":20638:20643  z * w */\n      tag_466\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_466:\n        /* \"BancorPower.sol\":20638:20653  z * w / FIXED_1 */\n      tag_467\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_467:\n        /* \"BancorPower.sol\":20634:20653  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":20748:20783  0x500000000000000000000000000000000 */\n      0x0500000000000000000000000000000000\n        /* \"BancorPower.sol\":20743:20744  y */\n      dup4\n        /* \"BancorPower.sol\":20705:20740  0x08e38e38e38e38e38e38e38e38e38e38e */\n      0x8e38e38e38e38e38e38e38e38e38e38e\n        /* \"BancorPower.sol\":20705:20744  0x08e38e38e38e38e38e38e38e38e38e38e - y */\n      tag_468\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_468:\n        /* \"BancorPower.sol\":20700:20701  z */\n      dup4\n        /* \"BancorPower.sol\":20700:20745  z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) */\n      tag_469\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_469:\n        /* \"BancorPower.sol\":20700:20783  z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) / 0x500000000000000000000000000000000 */\n      tag_470\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_470:\n        /* \"BancorPower.sol\":20693:20783  res += z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) / 0x500000000000000000000000000000000 */\n      dup5\n      tag_471\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_471:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20793:20794  w */\n      dup2\n        /* \"BancorPower.sol\":20789:20790  z */\n      dup4\n        /* \"BancorPower.sol\":20789:20794  z * w */\n      tag_472\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_472:\n        /* \"BancorPower.sol\":20789:20804  z * w / FIXED_1 */\n      tag_473\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_473:\n        /* \"BancorPower.sol\":20785:20804  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":20899:20934  0x600000000000000000000000000000000 */\n      0x0600000000000000000000000000000000\n        /* \"BancorPower.sol\":20894:20895  y */\n      dup4\n        /* \"BancorPower.sol\":20856:20891  0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b */\n      0x8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b\n        /* \"BancorPower.sol\":20856:20895  0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y */\n      tag_474\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_474:\n        /* \"BancorPower.sol\":20851:20852  z */\n      dup4\n        /* \"BancorPower.sol\":20851:20896  z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) */\n      tag_475\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_475:\n        /* \"BancorPower.sol\":20851:20934  z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) / 0x600000000000000000000000000000000 */\n      tag_476\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_476:\n        /* \"BancorPower.sol\":20844:20934  res += z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) / 0x600000000000000000000000000000000 */\n      dup5\n      tag_477\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_477:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":20944:20945  w */\n      dup2\n        /* \"BancorPower.sol\":20940:20941  z */\n      dup4\n        /* \"BancorPower.sol\":20940:20945  z * w */\n      tag_478\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_478:\n        /* \"BancorPower.sol\":20940:20955  z * w / FIXED_1 */\n      tag_479\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_479:\n        /* \"BancorPower.sol\":20936:20955  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":21050:21085  0x700000000000000000000000000000000 */\n      0x0700000000000000000000000000000000\n        /* \"BancorPower.sol\":21045:21046  y */\n      dup4\n        /* \"BancorPower.sol\":21007:21042  0x089d89d89d89d89d89d89d89d89d89d89 */\n      0x89d89d89d89d89d89d89d89d89d89d89\n        /* \"BancorPower.sol\":21007:21046  0x089d89d89d89d89d89d89d89d89d89d89 - y */\n      tag_480\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_480:\n        /* \"BancorPower.sol\":21002:21003  z */\n      dup4\n        /* \"BancorPower.sol\":21002:21047  z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) */\n      tag_481\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_481:\n        /* \"BancorPower.sol\":21002:21085  z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) / 0x700000000000000000000000000000000 */\n      tag_482\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_482:\n        /* \"BancorPower.sol\":20995:21085  res += z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) / 0x700000000000000000000000000000000 */\n      dup5\n      tag_483\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_483:\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":21095:21096  w */\n      dup2\n        /* \"BancorPower.sol\":21091:21092  z */\n      dup4\n        /* \"BancorPower.sol\":21091:21096  z * w */\n      tag_484\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_484:\n        /* \"BancorPower.sol\":21091:21106  z * w / FIXED_1 */\n      tag_485\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_485:\n        /* \"BancorPower.sol\":21087:21106  z = z * w / FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":21201:21236  0x800000000000000000000000000000000 */\n      0x0800000000000000000000000000000000\n        /* \"BancorPower.sol\":21196:21197  y */\n      dup4\n        /* \"BancorPower.sol\":21158:21193  0x088888888888888888888888888888888 */\n      0x88888888888888888888888888888888\n        /* \"BancorPower.sol\":21158:21197  0x088888888888888888888888888888888 - y */\n      tag_486\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_486:\n        /* \"BancorPower.sol\":21153:21154  z */\n      dup4\n        /* \"BancorPower.sol\":21153:21198  z * (0x088888888888888888888888888888888 - y) */\n      tag_487\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_487:\n        /* \"BancorPower.sol\":21153:21236  z * (0x088888888888888888888888888888888 - y) / 0x800000000000000000000000000000000 */\n      tag_488\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_488:\n        /* \"BancorPower.sol\":21146:21236  res += z * (0x088888888888888888888888888888888 - y) / 0x800000000000000000000000000000000 */\n      dup5\n      tag_489\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_489:\n      swap4\n      pop\n        /* \"BancorPower.sol\":21306:21309  res */\n      dup4\n        /* \"BancorPower.sol\":21299:21309  return res */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BancorPower.sol\":18519:21317  function optimalLog(uint256 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":4745:5568  function generalLog(uint256 x) internal pure returns (uint256) {... */\n    tag_223:\n        /* \"BancorPower.sol\":4799:4806  uint256 */\n      0x00\n        /* \"BancorPower.sol\":4819:4830  uint256 res */\n      dup1\n        /* \"BancorPower.sol\":4833:4834  0 */\n      0x00\n        /* \"BancorPower.sol\":4819:4834  uint256 res = 0 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":1183:1218  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"BancorPower.sol\":4943:4944  x */\n      dup4\n        /* \"BancorPower.sol\":4943:4955  x >= FIXED_2 */\n      lt\n        /* \"BancorPower.sol\":4939:5095  if (x >= FIXED_2) {... */\n      tag_491\n      jumpi\n        /* \"BancorPower.sol\":4972:4983  uint8 count */\n      0x00\n        /* \"BancorPower.sol\":4986:5008  floorLog2(x / FIXED_1) */\n      tag_492\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":4996:4997  x */\n      dup6\n        /* \"BancorPower.sol\":4996:5007  x / FIXED_1 */\n      tag_493\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_493:\n        /* \"BancorPower.sol\":4986:4995  floorLog2 */\n      tag_494\n        /* \"BancorPower.sol\":4986:5008  floorLog2(x / FIXED_1) */\n      jump\t// in\n    tag_492:\n        /* \"BancorPower.sol\":4972:5008  uint8 count = floorLog2(x / FIXED_1) */\n      swap1\n      pop\n        /* \"BancorPower.sol\":5029:5034  count */\n      dup1\n        /* \"BancorPower.sol\":5023:5034  x >>= count */\n      0xff\n      and\n      dup5\n      swap1\n      shr\n      swap4\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":5068:5073  count */\n      dup2\n        /* \"BancorPower.sol\":5068:5083  count * FIXED_1 */\n      0xff\n      and\n      tag_495\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_495:\n        /* \"BancorPower.sol\":5062:5083  res = count * FIXED_1 */\n      swap2\n      pop\n        /* \"BancorPower.sol\":4957:5095  {... */\n      pop\n        /* \"BancorPower.sol\":4939:5095  if (x >= FIXED_2) {... */\n    tag_491:\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":5203:5204  x */\n      dup4\n        /* \"BancorPower.sol\":5203:5214  x > FIXED_1 */\n      gt\n        /* \"BancorPower.sol\":5199:5504  if (x > FIXED_1) {... */\n      iszero\n      tag_496\n      jumpi\n        /* \"BancorPower.sol\":5236:5243  uint8 i */\n      0x00\n        /* \"BancorPower.sol\":986:989  127 */\n      0x7f\n        /* \"BancorPower.sol\":5236:5259  uint8 i = MAX_PRECISION */\n      swap1\n      pop\n        /* \"BancorPower.sol\":5231:5493  for (uint8 i = MAX_PRECISION; i > 0; --i) {... */\n    tag_497:\n        /* \"BancorPower.sol\":5265:5266  0 */\n      0x00\n        /* \"BancorPower.sol\":5261:5262  i */\n      dup2\n        /* \"BancorPower.sol\":5261:5266  i > 0 */\n      0xff\n      and\n      gt\n        /* \"BancorPower.sol\":5231:5493  for (uint8 i = MAX_PRECISION; i > 0; --i) {... */\n      iszero\n      tag_498\n      jumpi\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":5301:5302  x */\n      dup5\n        /* \"BancorPower.sol\":5297:5298  x */\n      dup6\n        /* \"BancorPower.sol\":5297:5302  x * x */\n      tag_500\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_500:\n        /* \"BancorPower.sol\":5296:5313  (x * x) / FIXED_1 */\n      tag_501\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_501:\n        /* \"BancorPower.sol\":5292:5313  x = (x * x) / FIXED_1 */\n      swap4\n      pop\n        /* \"BancorPower.sol\":1183:1218  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"BancorPower.sol\":5353:5354  x */\n      dup5\n        /* \"BancorPower.sol\":5353:5365  x >= FIXED_2 */\n      lt\n        /* \"BancorPower.sol\":5349:5478  if (x >= FIXED_2) {... */\n      tag_502\n      jumpi\n        /* \"BancorPower.sol\":5396:5397  1 */\n      0x01\n        /* \"BancorPower.sol\":5390:5397  x >>= 1 */\n      dup5\n      swap1\n      shr\n      swap4\n      pop\n        /* \"BancorPower.sol\":5456:5457  1 */\n      0x01\n        /* \"BancorPower.sol\":5452:5453  i */\n      dup2\n        /* \"BancorPower.sol\":5452:5457  i - 1 */\n      tag_503\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_503:\n        /* \"BancorPower.sol\":5444:5458  ONE << (i - 1) */\n      0xff\n      and\n        /* \"BancorPower.sol\":840:841  1 */\n      0x01\n        /* \"BancorPower.sol\":5444:5458  ONE << (i - 1) */\n      swap1\n      shl\n        /* \"BancorPower.sol\":5437:5458  res += ONE << (i - 1) */\n      dup3\n      tag_504\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_504:\n      swap2\n      pop\n        /* \"BancorPower.sol\":5349:5478  if (x >= FIXED_2) {... */\n    tag_502:\n        /* \"BancorPower.sol\":5268:5271  --i */\n      dup1\n      tag_505\n      swap1\n      tag_506\n      jump\t// in\n    tag_505:\n      swap1\n      pop\n        /* \"BancorPower.sol\":5231:5493  for (uint8 i = MAX_PRECISION; i > 0; --i) {... */\n      jump(tag_497)\n    tag_498:\n      pop\n        /* \"BancorPower.sol\":5199:5504  if (x > FIXED_1) {... */\n    tag_496:\n        /* \"BancorPower.sol\":1503:1536  0x5b9de1d10bf4103d647b0955897ba80 */\n      0x05b9de1d10bf4103d647b0955897ba80\n        /* \"BancorPower.sol\":1420:1453  0x3f80fe03f80fe03f80fe03f80fe03f8 */\n      0x03f80fe03f80fe03f80fe03f80fe03f8\n        /* \"BancorPower.sol\":5523:5526  res */\n      dup3\n        /* \"BancorPower.sol\":5523:5542  res * LN2_NUMERATOR */\n      tag_507\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_507:\n        /* \"BancorPower.sol\":5523:5560  res * LN2_NUMERATOR / LN2_DENOMINATOR */\n      tag_508\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_508:\n        /* \"BancorPower.sol\":5516:5560  return res * LN2_NUMERATOR / LN2_DENOMINATOR */\n      swap2\n      pop\n      pop\n        /* \"BancorPower.sol\":4745:5568  function generalLog(uint256 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":22007:25223  function optimalExp(uint256 x) internal pure returns (uint256) {... */\n    tag_239:\n        /* \"BancorPower.sol\":22061:22068  uint256 */\n      0x00\n        /* \"BancorPower.sol\":22081:22092  uint256 res */\n      dup1\n        /* \"BancorPower.sol\":22095:22096  0 */\n      0x00\n        /* \"BancorPower.sol\":22081:22096  uint256 res = 0 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22109:22118  uint256 y */\n      0x00\n        /* \"BancorPower.sol\":22129:22138  uint256 z */\n      dup1\n        /* \"BancorPower.sol\":22163:22197  0x10000000000000000000000000000000 */\n      0x10000000000000000000000000000000\n        /* \"BancorPower.sol\":22159:22160  x */\n      dup6\n        /* \"BancorPower.sol\":22159:22197  x % 0x10000000000000000000000000000000 */\n      tag_510\n      swap2\n      swap1\n      tag_511\n      jump\t// in\n    tag_510:\n        /* \"BancorPower.sol\":22155:22197  y = x % 0x10000000000000000000000000000000 */\n      swap2\n      pop\n      dup2\n        /* \"BancorPower.sol\":22151:22197  z = y = x % 0x10000000000000000000000000000000 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22247:22248  y */\n      dup3\n        /* \"BancorPower.sol\":22243:22244  z */\n      dup3\n        /* \"BancorPower.sol\":22243:22248  z * y */\n      tag_512\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_512:\n        /* \"BancorPower.sol\":22243:22258  z * y / FIXED_1 */\n      tag_513\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_513:\n        /* \"BancorPower.sol\":22239:22258  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22271:22289  0x10e1b3be415a0000 */\n      0x10e1b3be415a0000\n        /* \"BancorPower.sol\":22267:22268  z */\n      dup2\n        /* \"BancorPower.sol\":22267:22289  z * 0x10e1b3be415a0000 */\n      tag_514\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_514:\n        /* \"BancorPower.sol\":22260:22289  res += z * 0x10e1b3be415a0000 */\n      dup4\n      tag_515\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_515:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22334:22335  y */\n      dup3\n        /* \"BancorPower.sol\":22330:22331  z */\n      dup3\n        /* \"BancorPower.sol\":22330:22335  z * y */\n      tag_516\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_516:\n        /* \"BancorPower.sol\":22330:22345  z * y / FIXED_1 */\n      tag_517\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_517:\n        /* \"BancorPower.sol\":22326:22345  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22358:22376  0x05a0913f6b1e0000 */\n      0x05a0913f6b1e0000\n        /* \"BancorPower.sol\":22354:22355  z */\n      dup2\n        /* \"BancorPower.sol\":22354:22376  z * 0x05a0913f6b1e0000 */\n      tag_518\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_518:\n        /* \"BancorPower.sol\":22347:22376  res += z * 0x05a0913f6b1e0000 */\n      dup4\n      tag_519\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_519:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22421:22422  y */\n      dup3\n        /* \"BancorPower.sol\":22417:22418  z */\n      dup3\n        /* \"BancorPower.sol\":22417:22422  z * y */\n      tag_520\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_520:\n        /* \"BancorPower.sol\":22417:22432  z * y / FIXED_1 */\n      tag_521\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_521:\n        /* \"BancorPower.sol\":22413:22432  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22445:22463  0x0168244fdac78000 */\n      0x0168244fdac78000\n        /* \"BancorPower.sol\":22441:22442  z */\n      dup2\n        /* \"BancorPower.sol\":22441:22463  z * 0x0168244fdac78000 */\n      tag_522\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_522:\n        /* \"BancorPower.sol\":22434:22463  res += z * 0x0168244fdac78000 */\n      dup4\n      tag_523\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_523:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22508:22509  y */\n      dup3\n        /* \"BancorPower.sol\":22504:22505  z */\n      dup3\n        /* \"BancorPower.sol\":22504:22509  z * y */\n      tag_524\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_524:\n        /* \"BancorPower.sol\":22504:22519  z * y / FIXED_1 */\n      tag_525\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_525:\n        /* \"BancorPower.sol\":22500:22519  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22532:22550  0x004807432bc18000 */\n      0x4807432bc18000\n        /* \"BancorPower.sol\":22528:22529  z */\n      dup2\n        /* \"BancorPower.sol\":22528:22550  z * 0x004807432bc18000 */\n      tag_526\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_526:\n        /* \"BancorPower.sol\":22521:22550  res += z * 0x004807432bc18000 */\n      dup4\n      tag_527\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_527:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22595:22596  y */\n      dup3\n        /* \"BancorPower.sol\":22591:22592  z */\n      dup3\n        /* \"BancorPower.sol\":22591:22596  z * y */\n      tag_528\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_528:\n        /* \"BancorPower.sol\":22591:22606  z * y / FIXED_1 */\n      tag_529\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_529:\n        /* \"BancorPower.sol\":22587:22606  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22619:22637  0x000c0135dca04000 */\n      0x0c0135dca04000\n        /* \"BancorPower.sol\":22615:22616  z */\n      dup2\n        /* \"BancorPower.sol\":22615:22637  z * 0x000c0135dca04000 */\n      tag_530\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_530:\n        /* \"BancorPower.sol\":22608:22637  res += z * 0x000c0135dca04000 */\n      dup4\n      tag_531\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_531:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22682:22683  y */\n      dup3\n        /* \"BancorPower.sol\":22678:22679  z */\n      dup3\n        /* \"BancorPower.sol\":22678:22683  z * y */\n      tag_532\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_532:\n        /* \"BancorPower.sol\":22678:22693  z * y / FIXED_1 */\n      tag_533\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_533:\n        /* \"BancorPower.sol\":22674:22693  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22706:22724  0x0001b707b1cdc000 */\n      0x01b707b1cdc000\n        /* \"BancorPower.sol\":22702:22703  z */\n      dup2\n        /* \"BancorPower.sol\":22702:22724  z * 0x0001b707b1cdc000 */\n      tag_534\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_534:\n        /* \"BancorPower.sol\":22695:22724  res += z * 0x0001b707b1cdc000 */\n      dup4\n      tag_535\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_535:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22769:22770  y */\n      dup3\n        /* \"BancorPower.sol\":22765:22766  z */\n      dup3\n        /* \"BancorPower.sol\":22765:22770  z * y */\n      tag_536\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_536:\n        /* \"BancorPower.sol\":22765:22780  z * y / FIXED_1 */\n      tag_537\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_537:\n        /* \"BancorPower.sol\":22761:22780  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22793:22811  0x000036e0f639b800 */\n      0x36e0f639b800\n        /* \"BancorPower.sol\":22789:22790  z */\n      dup2\n        /* \"BancorPower.sol\":22789:22811  z * 0x000036e0f639b800 */\n      tag_538\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_538:\n        /* \"BancorPower.sol\":22782:22811  res += z * 0x000036e0f639b800 */\n      dup4\n      tag_539\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_539:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22856:22857  y */\n      dup3\n        /* \"BancorPower.sol\":22852:22853  z */\n      dup3\n        /* \"BancorPower.sol\":22852:22857  z * y */\n      tag_540\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_540:\n        /* \"BancorPower.sol\":22852:22867  z * y / FIXED_1 */\n      tag_541\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_541:\n        /* \"BancorPower.sol\":22848:22867  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22880:22898  0x00000618fee9f800 */\n      0x0618fee9f800\n        /* \"BancorPower.sol\":22876:22877  z */\n      dup2\n        /* \"BancorPower.sol\":22876:22898  z * 0x00000618fee9f800 */\n      tag_542\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_542:\n        /* \"BancorPower.sol\":22869:22898  res += z * 0x00000618fee9f800 */\n      dup4\n      tag_543\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_543:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":22943:22944  y */\n      dup3\n        /* \"BancorPower.sol\":22939:22940  z */\n      dup3\n        /* \"BancorPower.sol\":22939:22944  z * y */\n      tag_544\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_544:\n        /* \"BancorPower.sol\":22939:22954  z * y / FIXED_1 */\n      tag_545\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_545:\n        /* \"BancorPower.sol\":22935:22954  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":22967:22985  0x0000009c197dcc00 */\n      0x9c197dcc00\n        /* \"BancorPower.sol\":22963:22964  z */\n      dup2\n        /* \"BancorPower.sol\":22963:22985  z * 0x0000009c197dcc00 */\n      tag_546\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_546:\n        /* \"BancorPower.sol\":22956:22985  res += z * 0x0000009c197dcc00 */\n      dup4\n      tag_547\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_547:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23030:23031  y */\n      dup3\n        /* \"BancorPower.sol\":23026:23027  z */\n      dup3\n        /* \"BancorPower.sol\":23026:23031  z * y */\n      tag_548\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_548:\n        /* \"BancorPower.sol\":23026:23041  z * y / FIXED_1 */\n      tag_549\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_549:\n        /* \"BancorPower.sol\":23022:23041  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23054:23072  0x0000000e30dce400 */\n      0x0e30dce400\n        /* \"BancorPower.sol\":23050:23051  z */\n      dup2\n        /* \"BancorPower.sol\":23050:23072  z * 0x0000000e30dce400 */\n      tag_550\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_550:\n        /* \"BancorPower.sol\":23043:23072  res += z * 0x0000000e30dce400 */\n      dup4\n      tag_551\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_551:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23117:23118  y */\n      dup3\n        /* \"BancorPower.sol\":23113:23114  z */\n      dup3\n        /* \"BancorPower.sol\":23113:23118  z * y */\n      tag_552\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_552:\n        /* \"BancorPower.sol\":23113:23128  z * y / FIXED_1 */\n      tag_553\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_553:\n        /* \"BancorPower.sol\":23109:23128  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23141:23159  0x000000012ebd1300 */\n      0x012ebd1300\n        /* \"BancorPower.sol\":23137:23138  z */\n      dup2\n        /* \"BancorPower.sol\":23137:23159  z * 0x000000012ebd1300 */\n      tag_554\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_554:\n        /* \"BancorPower.sol\":23130:23159  res += z * 0x000000012ebd1300 */\n      dup4\n      tag_555\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_555:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23204:23205  y */\n      dup3\n        /* \"BancorPower.sol\":23200:23201  z */\n      dup3\n        /* \"BancorPower.sol\":23200:23205  z * y */\n      tag_556\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_556:\n        /* \"BancorPower.sol\":23200:23215  z * y / FIXED_1 */\n      tag_557\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_557:\n        /* \"BancorPower.sol\":23196:23215  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23228:23246  0x0000000017499f00 */\n      0x17499f00\n        /* \"BancorPower.sol\":23224:23225  z */\n      dup2\n        /* \"BancorPower.sol\":23224:23246  z * 0x0000000017499f00 */\n      tag_558\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_558:\n        /* \"BancorPower.sol\":23217:23246  res += z * 0x0000000017499f00 */\n      dup4\n      tag_559\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_559:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23291:23292  y */\n      dup3\n        /* \"BancorPower.sol\":23287:23288  z */\n      dup3\n        /* \"BancorPower.sol\":23287:23292  z * y */\n      tag_560\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_560:\n        /* \"BancorPower.sol\":23287:23302  z * y / FIXED_1 */\n      tag_561\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_561:\n        /* \"BancorPower.sol\":23283:23302  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23315:23333  0x0000000001a9d480 */\n      0x01a9d480\n        /* \"BancorPower.sol\":23311:23312  z */\n      dup2\n        /* \"BancorPower.sol\":23311:23333  z * 0x0000000001a9d480 */\n      tag_562\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_562:\n        /* \"BancorPower.sol\":23304:23333  res += z * 0x0000000001a9d480 */\n      dup4\n      tag_563\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_563:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23378:23379  y */\n      dup3\n        /* \"BancorPower.sol\":23374:23375  z */\n      dup3\n        /* \"BancorPower.sol\":23374:23379  z * y */\n      tag_564\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_564:\n        /* \"BancorPower.sol\":23374:23389  z * y / FIXED_1 */\n      tag_565\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_565:\n        /* \"BancorPower.sol\":23370:23389  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23402:23420  0x00000000001c6380 */\n      0x1c6380\n        /* \"BancorPower.sol\":23398:23399  z */\n      dup2\n        /* \"BancorPower.sol\":23398:23420  z * 0x00000000001c6380 */\n      tag_566\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_566:\n        /* \"BancorPower.sol\":23391:23420  res += z * 0x00000000001c6380 */\n      dup4\n      tag_567\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_567:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23465:23466  y */\n      dup3\n        /* \"BancorPower.sol\":23461:23462  z */\n      dup3\n        /* \"BancorPower.sol\":23461:23466  z * y */\n      tag_568\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_568:\n        /* \"BancorPower.sol\":23461:23476  z * y / FIXED_1 */\n      tag_569\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_569:\n        /* \"BancorPower.sol\":23457:23476  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23489:23507  0x000000000001c638 */\n      0x01c638\n        /* \"BancorPower.sol\":23485:23486  z */\n      dup2\n        /* \"BancorPower.sol\":23485:23507  z * 0x000000000001c638 */\n      tag_570\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_570:\n        /* \"BancorPower.sol\":23478:23507  res += z * 0x000000000001c638 */\n      dup4\n      tag_571\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_571:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23552:23553  y */\n      dup3\n        /* \"BancorPower.sol\":23548:23549  z */\n      dup3\n        /* \"BancorPower.sol\":23548:23553  z * y */\n      tag_572\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_572:\n        /* \"BancorPower.sol\":23548:23563  z * y / FIXED_1 */\n      tag_573\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_573:\n        /* \"BancorPower.sol\":23544:23563  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23576:23594  0x0000000000001ab8 */\n      0x1ab8\n        /* \"BancorPower.sol\":23572:23573  z */\n      dup2\n        /* \"BancorPower.sol\":23572:23594  z * 0x0000000000001ab8 */\n      tag_574\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_574:\n        /* \"BancorPower.sol\":23565:23594  res += z * 0x0000000000001ab8 */\n      dup4\n      tag_575\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_575:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23639:23640  y */\n      dup3\n        /* \"BancorPower.sol\":23635:23636  z */\n      dup3\n        /* \"BancorPower.sol\":23635:23640  z * y */\n      tag_576\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_576:\n        /* \"BancorPower.sol\":23635:23650  z * y / FIXED_1 */\n      tag_577\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_577:\n        /* \"BancorPower.sol\":23631:23650  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23663:23681  0x000000000000017c */\n      0x017c\n        /* \"BancorPower.sol\":23659:23660  z */\n      dup2\n        /* \"BancorPower.sol\":23659:23681  z * 0x000000000000017c */\n      tag_578\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_578:\n        /* \"BancorPower.sol\":23652:23681  res += z * 0x000000000000017c */\n      dup4\n      tag_579\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_579:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23726:23727  y */\n      dup3\n        /* \"BancorPower.sol\":23722:23723  z */\n      dup3\n        /* \"BancorPower.sol\":23722:23727  z * y */\n      tag_580\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_580:\n        /* \"BancorPower.sol\":23722:23737  z * y / FIXED_1 */\n      tag_581\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_581:\n        /* \"BancorPower.sol\":23718:23737  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23750:23768  0x0000000000000014 */\n      0x14\n        /* \"BancorPower.sol\":23746:23747  z */\n      dup2\n        /* \"BancorPower.sol\":23746:23768  z * 0x0000000000000014 */\n      tag_582\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_582:\n        /* \"BancorPower.sol\":23739:23768  res += z * 0x0000000000000014 */\n      dup4\n      tag_583\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_583:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23813:23814  y */\n      dup3\n        /* \"BancorPower.sol\":23809:23810  z */\n      dup3\n        /* \"BancorPower.sol\":23809:23814  z * y */\n      tag_584\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_584:\n        /* \"BancorPower.sol\":23809:23824  z * y / FIXED_1 */\n      tag_585\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_585:\n        /* \"BancorPower.sol\":23805:23824  z = z * y / FIXED_1 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":23837:23855  0x0000000000000001 */\n      0x01\n        /* \"BancorPower.sol\":23833:23834  z */\n      dup2\n        /* \"BancorPower.sol\":23833:23855  z * 0x0000000000000001 */\n      tag_586\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_586:\n        /* \"BancorPower.sol\":23826:23855  res += z * 0x0000000000000001 */\n      dup4\n      tag_587\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_587:\n      swap3\n      pop\n        /* \"BancorPower.sol\":1106:1141  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":23925:23926  y */\n      dup3\n        /* \"BancorPower.sol\":23904:23922  0x21c3677c82b40000 */\n      0x21c3677c82b40000\n        /* \"BancorPower.sol\":23898:23901  res */\n      dup6\n        /* \"BancorPower.sol\":23898:23922  res / 0x21c3677c82b40000 */\n      tag_588\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_588:\n        /* \"BancorPower.sol\":23898:23926  res / 0x21c3677c82b40000 + y */\n      tag_589\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_589:\n        /* \"BancorPower.sol\":23898:23936  res / 0x21c3677c82b40000 + y + FIXED_1 */\n      tag_590\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_590:\n        /* \"BancorPower.sol\":23892:23936  res = res / 0x21c3677c82b40000 + y + FIXED_1 */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24048:24049  0 */\n      0x00\n        /* \"BancorPower.sol\":24008:24043  0x010000000000000000000000000000000 */\n      0x10000000000000000000000000000000\n        /* \"BancorPower.sol\":24004:24005  x */\n      dup7\n        /* \"BancorPower.sol\":24004:24043  x & 0x010000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24003:24049  (x & 0x010000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":23999:24136  if ((x & 0x010000000000000000000000000000000) != 0) res = res * 0x1c3d6a24ed82218787d624d3e5eba95f9 / 0x18ebef9eac820ae8682b9793ac6d1e776 */\n      tag_591\n      jumpi\n        /* \"BancorPower.sol\":24101:24136  0x18ebef9eac820ae8682b9793ac6d1e776 */\n      0x018ebef9eac820ae8682b9793ac6d1e776\n        /* \"BancorPower.sol\":24063:24098  0x1c3d6a24ed82218787d624d3e5eba95f9 */\n      0x01c3d6a24ed82218787d624d3e5eba95f9\n        /* \"BancorPower.sol\":24057:24060  res */\n      dup5\n        /* \"BancorPower.sol\":24057:24098  res * 0x1c3d6a24ed82218787d624d3e5eba95f9 */\n      tag_592\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_592:\n        /* \"BancorPower.sol\":24057:24136  res * 0x1c3d6a24ed82218787d624d3e5eba95f9 / 0x18ebef9eac820ae8682b9793ac6d1e776 */\n      tag_593\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_593:\n        /* \"BancorPower.sol\":24051:24136  res = res * 0x1c3d6a24ed82218787d624d3e5eba95f9 / 0x18ebef9eac820ae8682b9793ac6d1e776 */\n      swap3\n      pop\n        /* \"BancorPower.sol\":23999:24136  if ((x & 0x010000000000000000000000000000000) != 0) res = res * 0x1c3d6a24ed82218787d624d3e5eba95f9 / 0x18ebef9eac820ae8682b9793ac6d1e776 */\n    tag_591:\n        /* \"BancorPower.sol\":24220:24221  0 */\n      0x00\n        /* \"BancorPower.sol\":24180:24215  0x020000000000000000000000000000000 */\n      0x20000000000000000000000000000000\n        /* \"BancorPower.sol\":24176:24177  x */\n      dup7\n        /* \"BancorPower.sol\":24176:24215  x & 0x020000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24175:24221  (x & 0x020000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":24171:24308  if ((x & 0x020000000000000000000000000000000) != 0) res = res * 0x18ebef9eac820ae8682b9793ac6d1e778 / 0x1368b2fc6f9609fe7aceb46aa619baed4 */\n      tag_594\n      jumpi\n        /* \"BancorPower.sol\":24273:24308  0x1368b2fc6f9609fe7aceb46aa619baed4 */\n      0x01368b2fc6f9609fe7aceb46aa619baed4\n        /* \"BancorPower.sol\":24235:24270  0x18ebef9eac820ae8682b9793ac6d1e778 */\n      0x018ebef9eac820ae8682b9793ac6d1e778\n        /* \"BancorPower.sol\":24229:24232  res */\n      dup5\n        /* \"BancorPower.sol\":24229:24270  res * 0x18ebef9eac820ae8682b9793ac6d1e778 */\n      tag_595\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_595:\n        /* \"BancorPower.sol\":24229:24308  res * 0x18ebef9eac820ae8682b9793ac6d1e778 / 0x1368b2fc6f9609fe7aceb46aa619baed4 */\n      tag_596\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_596:\n        /* \"BancorPower.sol\":24223:24308  res = res * 0x18ebef9eac820ae8682b9793ac6d1e778 / 0x1368b2fc6f9609fe7aceb46aa619baed4 */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24171:24308  if ((x & 0x020000000000000000000000000000000) != 0) res = res * 0x18ebef9eac820ae8682b9793ac6d1e778 / 0x1368b2fc6f9609fe7aceb46aa619baed4 */\n    tag_594:\n        /* \"BancorPower.sol\":24392:24393  0 */\n      0x00\n        /* \"BancorPower.sol\":24352:24387  0x040000000000000000000000000000000 */\n      0x40000000000000000000000000000000\n        /* \"BancorPower.sol\":24348:24349  x */\n      dup7\n        /* \"BancorPower.sol\":24348:24387  x & 0x040000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24347:24393  (x & 0x040000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":24343:24480  if ((x & 0x040000000000000000000000000000000) != 0) res = res * 0x1368b2fc6f9609fe7aceb46aa619baed5 / 0x0bc5ab1b16779be3575bd8f0520a9f21f */\n      tag_597\n      jumpi\n        /* \"BancorPower.sol\":24445:24480  0x0bc5ab1b16779be3575bd8f0520a9f21f */\n      0xbc5ab1b16779be3575bd8f0520a9f21f\n        /* \"BancorPower.sol\":24407:24442  0x1368b2fc6f9609fe7aceb46aa619baed5 */\n      0x01368b2fc6f9609fe7aceb46aa619baed5\n        /* \"BancorPower.sol\":24401:24404  res */\n      dup5\n        /* \"BancorPower.sol\":24401:24442  res * 0x1368b2fc6f9609fe7aceb46aa619baed5 */\n      tag_598\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_598:\n        /* \"BancorPower.sol\":24401:24480  res * 0x1368b2fc6f9609fe7aceb46aa619baed5 / 0x0bc5ab1b16779be3575bd8f0520a9f21f */\n      tag_599\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_599:\n        /* \"BancorPower.sol\":24395:24480  res = res * 0x1368b2fc6f9609fe7aceb46aa619baed5 / 0x0bc5ab1b16779be3575bd8f0520a9f21f */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24343:24480  if ((x & 0x040000000000000000000000000000000) != 0) res = res * 0x1368b2fc6f9609fe7aceb46aa619baed5 / 0x0bc5ab1b16779be3575bd8f0520a9f21f */\n    tag_597:\n        /* \"BancorPower.sol\":24564:24565  0 */\n      0x00\n        /* \"BancorPower.sol\":24524:24559  0x080000000000000000000000000000000 */\n      0x80000000000000000000000000000000\n        /* \"BancorPower.sol\":24520:24521  x */\n      dup7\n        /* \"BancorPower.sol\":24520:24559  x & 0x080000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24519:24565  (x & 0x080000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":24515:24652  if ((x & 0x080000000000000000000000000000000) != 0) res = res * 0x0bc5ab1b16779be3575bd8f0520a9f21e / 0x0454aaa8efe072e7f6ddbab84b40a55c9 */\n      tag_600\n      jumpi\n        /* \"BancorPower.sol\":24617:24652  0x0454aaa8efe072e7f6ddbab84b40a55c9 */\n      0x454aaa8efe072e7f6ddbab84b40a55c9\n        /* \"BancorPower.sol\":24579:24614  0x0bc5ab1b16779be3575bd8f0520a9f21e */\n      0xbc5ab1b16779be3575bd8f0520a9f21e\n        /* \"BancorPower.sol\":24573:24576  res */\n      dup5\n        /* \"BancorPower.sol\":24573:24614  res * 0x0bc5ab1b16779be3575bd8f0520a9f21e */\n      tag_601\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_601:\n        /* \"BancorPower.sol\":24573:24652  res * 0x0bc5ab1b16779be3575bd8f0520a9f21e / 0x0454aaa8efe072e7f6ddbab84b40a55c9 */\n      tag_602\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_602:\n        /* \"BancorPower.sol\":24567:24652  res = res * 0x0bc5ab1b16779be3575bd8f0520a9f21e / 0x0454aaa8efe072e7f6ddbab84b40a55c9 */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24515:24652  if ((x & 0x080000000000000000000000000000000) != 0) res = res * 0x0bc5ab1b16779be3575bd8f0520a9f21e / 0x0454aaa8efe072e7f6ddbab84b40a55c9 */\n    tag_600:\n        /* \"BancorPower.sol\":24736:24737  0 */\n      0x00\n        /* \"BancorPower.sol\":24696:24731  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"BancorPower.sol\":24692:24693  x */\n      dup7\n        /* \"BancorPower.sol\":24692:24731  x & 0x100000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24691:24737  (x & 0x100000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":24687:24824  if ((x & 0x100000000000000000000000000000000) != 0) res = res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 / 0x00960aadc109e7a3bf4578099615711ea */\n      tag_603\n      jumpi\n        /* \"BancorPower.sol\":24789:24824  0x00960aadc109e7a3bf4578099615711ea */\n      0x0960aadc109e7a3bf4578099615711ea\n        /* \"BancorPower.sol\":24751:24786  0x0454aaa8efe072e7f6ddbab84b40a55c5 */\n      0x454aaa8efe072e7f6ddbab84b40a55c5\n        /* \"BancorPower.sol\":24745:24748  res */\n      dup5\n        /* \"BancorPower.sol\":24745:24786  res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 */\n      tag_604\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_604:\n        /* \"BancorPower.sol\":24745:24824  res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 / 0x00960aadc109e7a3bf4578099615711ea */\n      tag_605\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_605:\n        /* \"BancorPower.sol\":24739:24824  res = res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 / 0x00960aadc109e7a3bf4578099615711ea */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24687:24824  if ((x & 0x100000000000000000000000000000000) != 0) res = res * 0x0454aaa8efe072e7f6ddbab84b40a55c5 / 0x00960aadc109e7a3bf4578099615711ea */\n    tag_603:\n        /* \"BancorPower.sol\":24908:24909  0 */\n      0x00\n        /* \"BancorPower.sol\":24868:24903  0x200000000000000000000000000000000 */\n      0x0200000000000000000000000000000000\n        /* \"BancorPower.sol\":24864:24865  x */\n      dup7\n        /* \"BancorPower.sol\":24864:24903  x & 0x200000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":24863:24909  (x & 0x200000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":24859:24996  if ((x & 0x200000000000000000000000000000000) != 0) res = res * 0x00960aadc109e7a3bf4578099615711d7 / 0x0002bf84208204f5977f9a8cf01fdce3d */\n      tag_606\n      jumpi\n        /* \"BancorPower.sol\":24961:24996  0x0002bf84208204f5977f9a8cf01fdce3d */\n      0x2bf84208204f5977f9a8cf01fdce3d\n        /* \"BancorPower.sol\":24923:24958  0x00960aadc109e7a3bf4578099615711d7 */\n      0x0960aadc109e7a3bf4578099615711d7\n        /* \"BancorPower.sol\":24917:24920  res */\n      dup5\n        /* \"BancorPower.sol\":24917:24958  res * 0x00960aadc109e7a3bf4578099615711d7 */\n      tag_607\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_607:\n        /* \"BancorPower.sol\":24917:24996  res * 0x00960aadc109e7a3bf4578099615711d7 / 0x0002bf84208204f5977f9a8cf01fdce3d */\n      tag_608\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_608:\n        /* \"BancorPower.sol\":24911:24996  res = res * 0x00960aadc109e7a3bf4578099615711d7 / 0x0002bf84208204f5977f9a8cf01fdce3d */\n      swap3\n      pop\n        /* \"BancorPower.sol\":24859:24996  if ((x & 0x200000000000000000000000000000000) != 0) res = res * 0x00960aadc109e7a3bf4578099615711d7 / 0x0002bf84208204f5977f9a8cf01fdce3d */\n    tag_606:\n        /* \"BancorPower.sol\":25080:25081  0 */\n      0x00\n        /* \"BancorPower.sol\":25040:25075  0x400000000000000000000000000000000 */\n      0x0400000000000000000000000000000000\n        /* \"BancorPower.sol\":25036:25037  x */\n      dup7\n        /* \"BancorPower.sol\":25036:25075  x & 0x400000000000000000000000000000000 */\n      and\n        /* \"BancorPower.sol\":25035:25081  (x & 0x400000000000000000000000000000000) != 0 */\n      eq\n        /* \"BancorPower.sol\":25031:25168  if ((x & 0x400000000000000000000000000000000) != 0) res = res * 0x0002bf84208204f5977f9a8cf01fdc307 / 0x0000003c6ab775dd0b95b4cbee7e65d11 */\n      tag_609\n      jumpi\n        /* \"BancorPower.sol\":25133:25168  0x0000003c6ab775dd0b95b4cbee7e65d11 */\n      0x03c6ab775dd0b95b4cbee7e65d11\n        /* \"BancorPower.sol\":25095:25130  0x0002bf84208204f5977f9a8cf01fdc307 */\n      0x2bf84208204f5977f9a8cf01fdc307\n        /* \"BancorPower.sol\":25089:25092  res */\n      dup5\n        /* \"BancorPower.sol\":25089:25130  res * 0x0002bf84208204f5977f9a8cf01fdc307 */\n      tag_610\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_610:\n        /* \"BancorPower.sol\":25089:25168  res * 0x0002bf84208204f5977f9a8cf01fdc307 / 0x0000003c6ab775dd0b95b4cbee7e65d11 */\n      tag_611\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_611:\n        /* \"BancorPower.sol\":25083:25168  res = res * 0x0002bf84208204f5977f9a8cf01fdc307 / 0x0000003c6ab775dd0b95b4cbee7e65d11 */\n      swap3\n      pop\n        /* \"BancorPower.sol\":25031:25168  if ((x & 0x400000000000000000000000000000000) != 0) res = res * 0x0002bf84208204f5977f9a8cf01fdc307 / 0x0000003c6ab775dd0b95b4cbee7e65d11 */\n    tag_609:\n        /* \"BancorPower.sol\":25212:25215  res */\n      dup3\n        /* \"BancorPower.sol\":25205:25215  return res */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"BancorPower.sol\":22007:25223  function optimalExp(uint256 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":6600:13353  function findPositionInMaxExpArray(uint256 _x) internal pure returns (uint8) {... */\n    tag_242:\n        /* \"BancorPower.sol\":6670:6675  uint8 */\n      0x00\n        /* \"BancorPower.sol\":6732:6734  _x */\n      dup2\n        /* \"BancorPower.sol\":6692:6728  0x1c35fedd14ffffffffffffffffffffffff */\n      0x1c35fedd14ffffffffffffffffffffffff\n        /* \"BancorPower.sol\":6692:6734  0x1c35fedd14ffffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":6688:6746  if (0x1c35fedd14ffffffffffffffffffffffff >= _x) return  32 */\n      tag_613\n      jumpi\n        /* \"BancorPower.sol\":6744:6746  32 */\n      0x20\n        /* \"BancorPower.sol\":6736:6746  return  32 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":6688:6746  if (0x1c35fedd14ffffffffffffffffffffffff >= _x) return  32 */\n    tag_613:\n        /* \"BancorPower.sol\":6801:6803  _x */\n      dup2\n        /* \"BancorPower.sol\":6761:6797  0x1b0ce43b323fffffffffffffffffffffff */\n      0x1b0ce43b323fffffffffffffffffffffff\n        /* \"BancorPower.sol\":6761:6803  0x1b0ce43b323fffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":6757:6815  if (0x1b0ce43b323fffffffffffffffffffffff >= _x) return  33 */\n      tag_614\n      jumpi\n        /* \"BancorPower.sol\":6813:6815  33 */\n      0x21\n        /* \"BancorPower.sol\":6805:6815  return  33 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":6757:6815  if (0x1b0ce43b323fffffffffffffffffffffff >= _x) return  33 */\n    tag_614:\n        /* \"BancorPower.sol\":6870:6872  _x */\n      dup2\n        /* \"BancorPower.sol\":6830:6866  0x19f0028ec1ffffffffffffffffffffffff */\n      0x19f0028ec1ffffffffffffffffffffffff\n        /* \"BancorPower.sol\":6830:6872  0x19f0028ec1ffffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":6826:6884  if (0x19f0028ec1ffffffffffffffffffffffff >= _x) return  34 */\n      tag_615\n      jumpi\n        /* \"BancorPower.sol\":6882:6884  34 */\n      0x22\n        /* \"BancorPower.sol\":6874:6884  return  34 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":6826:6884  if (0x19f0028ec1ffffffffffffffffffffffff >= _x) return  34 */\n    tag_615:\n        /* \"BancorPower.sol\":6939:6941  _x */\n      dup2\n        /* \"BancorPower.sol\":6899:6935  0x18ded91f0e7fffffffffffffffffffffff */\n      0x18ded91f0e7fffffffffffffffffffffff\n        /* \"BancorPower.sol\":6899:6941  0x18ded91f0e7fffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":6895:6953  if (0x18ded91f0e7fffffffffffffffffffffff >= _x) return  35 */\n      tag_616\n      jumpi\n        /* \"BancorPower.sol\":6951:6953  35 */\n      0x23\n        /* \"BancorPower.sol\":6943:6953  return  35 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":6895:6953  if (0x18ded91f0e7fffffffffffffffffffffff >= _x) return  35 */\n    tag_616:\n        /* \"BancorPower.sol\":7008:7010  _x */\n      dup2\n        /* \"BancorPower.sol\":6968:7004  0x17d8ec7f0417ffffffffffffffffffffff */\n      0x17d8ec7f0417ffffffffffffffffffffff\n        /* \"BancorPower.sol\":6968:7010  0x17d8ec7f0417ffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":6964:7022  if (0x17d8ec7f0417ffffffffffffffffffffff >= _x) return  36 */\n      tag_617\n      jumpi\n        /* \"BancorPower.sol\":7020:7022  36 */\n      0x24\n        /* \"BancorPower.sol\":7012:7022  return  36 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":6964:7022  if (0x17d8ec7f0417ffffffffffffffffffffff >= _x) return  36 */\n    tag_617:\n        /* \"BancorPower.sol\":7077:7079  _x */\n      dup2\n        /* \"BancorPower.sol\":7037:7073  0x16ddc6556cdbffffffffffffffffffffff */\n      0x16ddc6556cdbffffffffffffffffffffff\n        /* \"BancorPower.sol\":7037:7079  0x16ddc6556cdbffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7033:7091  if (0x16ddc6556cdbffffffffffffffffffffff >= _x) return  37 */\n      tag_618\n      jumpi\n        /* \"BancorPower.sol\":7089:7091  37 */\n      0x25\n        /* \"BancorPower.sol\":7081:7091  return  37 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7033:7091  if (0x16ddc6556cdbffffffffffffffffffffff >= _x) return  37 */\n    tag_618:\n        /* \"BancorPower.sol\":7146:7148  _x */\n      dup2\n        /* \"BancorPower.sol\":7106:7142  0x15ecf52776a1ffffffffffffffffffffff */\n      0x15ecf52776a1ffffffffffffffffffffff\n        /* \"BancorPower.sol\":7106:7148  0x15ecf52776a1ffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7102:7160  if (0x15ecf52776a1ffffffffffffffffffffff >= _x) return  38 */\n      tag_619\n      jumpi\n        /* \"BancorPower.sol\":7158:7160  38 */\n      0x26\n        /* \"BancorPower.sol\":7150:7160  return  38 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7102:7160  if (0x15ecf52776a1ffffffffffffffffffffff >= _x) return  38 */\n    tag_619:\n        /* \"BancorPower.sol\":7215:7217  _x */\n      dup2\n        /* \"BancorPower.sol\":7175:7211  0x15060c256cb2ffffffffffffffffffffff */\n      0x15060c256cb2ffffffffffffffffffffff\n        /* \"BancorPower.sol\":7175:7217  0x15060c256cb2ffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7171:7229  if (0x15060c256cb2ffffffffffffffffffffff >= _x) return  39 */\n      tag_620\n      jumpi\n        /* \"BancorPower.sol\":7227:7229  39 */\n      0x27\n        /* \"BancorPower.sol\":7219:7229  return  39 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7171:7229  if (0x15060c256cb2ffffffffffffffffffffff >= _x) return  39 */\n    tag_620:\n        /* \"BancorPower.sol\":7284:7286  _x */\n      dup2\n        /* \"BancorPower.sol\":7244:7280  0x1428a2f98d72ffffffffffffffffffffff */\n      0x1428a2f98d72ffffffffffffffffffffff\n        /* \"BancorPower.sol\":7244:7286  0x1428a2f98d72ffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7240:7298  if (0x1428a2f98d72ffffffffffffffffffffff >= _x) return  40 */\n      tag_621\n      jumpi\n        /* \"BancorPower.sol\":7296:7298  40 */\n      0x28\n        /* \"BancorPower.sol\":7288:7298  return  40 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7240:7298  if (0x1428a2f98d72ffffffffffffffffffffff >= _x) return  40 */\n    tag_621:\n        /* \"BancorPower.sol\":7353:7355  _x */\n      dup2\n        /* \"BancorPower.sol\":7313:7349  0x13545598e5c23fffffffffffffffffffff */\n      0x13545598e5c23fffffffffffffffffffff\n        /* \"BancorPower.sol\":7313:7355  0x13545598e5c23fffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7309:7367  if (0x13545598e5c23fffffffffffffffffffff >= _x) return  41 */\n      tag_622\n      jumpi\n        /* \"BancorPower.sol\":7365:7367  41 */\n      0x29\n        /* \"BancorPower.sol\":7357:7367  return  41 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7309:7367  if (0x13545598e5c23fffffffffffffffffffff >= _x) return  41 */\n    tag_622:\n        /* \"BancorPower.sol\":7422:7424  _x */\n      dup2\n        /* \"BancorPower.sol\":7382:7418  0x1288c4161ce1dfffffffffffffffffffff */\n      0x1288c4161ce1dfffffffffffffffffffff\n        /* \"BancorPower.sol\":7382:7424  0x1288c4161ce1dfffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7378:7436  if (0x1288c4161ce1dfffffffffffffffffffff >= _x) return  42 */\n      tag_623\n      jumpi\n        /* \"BancorPower.sol\":7434:7436  42 */\n      0x2a\n        /* \"BancorPower.sol\":7426:7436  return  42 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7378:7436  if (0x1288c4161ce1dfffffffffffffffffffff >= _x) return  42 */\n    tag_623:\n        /* \"BancorPower.sol\":7491:7493  _x */\n      dup2\n        /* \"BancorPower.sol\":7451:7487  0x11c592761c666fffffffffffffffffffff */\n      0x11c592761c666fffffffffffffffffffff\n        /* \"BancorPower.sol\":7451:7493  0x11c592761c666fffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7447:7505  if (0x11c592761c666fffffffffffffffffffff >= _x) return  43 */\n      tag_624\n      jumpi\n        /* \"BancorPower.sol\":7503:7505  43 */\n      0x2b\n        /* \"BancorPower.sol\":7495:7505  return  43 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7447:7505  if (0x11c592761c666fffffffffffffffffffff >= _x) return  43 */\n    tag_624:\n        /* \"BancorPower.sol\":7560:7562  _x */\n      dup2\n        /* \"BancorPower.sol\":7520:7556  0x110a688680a757ffffffffffffffffffff */\n      0x110a688680a757ffffffffffffffffffff\n        /* \"BancorPower.sol\":7520:7562  0x110a688680a757ffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7516:7574  if (0x110a688680a757ffffffffffffffffffff >= _x) return  44 */\n      tag_625\n      jumpi\n        /* \"BancorPower.sol\":7572:7574  44 */\n      0x2c\n        /* \"BancorPower.sol\":7564:7574  return  44 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7516:7574  if (0x110a688680a757ffffffffffffffffffff >= _x) return  44 */\n    tag_625:\n        /* \"BancorPower.sol\":7629:7631  _x */\n      dup2\n        /* \"BancorPower.sol\":7589:7625  0x1056f1b5bedf77ffffffffffffffffffff */\n      0x1056f1b5bedf77ffffffffffffffffffff\n        /* \"BancorPower.sol\":7589:7631  0x1056f1b5bedf77ffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7585:7643  if (0x1056f1b5bedf77ffffffffffffffffffff >= _x) return  45 */\n      tag_626\n      jumpi\n        /* \"BancorPower.sol\":7641:7643  45 */\n      0x2d\n        /* \"BancorPower.sol\":7633:7643  return  45 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7585:7643  if (0x1056f1b5bedf77ffffffffffffffffffff >= _x) return  45 */\n    tag_626:\n        /* \"BancorPower.sol\":7698:7700  _x */\n      dup2\n        /* \"BancorPower.sol\":7658:7694  0x0faadceceeff8bffffffffffffffffffff */\n      0x0faadceceeff8bffffffffffffffffffff\n        /* \"BancorPower.sol\":7658:7700  0x0faadceceeff8bffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7654:7712  if (0x0faadceceeff8bffffffffffffffffffff >= _x) return  46 */\n      tag_627\n      jumpi\n        /* \"BancorPower.sol\":7710:7712  46 */\n      0x2e\n        /* \"BancorPower.sol\":7702:7712  return  46 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7654:7712  if (0x0faadceceeff8bffffffffffffffffffff >= _x) return  46 */\n    tag_627:\n        /* \"BancorPower.sol\":7767:7769  _x */\n      dup2\n        /* \"BancorPower.sol\":7727:7763  0x0f05dc6b27edadffffffffffffffffffff */\n      0x0f05dc6b27edadffffffffffffffffffff\n        /* \"BancorPower.sol\":7727:7769  0x0f05dc6b27edadffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7723:7781  if (0x0f05dc6b27edadffffffffffffffffffff >= _x) return  47 */\n      tag_628\n      jumpi\n        /* \"BancorPower.sol\":7779:7781  47 */\n      0x2f\n        /* \"BancorPower.sol\":7771:7781  return  47 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7723:7781  if (0x0f05dc6b27edadffffffffffffffffffff >= _x) return  47 */\n    tag_628:\n        /* \"BancorPower.sol\":7836:7838  _x */\n      dup2\n        /* \"BancorPower.sol\":7796:7832  0x0e67a5a25da4107fffffffffffffffffff */\n      0x0e67a5a25da4107fffffffffffffffffff\n        /* \"BancorPower.sol\":7796:7838  0x0e67a5a25da4107fffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7792:7850  if (0x0e67a5a25da4107fffffffffffffffffff >= _x) return  48 */\n      tag_629\n      jumpi\n        /* \"BancorPower.sol\":7848:7850  48 */\n      0x30\n        /* \"BancorPower.sol\":7840:7850  return  48 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7792:7850  if (0x0e67a5a25da4107fffffffffffffffffff >= _x) return  48 */\n    tag_629:\n        /* \"BancorPower.sol\":7905:7907  _x */\n      dup2\n        /* \"BancorPower.sol\":7865:7901  0x0dcff115b14eedffffffffffffffffffff */\n      0x0dcff115b14eedffffffffffffffffffff\n        /* \"BancorPower.sol\":7865:7907  0x0dcff115b14eedffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7861:7919  if (0x0dcff115b14eedffffffffffffffffffff >= _x) return  49 */\n      tag_630\n      jumpi\n        /* \"BancorPower.sol\":7917:7919  49 */\n      0x31\n        /* \"BancorPower.sol\":7909:7919  return  49 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7861:7919  if (0x0dcff115b14eedffffffffffffffffffff >= _x) return  49 */\n    tag_630:\n        /* \"BancorPower.sol\":7974:7976  _x */\n      dup2\n        /* \"BancorPower.sol\":7934:7970  0x0d3e7a392431239fffffffffffffffffff */\n      0x0d3e7a392431239fffffffffffffffffff\n        /* \"BancorPower.sol\":7934:7976  0x0d3e7a392431239fffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7930:7988  if (0x0d3e7a392431239fffffffffffffffffff >= _x) return  50 */\n      tag_631\n      jumpi\n        /* \"BancorPower.sol\":7986:7988  50 */\n      0x32\n        /* \"BancorPower.sol\":7978:7988  return  50 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7930:7988  if (0x0d3e7a392431239fffffffffffffffffff >= _x) return  50 */\n    tag_631:\n        /* \"BancorPower.sol\":8043:8045  _x */\n      dup2\n        /* \"BancorPower.sol\":8003:8039  0x0cb2ff529eb71e4fffffffffffffffffff */\n      0x0cb2ff529eb71e4fffffffffffffffffff\n        /* \"BancorPower.sol\":8003:8045  0x0cb2ff529eb71e4fffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":7999:8057  if (0x0cb2ff529eb71e4fffffffffffffffffff >= _x) return  51 */\n      tag_632\n      jumpi\n        /* \"BancorPower.sol\":8055:8057  51 */\n      0x33\n        /* \"BancorPower.sol\":8047:8057  return  51 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":7999:8057  if (0x0cb2ff529eb71e4fffffffffffffffffff >= _x) return  51 */\n    tag_632:\n        /* \"BancorPower.sol\":8112:8114  _x */\n      dup2\n        /* \"BancorPower.sol\":8072:8108  0x0c2d415c3db974afffffffffffffffffff */\n      0x0c2d415c3db974afffffffffffffffffff\n        /* \"BancorPower.sol\":8072:8114  0x0c2d415c3db974afffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8068:8126  if (0x0c2d415c3db974afffffffffffffffffff >= _x) return  52 */\n      tag_633\n      jumpi\n        /* \"BancorPower.sol\":8124:8126  52 */\n      0x34\n        /* \"BancorPower.sol\":8116:8126  return  52 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8068:8126  if (0x0c2d415c3db974afffffffffffffffffff >= _x) return  52 */\n    tag_633:\n        /* \"BancorPower.sol\":8181:8183  _x */\n      dup2\n        /* \"BancorPower.sol\":8141:8177  0x0bad03e7d883f69bffffffffffffffffff */\n      0x0bad03e7d883f69bffffffffffffffffff\n        /* \"BancorPower.sol\":8141:8183  0x0bad03e7d883f69bffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8137:8195  if (0x0bad03e7d883f69bffffffffffffffffff >= _x) return  53 */\n      tag_634\n      jumpi\n        /* \"BancorPower.sol\":8193:8195  53 */\n      0x35\n        /* \"BancorPower.sol\":8185:8195  return  53 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8137:8195  if (0x0bad03e7d883f69bffffffffffffffffff >= _x) return  53 */\n    tag_634:\n        /* \"BancorPower.sol\":8250:8252  _x */\n      dup2\n        /* \"BancorPower.sol\":8210:8246  0x0b320d03b2c343d5ffffffffffffffffff */\n      0x0b320d03b2c343d5ffffffffffffffffff\n        /* \"BancorPower.sol\":8210:8252  0x0b320d03b2c343d5ffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8206:8264  if (0x0b320d03b2c343d5ffffffffffffffffff >= _x) return  54 */\n      tag_635\n      jumpi\n        /* \"BancorPower.sol\":8262:8264  54 */\n      0x36\n        /* \"BancorPower.sol\":8254:8264  return  54 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8206:8264  if (0x0b320d03b2c343d5ffffffffffffffffff >= _x) return  54 */\n    tag_635:\n        /* \"BancorPower.sol\":8319:8321  _x */\n      dup2\n        /* \"BancorPower.sol\":8279:8315  0x0abc25204e02828dffffffffffffffffff */\n      0x0abc25204e02828dffffffffffffffffff\n        /* \"BancorPower.sol\":8279:8321  0x0abc25204e02828dffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8275:8333  if (0x0abc25204e02828dffffffffffffffffff >= _x) return  55 */\n      tag_636\n      jumpi\n        /* \"BancorPower.sol\":8331:8333  55 */\n      0x37\n        /* \"BancorPower.sol\":8323:8333  return  55 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8275:8333  if (0x0abc25204e02828dffffffffffffffffff >= _x) return  55 */\n    tag_636:\n        /* \"BancorPower.sol\":8388:8390  _x */\n      dup2\n        /* \"BancorPower.sol\":8348:8384  0x0a4b16f74ee4bb207fffffffffffffffff */\n      0x0a4b16f74ee4bb207fffffffffffffffff\n        /* \"BancorPower.sol\":8348:8390  0x0a4b16f74ee4bb207fffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8344:8402  if (0x0a4b16f74ee4bb207fffffffffffffffff >= _x) return  56 */\n      tag_637\n      jumpi\n        /* \"BancorPower.sol\":8400:8402  56 */\n      0x38\n        /* \"BancorPower.sol\":8392:8402  return  56 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8344:8402  if (0x0a4b16f74ee4bb207fffffffffffffffff >= _x) return  56 */\n    tag_637:\n        /* \"BancorPower.sol\":8457:8459  _x */\n      dup2\n        /* \"BancorPower.sol\":8417:8453  0x09deaf736ac1f569ffffffffffffffffff */\n      0x09deaf736ac1f569ffffffffffffffffff\n        /* \"BancorPower.sol\":8417:8459  0x09deaf736ac1f569ffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8413:8471  if (0x09deaf736ac1f569ffffffffffffffffff >= _x) return  57 */\n      tag_638\n      jumpi\n        /* \"BancorPower.sol\":8469:8471  57 */\n      0x39\n        /* \"BancorPower.sol\":8461:8471  return  57 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8413:8471  if (0x09deaf736ac1f569ffffffffffffffffff >= _x) return  57 */\n    tag_638:\n        /* \"BancorPower.sol\":8526:8528  _x */\n      dup2\n        /* \"BancorPower.sol\":8486:8522  0x0976bd9952c7aa957fffffffffffffffff */\n      0x0976bd9952c7aa957fffffffffffffffff\n        /* \"BancorPower.sol\":8486:8528  0x0976bd9952c7aa957fffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8482:8540  if (0x0976bd9952c7aa957fffffffffffffffff >= _x) return  58 */\n      tag_639\n      jumpi\n        /* \"BancorPower.sol\":8538:8540  58 */\n      0x3a\n        /* \"BancorPower.sol\":8530:8540  return  58 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8482:8540  if (0x0976bd9952c7aa957fffffffffffffffff >= _x) return  58 */\n    tag_639:\n        /* \"BancorPower.sol\":8595:8597  _x */\n      dup2\n        /* \"BancorPower.sol\":8555:8591  0x09131271922eaa606fffffffffffffffff */\n      0x09131271922eaa606fffffffffffffffff\n        /* \"BancorPower.sol\":8555:8597  0x09131271922eaa606fffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8551:8609  if (0x09131271922eaa606fffffffffffffffff >= _x) return  59 */\n      tag_640\n      jumpi\n        /* \"BancorPower.sol\":8607:8609  59 */\n      0x3b\n        /* \"BancorPower.sol\":8599:8609  return  59 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8551:8609  if (0x09131271922eaa606fffffffffffffffff >= _x) return  59 */\n    tag_640:\n        /* \"BancorPower.sol\":8664:8666  _x */\n      dup2\n        /* \"BancorPower.sol\":8624:8660  0x08b380f3558668c46fffffffffffffffff */\n      0x08b380f3558668c46fffffffffffffffff\n        /* \"BancorPower.sol\":8624:8666  0x08b380f3558668c46fffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8620:8678  if (0x08b380f3558668c46fffffffffffffffff >= _x) return  60 */\n      tag_641\n      jumpi\n        /* \"BancorPower.sol\":8676:8678  60 */\n      0x3c\n        /* \"BancorPower.sol\":8668:8678  return  60 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8620:8678  if (0x08b380f3558668c46fffffffffffffffff >= _x) return  60 */\n    tag_641:\n        /* \"BancorPower.sol\":8733:8735  _x */\n      dup2\n        /* \"BancorPower.sol\":8693:8729  0x0857ddf0117efa215bffffffffffffffff */\n      0x0857ddf0117efa215bffffffffffffffff\n        /* \"BancorPower.sol\":8693:8735  0x0857ddf0117efa215bffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8689:8747  if (0x0857ddf0117efa215bffffffffffffffff >= _x) return  61 */\n      tag_642\n      jumpi\n        /* \"BancorPower.sol\":8745:8747  61 */\n      0x3d\n        /* \"BancorPower.sol\":8737:8747  return  61 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8689:8747  if (0x0857ddf0117efa215bffffffffffffffff >= _x) return  61 */\n    tag_642:\n        /* \"BancorPower.sol\":8802:8804  _x */\n      dup2\n        /* \"BancorPower.sol\":8762:8798  0x07ffffffffffffffffffffffffffffffff */\n      0x07ffffffffffffffffffffffffffffffff\n        /* \"BancorPower.sol\":8762:8804  0x07ffffffffffffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8758:8816  if (0x07ffffffffffffffffffffffffffffffff >= _x) return  62 */\n      tag_643\n      jumpi\n        /* \"BancorPower.sol\":8814:8816  62 */\n      0x3e\n        /* \"BancorPower.sol\":8806:8816  return  62 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8758:8816  if (0x07ffffffffffffffffffffffffffffffff >= _x) return  62 */\n    tag_643:\n        /* \"BancorPower.sol\":8871:8873  _x */\n      dup2\n        /* \"BancorPower.sol\":8831:8867  0x07abbf6f6abb9d087fffffffffffffffff */\n      0x07abbf6f6abb9d087fffffffffffffffff\n        /* \"BancorPower.sol\":8831:8873  0x07abbf6f6abb9d087fffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8827:8885  if (0x07abbf6f6abb9d087fffffffffffffffff >= _x) return  63 */\n      tag_644\n      jumpi\n        /* \"BancorPower.sol\":8883:8885  63 */\n      0x3f\n        /* \"BancorPower.sol\":8875:8885  return  63 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8827:8885  if (0x07abbf6f6abb9d087fffffffffffffffff >= _x) return  63 */\n    tag_644:\n        /* \"BancorPower.sol\":8940:8942  _x */\n      dup2\n        /* \"BancorPower.sol\":8900:8936  0x075af62cbac95f7dfa7fffffffffffffff */\n      0x075af62cbac95f7dfa7fffffffffffffff\n        /* \"BancorPower.sol\":8900:8942  0x075af62cbac95f7dfa7fffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8896:8954  if (0x075af62cbac95f7dfa7fffffffffffffff >= _x) return  64 */\n      tag_645\n      jumpi\n        /* \"BancorPower.sol\":8952:8954  64 */\n      0x40\n        /* \"BancorPower.sol\":8944:8954  return  64 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8896:8954  if (0x075af62cbac95f7dfa7fffffffffffffff >= _x) return  64 */\n    tag_645:\n        /* \"BancorPower.sol\":9009:9011  _x */\n      dup2\n        /* \"BancorPower.sol\":8969:9005  0x070d7fb7452e187ac13fffffffffffffff */\n      0x070d7fb7452e187ac13fffffffffffffff\n        /* \"BancorPower.sol\":8969:9011  0x070d7fb7452e187ac13fffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":8965:9023  if (0x070d7fb7452e187ac13fffffffffffffff >= _x) return  65 */\n      tag_646\n      jumpi\n        /* \"BancorPower.sol\":9021:9023  65 */\n      0x41\n        /* \"BancorPower.sol\":9013:9023  return  65 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":8965:9023  if (0x070d7fb7452e187ac13fffffffffffffff >= _x) return  65 */\n    tag_646:\n        /* \"BancorPower.sol\":9078:9080  _x */\n      dup2\n        /* \"BancorPower.sol\":9038:9074  0x06c3390ecc8af379295fffffffffffffff */\n      0x06c3390ecc8af379295fffffffffffffff\n        /* \"BancorPower.sol\":9038:9080  0x06c3390ecc8af379295fffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9034:9092  if (0x06c3390ecc8af379295fffffffffffffff >= _x) return  66 */\n      tag_647\n      jumpi\n        /* \"BancorPower.sol\":9090:9092  66 */\n      0x42\n        /* \"BancorPower.sol\":9082:9092  return  66 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9034:9092  if (0x06c3390ecc8af379295fffffffffffffff >= _x) return  66 */\n    tag_647:\n        /* \"BancorPower.sol\":9147:9149  _x */\n      dup2\n        /* \"BancorPower.sol\":9107:9143  0x067c00a3b07ffc01fd6fffffffffffffff */\n      0x067c00a3b07ffc01fd6fffffffffffffff\n        /* \"BancorPower.sol\":9107:9149  0x067c00a3b07ffc01fd6fffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9103:9161  if (0x067c00a3b07ffc01fd6fffffffffffffff >= _x) return  67 */\n      tag_648\n      jumpi\n        /* \"BancorPower.sol\":9159:9161  67 */\n      0x43\n        /* \"BancorPower.sol\":9151:9161  return  67 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9103:9161  if (0x067c00a3b07ffc01fd6fffffffffffffff >= _x) return  67 */\n    tag_648:\n        /* \"BancorPower.sol\":9216:9218  _x */\n      dup2\n        /* \"BancorPower.sol\":9176:9212  0x0637b647c39cbb9d3d27ffffffffffffff */\n      0x0637b647c39cbb9d3d27ffffffffffffff\n        /* \"BancorPower.sol\":9176:9218  0x0637b647c39cbb9d3d27ffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9172:9230  if (0x0637b647c39cbb9d3d27ffffffffffffff >= _x) return  68 */\n      tag_649\n      jumpi\n        /* \"BancorPower.sol\":9228:9230  68 */\n      0x44\n        /* \"BancorPower.sol\":9220:9230  return  68 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9172:9230  if (0x0637b647c39cbb9d3d27ffffffffffffff >= _x) return  68 */\n    tag_649:\n        /* \"BancorPower.sol\":9285:9287  _x */\n      dup2\n        /* \"BancorPower.sol\":9245:9281  0x05f63b1fc104dbd39587ffffffffffffff */\n      0x05f63b1fc104dbd39587ffffffffffffff\n        /* \"BancorPower.sol\":9245:9287  0x05f63b1fc104dbd39587ffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9241:9299  if (0x05f63b1fc104dbd39587ffffffffffffff >= _x) return  69 */\n      tag_650\n      jumpi\n        /* \"BancorPower.sol\":9297:9299  69 */\n      0x45\n        /* \"BancorPower.sol\":9289:9299  return  69 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9241:9299  if (0x05f63b1fc104dbd39587ffffffffffffff >= _x) return  69 */\n    tag_650:\n        /* \"BancorPower.sol\":9354:9356  _x */\n      dup2\n        /* \"BancorPower.sol\":9314:9350  0x05b771955b36e12f7235ffffffffffffff */\n      0x05b771955b36e12f7235ffffffffffffff\n        /* \"BancorPower.sol\":9314:9356  0x05b771955b36e12f7235ffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9310:9368  if (0x05b771955b36e12f7235ffffffffffffff >= _x) return  70 */\n      tag_651\n      jumpi\n        /* \"BancorPower.sol\":9366:9368  70 */\n      0x46\n        /* \"BancorPower.sol\":9358:9368  return  70 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9310:9368  if (0x05b771955b36e12f7235ffffffffffffff >= _x) return  70 */\n    tag_651:\n        /* \"BancorPower.sol\":9423:9425  _x */\n      dup2\n        /* \"BancorPower.sol\":9383:9419  0x057b3d49dda84556d6f6ffffffffffffff */\n      0x057b3d49dda84556d6f6ffffffffffffff\n        /* \"BancorPower.sol\":9383:9425  0x057b3d49dda84556d6f6ffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9379:9437  if (0x057b3d49dda84556d6f6ffffffffffffff >= _x) return  71 */\n      tag_652\n      jumpi\n        /* \"BancorPower.sol\":9435:9437  71 */\n      0x47\n        /* \"BancorPower.sol\":9427:9437  return  71 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9379:9437  if (0x057b3d49dda84556d6f6ffffffffffffff >= _x) return  71 */\n    tag_652:\n        /* \"BancorPower.sol\":9492:9494  _x */\n      dup2\n        /* \"BancorPower.sol\":9452:9488  0x054183095b2c8ececf30ffffffffffffff */\n      0x054183095b2c8ececf30ffffffffffffff\n        /* \"BancorPower.sol\":9452:9494  0x054183095b2c8ececf30ffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9448:9506  if (0x054183095b2c8ececf30ffffffffffffff >= _x) return  72 */\n      tag_653\n      jumpi\n        /* \"BancorPower.sol\":9504:9506  72 */\n      0x48\n        /* \"BancorPower.sol\":9496:9506  return  72 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9448:9506  if (0x054183095b2c8ececf30ffffffffffffff >= _x) return  72 */\n    tag_653:\n        /* \"BancorPower.sol\":9561:9563  _x */\n      dup2\n        /* \"BancorPower.sol\":9521:9557  0x050a28be635ca2b888f77fffffffffffff */\n      0x050a28be635ca2b888f77fffffffffffff\n        /* \"BancorPower.sol\":9521:9563  0x050a28be635ca2b888f77fffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9517:9575  if (0x050a28be635ca2b888f77fffffffffffff >= _x) return  73 */\n      tag_654\n      jumpi\n        /* \"BancorPower.sol\":9573:9575  73 */\n      0x49\n        /* \"BancorPower.sol\":9565:9575  return  73 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9517:9575  if (0x050a28be635ca2b888f77fffffffffffff >= _x) return  73 */\n    tag_654:\n        /* \"BancorPower.sol\":9630:9632  _x */\n      dup2\n        /* \"BancorPower.sol\":9590:9626  0x04d5156639708c9db33c3fffffffffffff */\n      0x04d5156639708c9db33c3fffffffffffff\n        /* \"BancorPower.sol\":9590:9632  0x04d5156639708c9db33c3fffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9586:9644  if (0x04d5156639708c9db33c3fffffffffffff >= _x) return  74 */\n      tag_655\n      jumpi\n        /* \"BancorPower.sol\":9642:9644  74 */\n      0x4a\n        /* \"BancorPower.sol\":9634:9644  return  74 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9586:9644  if (0x04d5156639708c9db33c3fffffffffffff >= _x) return  74 */\n    tag_655:\n        /* \"BancorPower.sol\":9699:9701  _x */\n      dup2\n        /* \"BancorPower.sol\":9659:9695  0x04a23105873875bd52dfdfffffffffffff */\n      0x04a23105873875bd52dfdfffffffffffff\n        /* \"BancorPower.sol\":9659:9701  0x04a23105873875bd52dfdfffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9655:9713  if (0x04a23105873875bd52dfdfffffffffffff >= _x) return  75 */\n      tag_656\n      jumpi\n        /* \"BancorPower.sol\":9711:9713  75 */\n      0x4b\n        /* \"BancorPower.sol\":9703:9713  return  75 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9655:9713  if (0x04a23105873875bd52dfdfffffffffffff >= _x) return  75 */\n    tag_656:\n        /* \"BancorPower.sol\":9768:9770  _x */\n      dup2\n        /* \"BancorPower.sol\":9728:9764  0x0471649d87199aa990756fffffffffffff */\n      0x0471649d87199aa990756fffffffffffff\n        /* \"BancorPower.sol\":9728:9770  0x0471649d87199aa990756fffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9724:9782  if (0x0471649d87199aa990756fffffffffffff >= _x) return  76 */\n      tag_657\n      jumpi\n        /* \"BancorPower.sol\":9780:9782  76 */\n      0x4c\n        /* \"BancorPower.sol\":9772:9782  return  76 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9724:9782  if (0x0471649d87199aa990756fffffffffffff >= _x) return  76 */\n    tag_657:\n        /* \"BancorPower.sol\":9837:9839  _x */\n      dup2\n        /* \"BancorPower.sol\":9797:9833  0x04429a21a029d4c1457cfbffffffffffff */\n      0x04429a21a029d4c1457cfbffffffffffff\n        /* \"BancorPower.sol\":9797:9839  0x04429a21a029d4c1457cfbffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9793:9851  if (0x04429a21a029d4c1457cfbffffffffffff >= _x) return  77 */\n      tag_658\n      jumpi\n        /* \"BancorPower.sol\":9849:9851  77 */\n      0x4d\n        /* \"BancorPower.sol\":9841:9851  return  77 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9793:9851  if (0x04429a21a029d4c1457cfbffffffffffff >= _x) return  77 */\n    tag_658:\n        /* \"BancorPower.sol\":9906:9908  _x */\n      dup2\n        /* \"BancorPower.sol\":9866:9902  0x0415bc6d6fb7dd71af2cb3ffffffffffff */\n      0x0415bc6d6fb7dd71af2cb3ffffffffffff\n        /* \"BancorPower.sol\":9866:9908  0x0415bc6d6fb7dd71af2cb3ffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9862:9920  if (0x0415bc6d6fb7dd71af2cb3ffffffffffff >= _x) return  78 */\n      tag_659\n      jumpi\n        /* \"BancorPower.sol\":9918:9920  78 */\n      0x4e\n        /* \"BancorPower.sol\":9910:9920  return  78 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9862:9920  if (0x0415bc6d6fb7dd71af2cb3ffffffffffff >= _x) return  78 */\n    tag_659:\n        /* \"BancorPower.sol\":9975:9977  _x */\n      dup2\n        /* \"BancorPower.sol\":9935:9971  0x03eab73b3bbfe282243ce1ffffffffffff */\n      0x03eab73b3bbfe282243ce1ffffffffffff\n        /* \"BancorPower.sol\":9935:9977  0x03eab73b3bbfe282243ce1ffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":9931:9989  if (0x03eab73b3bbfe282243ce1ffffffffffff >= _x) return  79 */\n      tag_660\n      jumpi\n        /* \"BancorPower.sol\":9987:9989  79 */\n      0x4f\n        /* \"BancorPower.sol\":9979:9989  return  79 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":9931:9989  if (0x03eab73b3bbfe282243ce1ffffffffffff >= _x) return  79 */\n    tag_660:\n        /* \"BancorPower.sol\":10044:10046  _x */\n      dup2\n        /* \"BancorPower.sol\":10004:10040  0x03c1771ac9fb6b4c18e229ffffffffffff */\n      0x03c1771ac9fb6b4c18e229ffffffffffff\n        /* \"BancorPower.sol\":10004:10046  0x03c1771ac9fb6b4c18e229ffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10000:10058  if (0x03c1771ac9fb6b4c18e229ffffffffffff >= _x) return  80 */\n      tag_661\n      jumpi\n        /* \"BancorPower.sol\":10056:10058  80 */\n      0x50\n        /* \"BancorPower.sol\":10048:10058  return  80 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10000:10058  if (0x03c1771ac9fb6b4c18e229ffffffffffff >= _x) return  80 */\n    tag_661:\n        /* \"BancorPower.sol\":10113:10115  _x */\n      dup2\n        /* \"BancorPower.sol\":10073:10109  0x0399e96897690418f785257fffffffffff */\n      0x0399e96897690418f785257fffffffffff\n        /* \"BancorPower.sol\":10073:10115  0x0399e96897690418f785257fffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10069:10127  if (0x0399e96897690418f785257fffffffffff >= _x) return  81 */\n      tag_662\n      jumpi\n        /* \"BancorPower.sol\":10125:10127  81 */\n      0x51\n        /* \"BancorPower.sol\":10117:10127  return  81 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10069:10127  if (0x0399e96897690418f785257fffffffffff >= _x) return  81 */\n    tag_662:\n        /* \"BancorPower.sol\":10182:10184  _x */\n      dup2\n        /* \"BancorPower.sol\":10142:10178  0x0373fc456c53bb779bf0ea9fffffffffff */\n      0x0373fc456c53bb779bf0ea9fffffffffff\n        /* \"BancorPower.sol\":10142:10184  0x0373fc456c53bb779bf0ea9fffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10138:10196  if (0x0373fc456c53bb779bf0ea9fffffffffff >= _x) return  82 */\n      tag_663\n      jumpi\n        /* \"BancorPower.sol\":10194:10196  82 */\n      0x52\n        /* \"BancorPower.sol\":10186:10196  return  82 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10138:10196  if (0x0373fc456c53bb779bf0ea9fffffffffff >= _x) return  82 */\n    tag_663:\n        /* \"BancorPower.sol\":10251:10253  _x */\n      dup2\n        /* \"BancorPower.sol\":10211:10247  0x034f9e8e490c48e67e6ab8bfffffffffff */\n      0x034f9e8e490c48e67e6ab8bfffffffffff\n        /* \"BancorPower.sol\":10211:10253  0x034f9e8e490c48e67e6ab8bfffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10207:10265  if (0x034f9e8e490c48e67e6ab8bfffffffffff >= _x) return  83 */\n      tag_664\n      jumpi\n        /* \"BancorPower.sol\":10263:10265  83 */\n      0x53\n        /* \"BancorPower.sol\":10255:10265  return  83 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10207:10265  if (0x034f9e8e490c48e67e6ab8bfffffffffff >= _x) return  83 */\n    tag_664:\n        /* \"BancorPower.sol\":10320:10322  _x */\n      dup2\n        /* \"BancorPower.sol\":10280:10316  0x032cbfd4a7adc790560b3337ffffffffff */\n      0x032cbfd4a7adc790560b3337ffffffffff\n        /* \"BancorPower.sol\":10280:10322  0x032cbfd4a7adc790560b3337ffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10276:10334  if (0x032cbfd4a7adc790560b3337ffffffffff >= _x) return  84 */\n      tag_665\n      jumpi\n        /* \"BancorPower.sol\":10332:10334  84 */\n      0x54\n        /* \"BancorPower.sol\":10324:10334  return  84 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10276:10334  if (0x032cbfd4a7adc790560b3337ffffffffff >= _x) return  84 */\n    tag_665:\n        /* \"BancorPower.sol\":10389:10391  _x */\n      dup2\n        /* \"BancorPower.sol\":10349:10385  0x030b50570f6e5d2acca94613ffffffffff */\n      0x030b50570f6e5d2acca94613ffffffffff\n        /* \"BancorPower.sol\":10349:10391  0x030b50570f6e5d2acca94613ffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10345:10403  if (0x030b50570f6e5d2acca94613ffffffffff >= _x) return  85 */\n      tag_666\n      jumpi\n        /* \"BancorPower.sol\":10401:10403  85 */\n      0x55\n        /* \"BancorPower.sol\":10393:10403  return  85 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10345:10403  if (0x030b50570f6e5d2acca94613ffffffffff >= _x) return  85 */\n    tag_666:\n        /* \"BancorPower.sol\":10458:10460  _x */\n      dup2\n        /* \"BancorPower.sol\":10418:10454  0x02eb40f9f620fda6b56c2861ffffffffff */\n      0x02eb40f9f620fda6b56c2861ffffffffff\n        /* \"BancorPower.sol\":10418:10460  0x02eb40f9f620fda6b56c2861ffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10414:10472  if (0x02eb40f9f620fda6b56c2861ffffffffff >= _x) return  86 */\n      tag_667\n      jumpi\n        /* \"BancorPower.sol\":10470:10472  86 */\n      0x56\n        /* \"BancorPower.sol\":10462:10472  return  86 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10414:10472  if (0x02eb40f9f620fda6b56c2861ffffffffff >= _x) return  86 */\n    tag_667:\n        /* \"BancorPower.sol\":10527:10529  _x */\n      dup2\n        /* \"BancorPower.sol\":10487:10523  0x02cc8340ecb0d0f520a6af58ffffffffff */\n      0x02cc8340ecb0d0f520a6af58ffffffffff\n        /* \"BancorPower.sol\":10487:10529  0x02cc8340ecb0d0f520a6af58ffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10483:10541  if (0x02cc8340ecb0d0f520a6af58ffffffffff >= _x) return  87 */\n      tag_668\n      jumpi\n        /* \"BancorPower.sol\":10539:10541  87 */\n      0x57\n        /* \"BancorPower.sol\":10531:10541  return  87 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10483:10541  if (0x02cc8340ecb0d0f520a6af58ffffffffff >= _x) return  87 */\n    tag_668:\n        /* \"BancorPower.sol\":10596:10598  _x */\n      dup2\n        /* \"BancorPower.sol\":10556:10592  0x02af09481380a0a35cf1ba02ffffffffff */\n      0x02af09481380a0a35cf1ba02ffffffffff\n        /* \"BancorPower.sol\":10556:10598  0x02af09481380a0a35cf1ba02ffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10552:10610  if (0x02af09481380a0a35cf1ba02ffffffffff >= _x) return  88 */\n      tag_669\n      jumpi\n        /* \"BancorPower.sol\":10608:10610  88 */\n      0x58\n        /* \"BancorPower.sol\":10600:10610  return  88 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10552:10610  if (0x02af09481380a0a35cf1ba02ffffffffff >= _x) return  88 */\n    tag_669:\n        /* \"BancorPower.sol\":10665:10667  _x */\n      dup2\n        /* \"BancorPower.sol\":10625:10661  0x0292c5bdd3b92ec810287b1b3fffffffff */\n      0x0292c5bdd3b92ec810287b1b3fffffffff\n        /* \"BancorPower.sol\":10625:10667  0x0292c5bdd3b92ec810287b1b3fffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10621:10679  if (0x0292c5bdd3b92ec810287b1b3fffffffff >= _x) return  89 */\n      tag_670\n      jumpi\n        /* \"BancorPower.sol\":10677:10679  89 */\n      0x59\n        /* \"BancorPower.sol\":10669:10679  return  89 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10621:10679  if (0x0292c5bdd3b92ec810287b1b3fffffffff >= _x) return  89 */\n    tag_670:\n        /* \"BancorPower.sol\":10734:10736  _x */\n      dup2\n        /* \"BancorPower.sol\":10694:10730  0x0277abdcdab07d5a77ac6d6b9fffffffff */\n      0x0277abdcdab07d5a77ac6d6b9fffffffff\n        /* \"BancorPower.sol\":10694:10736  0x0277abdcdab07d5a77ac6d6b9fffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10690:10748  if (0x0277abdcdab07d5a77ac6d6b9fffffffff >= _x) return  90 */\n      tag_671\n      jumpi\n        /* \"BancorPower.sol\":10746:10748  90 */\n      0x5a\n        /* \"BancorPower.sol\":10738:10748  return  90 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10690:10748  if (0x0277abdcdab07d5a77ac6d6b9fffffffff >= _x) return  90 */\n    tag_671:\n        /* \"BancorPower.sol\":10803:10805  _x */\n      dup2\n        /* \"BancorPower.sol\":10763:10799  0x025daf6654b1eaa55fd64df5efffffffff */\n      0x025daf6654b1eaa55fd64df5efffffffff\n        /* \"BancorPower.sol\":10763:10805  0x025daf6654b1eaa55fd64df5efffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10759:10817  if (0x025daf6654b1eaa55fd64df5efffffffff >= _x) return  91 */\n      tag_672\n      jumpi\n        /* \"BancorPower.sol\":10815:10817  91 */\n      0x5b\n        /* \"BancorPower.sol\":10807:10817  return  91 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10759:10817  if (0x025daf6654b1eaa55fd64df5efffffffff >= _x) return  91 */\n    tag_672:\n        /* \"BancorPower.sol\":10872:10874  _x */\n      dup2\n        /* \"BancorPower.sol\":10832:10868  0x0244c49c648baa98192dce88b7ffffffff */\n      0x0244c49c648baa98192dce88b7ffffffff\n        /* \"BancorPower.sol\":10832:10874  0x0244c49c648baa98192dce88b7ffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10828:10886  if (0x0244c49c648baa98192dce88b7ffffffff >= _x) return  92 */\n      tag_673\n      jumpi\n        /* \"BancorPower.sol\":10884:10886  92 */\n      0x5c\n        /* \"BancorPower.sol\":10876:10886  return  92 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10828:10886  if (0x0244c49c648baa98192dce88b7ffffffff >= _x) return  92 */\n    tag_673:\n        /* \"BancorPower.sol\":10941:10943  _x */\n      dup2\n        /* \"BancorPower.sol\":10901:10937  0x022ce03cd5619a311b2471268bffffffff */\n      0x022ce03cd5619a311b2471268bffffffff\n        /* \"BancorPower.sol\":10901:10943  0x022ce03cd5619a311b2471268bffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10897:10955  if (0x022ce03cd5619a311b2471268bffffffff >= _x) return  93 */\n      tag_674\n      jumpi\n        /* \"BancorPower.sol\":10953:10955  93 */\n      0x5d\n        /* \"BancorPower.sol\":10945:10955  return  93 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10897:10955  if (0x022ce03cd5619a311b2471268bffffffff >= _x) return  93 */\n    tag_674:\n        /* \"BancorPower.sol\":11010:11012  _x */\n      dup2\n        /* \"BancorPower.sol\":10970:11006  0x0215f77c045fbe885654a44a0fffffffff */\n      0x0215f77c045fbe885654a44a0fffffffff\n        /* \"BancorPower.sol\":10970:11012  0x0215f77c045fbe885654a44a0fffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":10966:11024  if (0x0215f77c045fbe885654a44a0fffffffff >= _x) return  94 */\n      tag_675\n      jumpi\n        /* \"BancorPower.sol\":11022:11024  94 */\n      0x5e\n        /* \"BancorPower.sol\":11014:11024  return  94 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":10966:11024  if (0x0215f77c045fbe885654a44a0fffffffff >= _x) return  94 */\n    tag_675:\n        /* \"BancorPower.sol\":11079:11081  _x */\n      dup2\n        /* \"BancorPower.sol\":11039:11075  0x01ffffffffffffffffffffffffffffffff */\n      0x01ffffffffffffffffffffffffffffffff\n        /* \"BancorPower.sol\":11039:11081  0x01ffffffffffffffffffffffffffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11035:11093  if (0x01ffffffffffffffffffffffffffffffff >= _x) return  95 */\n      tag_676\n      jumpi\n        /* \"BancorPower.sol\":11091:11093  95 */\n      0x5f\n        /* \"BancorPower.sol\":11083:11093  return  95 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11035:11093  if (0x01ffffffffffffffffffffffffffffffff >= _x) return  95 */\n    tag_676:\n        /* \"BancorPower.sol\":11148:11150  _x */\n      dup2\n        /* \"BancorPower.sol\":11108:11144  0x01eaefdbdaaee7421fc4d3ede5ffffffff */\n      0x01eaefdbdaaee7421fc4d3ede5ffffffff\n        /* \"BancorPower.sol\":11108:11150  0x01eaefdbdaaee7421fc4d3ede5ffffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11104:11162  if (0x01eaefdbdaaee7421fc4d3ede5ffffffff >= _x) return  96 */\n      tag_677\n      jumpi\n        /* \"BancorPower.sol\":11160:11162  96 */\n      0x60\n        /* \"BancorPower.sol\":11152:11162  return  96 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11104:11162  if (0x01eaefdbdaaee7421fc4d3ede5ffffffff >= _x) return  96 */\n    tag_677:\n        /* \"BancorPower.sol\":11217:11219  _x */\n      dup2\n        /* \"BancorPower.sol\":11177:11213  0x01d6bd8b2eb257df7e8ca57b09bfffffff */\n      0x01d6bd8b2eb257df7e8ca57b09bfffffff\n        /* \"BancorPower.sol\":11177:11219  0x01d6bd8b2eb257df7e8ca57b09bfffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11173:11231  if (0x01d6bd8b2eb257df7e8ca57b09bfffffff >= _x) return  97 */\n      tag_678\n      jumpi\n        /* \"BancorPower.sol\":11229:11231  97 */\n      0x61\n        /* \"BancorPower.sol\":11221:11231  return  97 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11173:11231  if (0x01d6bd8b2eb257df7e8ca57b09bfffffff >= _x) return  97 */\n    tag_678:\n        /* \"BancorPower.sol\":11286:11288  _x */\n      dup2\n        /* \"BancorPower.sol\":11246:11282  0x01c35fedd14b861eb0443f7f133fffffff */\n      0x01c35fedd14b861eb0443f7f133fffffff\n        /* \"BancorPower.sol\":11246:11288  0x01c35fedd14b861eb0443f7f133fffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11242:11300  if (0x01c35fedd14b861eb0443f7f133fffffff >= _x) return  98 */\n      tag_679\n      jumpi\n        /* \"BancorPower.sol\":11298:11300  98 */\n      0x62\n        /* \"BancorPower.sol\":11290:11300  return  98 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11242:11300  if (0x01c35fedd14b861eb0443f7f133fffffff >= _x) return  98 */\n    tag_679:\n        /* \"BancorPower.sol\":11355:11357  _x */\n      dup2\n        /* \"BancorPower.sol\":11315:11351  0x01b0ce43b322bcde4a56e8ada5afffffff */\n      0x01b0ce43b322bcde4a56e8ada5afffffff\n        /* \"BancorPower.sol\":11315:11357  0x01b0ce43b322bcde4a56e8ada5afffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11311:11369  if (0x01b0ce43b322bcde4a56e8ada5afffffff >= _x) return  99 */\n      tag_680\n      jumpi\n        /* \"BancorPower.sol\":11367:11369  99 */\n      0x63\n        /* \"BancorPower.sol\":11359:11369  return  99 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11311:11369  if (0x01b0ce43b322bcde4a56e8ada5afffffff >= _x) return  99 */\n    tag_680:\n        /* \"BancorPower.sol\":11424:11426  _x */\n      dup2\n        /* \"BancorPower.sol\":11384:11420  0x019f0028ec1fff007f5a195a39dfffffff */\n      0x019f0028ec1fff007f5a195a39dfffffff\n        /* \"BancorPower.sol\":11384:11426  0x019f0028ec1fff007f5a195a39dfffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11380:11438  if (0x019f0028ec1fff007f5a195a39dfffffff >= _x) return 100 */\n      tag_681\n      jumpi\n        /* \"BancorPower.sol\":11435:11438  100 */\n      0x64\n        /* \"BancorPower.sol\":11428:11438  return 100 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11380:11438  if (0x019f0028ec1fff007f5a195a39dfffffff >= _x) return 100 */\n    tag_681:\n        /* \"BancorPower.sol\":11493:11495  _x */\n      dup2\n        /* \"BancorPower.sol\":11453:11489  0x018ded91f0e72ee74f49b15ba527ffffff */\n      0x018ded91f0e72ee74f49b15ba527ffffff\n        /* \"BancorPower.sol\":11453:11495  0x018ded91f0e72ee74f49b15ba527ffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11449:11507  if (0x018ded91f0e72ee74f49b15ba527ffffff >= _x) return 101 */\n      tag_682\n      jumpi\n        /* \"BancorPower.sol\":11504:11507  101 */\n      0x65\n        /* \"BancorPower.sol\":11497:11507  return 101 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11449:11507  if (0x018ded91f0e72ee74f49b15ba527ffffff >= _x) return 101 */\n    tag_682:\n        /* \"BancorPower.sol\":11562:11564  _x */\n      dup2\n        /* \"BancorPower.sol\":11522:11558  0x017d8ec7f04136f4e5615fd41a63ffffff */\n      0x017d8ec7f04136f4e5615fd41a63ffffff\n        /* \"BancorPower.sol\":11522:11564  0x017d8ec7f04136f4e5615fd41a63ffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11518:11576  if (0x017d8ec7f04136f4e5615fd41a63ffffff >= _x) return 102 */\n      tag_683\n      jumpi\n        /* \"BancorPower.sol\":11573:11576  102 */\n      0x66\n        /* \"BancorPower.sol\":11566:11576  return 102 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11518:11576  if (0x017d8ec7f04136f4e5615fd41a63ffffff >= _x) return 102 */\n    tag_683:\n        /* \"BancorPower.sol\":11631:11633  _x */\n      dup2\n        /* \"BancorPower.sol\":11591:11627  0x016ddc6556cdb84bdc8d12d22e6fffffff */\n      0x016ddc6556cdb84bdc8d12d22e6fffffff\n        /* \"BancorPower.sol\":11591:11633  0x016ddc6556cdb84bdc8d12d22e6fffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11587:11645  if (0x016ddc6556cdb84bdc8d12d22e6fffffff >= _x) return 103 */\n      tag_684\n      jumpi\n        /* \"BancorPower.sol\":11642:11645  103 */\n      0x67\n        /* \"BancorPower.sol\":11635:11645  return 103 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11587:11645  if (0x016ddc6556cdb84bdc8d12d22e6fffffff >= _x) return 103 */\n    tag_684:\n        /* \"BancorPower.sol\":11700:11702  _x */\n      dup2\n        /* \"BancorPower.sol\":11660:11696  0x015ecf52776a1155b5bd8395814f7fffff */\n      0x015ecf52776a1155b5bd8395814f7fffff\n        /* \"BancorPower.sol\":11660:11702  0x015ecf52776a1155b5bd8395814f7fffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11656:11714  if (0x015ecf52776a1155b5bd8395814f7fffff >= _x) return 104 */\n      tag_685\n      jumpi\n        /* \"BancorPower.sol\":11711:11714  104 */\n      0x68\n        /* \"BancorPower.sol\":11704:11714  return 104 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11656:11714  if (0x015ecf52776a1155b5bd8395814f7fffff >= _x) return 104 */\n    tag_685:\n        /* \"BancorPower.sol\":11769:11771  _x */\n      dup2\n        /* \"BancorPower.sol\":11729:11765  0x015060c256cb23b3b3cc3754cf40ffffff */\n      0x015060c256cb23b3b3cc3754cf40ffffff\n        /* \"BancorPower.sol\":11729:11771  0x015060c256cb23b3b3cc3754cf40ffffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11725:11783  if (0x015060c256cb23b3b3cc3754cf40ffffff >= _x) return 105 */\n      tag_686\n      jumpi\n        /* \"BancorPower.sol\":11780:11783  105 */\n      0x69\n        /* \"BancorPower.sol\":11773:11783  return 105 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11725:11783  if (0x015060c256cb23b3b3cc3754cf40ffffff >= _x) return 105 */\n    tag_686:\n        /* \"BancorPower.sol\":11838:11840  _x */\n      dup2\n        /* \"BancorPower.sol\":11798:11834  0x01428a2f98d728ae223ddab715be3fffff */\n      0x01428a2f98d728ae223ddab715be3fffff\n        /* \"BancorPower.sol\":11798:11840  0x01428a2f98d728ae223ddab715be3fffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11794:11852  if (0x01428a2f98d728ae223ddab715be3fffff >= _x) return 106 */\n      tag_687\n      jumpi\n        /* \"BancorPower.sol\":11849:11852  106 */\n      0x6a\n        /* \"BancorPower.sol\":11842:11852  return 106 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11794:11852  if (0x01428a2f98d728ae223ddab715be3fffff >= _x) return 106 */\n    tag_687:\n        /* \"BancorPower.sol\":11907:11909  _x */\n      dup2\n        /* \"BancorPower.sol\":11867:11903  0x013545598e5c23276ccf0ede68034fffff */\n      0x013545598e5c23276ccf0ede68034fffff\n        /* \"BancorPower.sol\":11867:11909  0x013545598e5c23276ccf0ede68034fffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11863:11921  if (0x013545598e5c23276ccf0ede68034fffff >= _x) return 107 */\n      tag_688\n      jumpi\n        /* \"BancorPower.sol\":11918:11921  107 */\n      0x6b\n        /* \"BancorPower.sol\":11911:11921  return 107 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11863:11921  if (0x013545598e5c23276ccf0ede68034fffff >= _x) return 107 */\n    tag_688:\n        /* \"BancorPower.sol\":11976:11978  _x */\n      dup2\n        /* \"BancorPower.sol\":11936:11972  0x01288c4161ce1d6f54b7f61081194fffff */\n      0x01288c4161ce1d6f54b7f61081194fffff\n        /* \"BancorPower.sol\":11936:11978  0x01288c4161ce1d6f54b7f61081194fffff >= _x */\n      lt\n        /* \"BancorPower.sol\":11932:11990  if (0x01288c4161ce1d6f54b7f61081194fffff >= _x) return 108 */\n      tag_689\n      jumpi\n        /* \"BancorPower.sol\":11987:11990  108 */\n      0x6c\n        /* \"BancorPower.sol\":11980:11990  return 108 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":11932:11990  if (0x01288c4161ce1d6f54b7f61081194fffff >= _x) return 108 */\n    tag_689:\n        /* \"BancorPower.sol\":12045:12047  _x */\n      dup2\n        /* \"BancorPower.sol\":12005:12041  0x011c592761c666aa641d5a01a40f17ffff */\n      0x011c592761c666aa641d5a01a40f17ffff\n        /* \"BancorPower.sol\":12005:12047  0x011c592761c666aa641d5a01a40f17ffff >= _x */\n      lt\n        /* \"BancorPower.sol\":12001:12059  if (0x011c592761c666aa641d5a01a40f17ffff >= _x) return 109 */\n      tag_690\n      jumpi\n        /* \"BancorPower.sol\":12056:12059  109 */\n      0x6d\n        /* \"BancorPower.sol\":12049:12059  return 109 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12001:12059  if (0x011c592761c666aa641d5a01a40f17ffff >= _x) return 109 */\n    tag_690:\n        /* \"BancorPower.sol\":12114:12116  _x */\n      dup2\n        /* \"BancorPower.sol\":12074:12110  0x0110a688680a7530515f3e6e6cfdcdffff */\n      0x0110a688680a7530515f3e6e6cfdcdffff\n        /* \"BancorPower.sol\":12074:12116  0x0110a688680a7530515f3e6e6cfdcdffff >= _x */\n      lt\n        /* \"BancorPower.sol\":12070:12128  if (0x0110a688680a7530515f3e6e6cfdcdffff >= _x) return 110 */\n      tag_691\n      jumpi\n        /* \"BancorPower.sol\":12125:12128  110 */\n      0x6e\n        /* \"BancorPower.sol\":12118:12128  return 110 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12070:12128  if (0x0110a688680a7530515f3e6e6cfdcdffff >= _x) return 110 */\n    tag_691:\n        /* \"BancorPower.sol\":12183:12185  _x */\n      dup2\n        /* \"BancorPower.sol\":12143:12179  0x01056f1b5bedf75c6bcb2ce8aed428ffff */\n      0x01056f1b5bedf75c6bcb2ce8aed428ffff\n        /* \"BancorPower.sol\":12143:12185  0x01056f1b5bedf75c6bcb2ce8aed428ffff >= _x */\n      lt\n        /* \"BancorPower.sol\":12139:12197  if (0x01056f1b5bedf75c6bcb2ce8aed428ffff >= _x) return 111 */\n      tag_692\n      jumpi\n        /* \"BancorPower.sol\":12194:12197  111 */\n      0x6f\n        /* \"BancorPower.sol\":12187:12197  return 111 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12139:12197  if (0x01056f1b5bedf75c6bcb2ce8aed428ffff >= _x) return 111 */\n    tag_692:\n        /* \"BancorPower.sol\":12252:12254  _x */\n      dup2\n        /* \"BancorPower.sol\":12212:12248  0x00faadceceeff8a0890f3875f008277fff */\n      0xfaadceceeff8a0890f3875f008277fff\n        /* \"BancorPower.sol\":12212:12254  0x00faadceceeff8a0890f3875f008277fff >= _x */\n      lt\n        /* \"BancorPower.sol\":12208:12266  if (0x00faadceceeff8a0890f3875f008277fff >= _x) return 112 */\n      tag_693\n      jumpi\n        /* \"BancorPower.sol\":12263:12266  112 */\n      0x70\n        /* \"BancorPower.sol\":12256:12266  return 112 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12208:12266  if (0x00faadceceeff8a0890f3875f008277fff >= _x) return 112 */\n    tag_693:\n        /* \"BancorPower.sol\":12321:12323  _x */\n      dup2\n        /* \"BancorPower.sol\":12281:12317  0x00f05dc6b27edad306388a600f6ba0bfff */\n      0xf05dc6b27edad306388a600f6ba0bfff\n        /* \"BancorPower.sol\":12281:12323  0x00f05dc6b27edad306388a600f6ba0bfff >= _x */\n      lt\n        /* \"BancorPower.sol\":12277:12335  if (0x00f05dc6b27edad306388a600f6ba0bfff >= _x) return 113 */\n      tag_694\n      jumpi\n        /* \"BancorPower.sol\":12332:12335  113 */\n      0x71\n        /* \"BancorPower.sol\":12325:12335  return 113 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12277:12335  if (0x00f05dc6b27edad306388a600f6ba0bfff >= _x) return 113 */\n    tag_694:\n        /* \"BancorPower.sol\":12390:12392  _x */\n      dup2\n        /* \"BancorPower.sol\":12350:12386  0x00e67a5a25da41063de1495d5b18cdbfff */\n      0xe67a5a25da41063de1495d5b18cdbfff\n        /* \"BancorPower.sol\":12350:12392  0x00e67a5a25da41063de1495d5b18cdbfff >= _x */\n      lt\n        /* \"BancorPower.sol\":12346:12404  if (0x00e67a5a25da41063de1495d5b18cdbfff >= _x) return 114 */\n      tag_695\n      jumpi\n        /* \"BancorPower.sol\":12401:12404  114 */\n      0x72\n        /* \"BancorPower.sol\":12394:12404  return 114 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12346:12404  if (0x00e67a5a25da41063de1495d5b18cdbfff >= _x) return 114 */\n    tag_695:\n        /* \"BancorPower.sol\":12459:12461  _x */\n      dup2\n        /* \"BancorPower.sol\":12419:12455  0x00dcff115b14eedde6fc3aa5353f2e4fff */\n      0xdcff115b14eedde6fc3aa5353f2e4fff\n        /* \"BancorPower.sol\":12419:12461  0x00dcff115b14eedde6fc3aa5353f2e4fff >= _x */\n      lt\n        /* \"BancorPower.sol\":12415:12473  if (0x00dcff115b14eedde6fc3aa5353f2e4fff >= _x) return 115 */\n      tag_696\n      jumpi\n        /* \"BancorPower.sol\":12470:12473  115 */\n      0x73\n        /* \"BancorPower.sol\":12463:12473  return 115 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12415:12473  if (0x00dcff115b14eedde6fc3aa5353f2e4fff >= _x) return 115 */\n    tag_696:\n        /* \"BancorPower.sol\":12528:12530  _x */\n      dup2\n        /* \"BancorPower.sol\":12488:12524  0x00d3e7a3924312399f9aae2e0f868f8fff */\n      0xd3e7a3924312399f9aae2e0f868f8fff\n        /* \"BancorPower.sol\":12488:12530  0x00d3e7a3924312399f9aae2e0f868f8fff >= _x */\n      lt\n        /* \"BancorPower.sol\":12484:12542  if (0x00d3e7a3924312399f9aae2e0f868f8fff >= _x) return 116 */\n      tag_697\n      jumpi\n        /* \"BancorPower.sol\":12539:12542  116 */\n      0x74\n        /* \"BancorPower.sol\":12532:12542  return 116 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12484:12542  if (0x00d3e7a3924312399f9aae2e0f868f8fff >= _x) return 116 */\n    tag_697:\n        /* \"BancorPower.sol\":12597:12599  _x */\n      dup2\n        /* \"BancorPower.sol\":12557:12593  0x00cb2ff529eb71e41582cccd5a1ee26fff */\n      0xcb2ff529eb71e41582cccd5a1ee26fff\n        /* \"BancorPower.sol\":12557:12599  0x00cb2ff529eb71e41582cccd5a1ee26fff >= _x */\n      lt\n        /* \"BancorPower.sol\":12553:12611  if (0x00cb2ff529eb71e41582cccd5a1ee26fff >= _x) return 117 */\n      tag_698\n      jumpi\n        /* \"BancorPower.sol\":12608:12611  117 */\n      0x75\n        /* \"BancorPower.sol\":12601:12611  return 117 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12553:12611  if (0x00cb2ff529eb71e41582cccd5a1ee26fff >= _x) return 117 */\n    tag_698:\n        /* \"BancorPower.sol\":12666:12668  _x */\n      dup2\n        /* \"BancorPower.sol\":12626:12662  0x00c2d415c3db974ab32a51840c0b67edff */\n      0xc2d415c3db974ab32a51840c0b67edff\n        /* \"BancorPower.sol\":12626:12668  0x00c2d415c3db974ab32a51840c0b67edff >= _x */\n      lt\n        /* \"BancorPower.sol\":12622:12680  if (0x00c2d415c3db974ab32a51840c0b67edff >= _x) return 118 */\n      tag_699\n      jumpi\n        /* \"BancorPower.sol\":12677:12680  118 */\n      0x76\n        /* \"BancorPower.sol\":12670:12680  return 118 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12622:12680  if (0x00c2d415c3db974ab32a51840c0b67edff >= _x) return 118 */\n    tag_699:\n        /* \"BancorPower.sol\":12735:12737  _x */\n      dup2\n        /* \"BancorPower.sol\":12695:12731  0x00bad03e7d883f69ad5b0a186184e06bff */\n      0xbad03e7d883f69ad5b0a186184e06bff\n        /* \"BancorPower.sol\":12695:12737  0x00bad03e7d883f69ad5b0a186184e06bff >= _x */\n      lt\n        /* \"BancorPower.sol\":12691:12749  if (0x00bad03e7d883f69ad5b0a186184e06bff >= _x) return 119 */\n      tag_700\n      jumpi\n        /* \"BancorPower.sol\":12746:12749  119 */\n      0x77\n        /* \"BancorPower.sol\":12739:12749  return 119 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12691:12749  if (0x00bad03e7d883f69ad5b0a186184e06bff >= _x) return 119 */\n    tag_700:\n        /* \"BancorPower.sol\":12804:12806  _x */\n      dup2\n        /* \"BancorPower.sol\":12764:12800  0x00b320d03b2c343d4829abd6075f0cc5ff */\n      0xb320d03b2c343d4829abd6075f0cc5ff\n        /* \"BancorPower.sol\":12764:12806  0x00b320d03b2c343d4829abd6075f0cc5ff >= _x */\n      lt\n        /* \"BancorPower.sol\":12760:12818  if (0x00b320d03b2c343d4829abd6075f0cc5ff >= _x) return 120 */\n      tag_701\n      jumpi\n        /* \"BancorPower.sol\":12815:12818  120 */\n      0x78\n        /* \"BancorPower.sol\":12808:12818  return 120 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12760:12818  if (0x00b320d03b2c343d4829abd6075f0cc5ff >= _x) return 120 */\n    tag_701:\n        /* \"BancorPower.sol\":12873:12875  _x */\n      dup2\n        /* \"BancorPower.sol\":12833:12869  0x00abc25204e02828d73c6e80bcdb1a95bf */\n      0xabc25204e02828d73c6e80bcdb1a95bf\n        /* \"BancorPower.sol\":12833:12875  0x00abc25204e02828d73c6e80bcdb1a95bf >= _x */\n      lt\n        /* \"BancorPower.sol\":12829:12887  if (0x00abc25204e02828d73c6e80bcdb1a95bf >= _x) return 121 */\n      tag_702\n      jumpi\n        /* \"BancorPower.sol\":12884:12887  121 */\n      0x79\n        /* \"BancorPower.sol\":12877:12887  return 121 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12829:12887  if (0x00abc25204e02828d73c6e80bcdb1a95bf >= _x) return 121 */\n    tag_702:\n        /* \"BancorPower.sol\":12942:12944  _x */\n      dup2\n        /* \"BancorPower.sol\":12902:12938  0x00a4b16f74ee4bb2040a1ec6c15fbbf2df */\n      0xa4b16f74ee4bb2040a1ec6c15fbbf2df\n        /* \"BancorPower.sol\":12902:12944  0x00a4b16f74ee4bb2040a1ec6c15fbbf2df >= _x */\n      lt\n        /* \"BancorPower.sol\":12898:12956  if (0x00a4b16f74ee4bb2040a1ec6c15fbbf2df >= _x) return 122 */\n      tag_703\n      jumpi\n        /* \"BancorPower.sol\":12953:12956  122 */\n      0x7a\n        /* \"BancorPower.sol\":12946:12956  return 122 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12898:12956  if (0x00a4b16f74ee4bb2040a1ec6c15fbbf2df >= _x) return 122 */\n    tag_703:\n        /* \"BancorPower.sol\":13011:13013  _x */\n      dup2\n        /* \"BancorPower.sol\":12971:13007  0x009deaf736ac1f569deb1b5ae3f36c130f */\n      0x9deaf736ac1f569deb1b5ae3f36c130f\n        /* \"BancorPower.sol\":12971:13013  0x009deaf736ac1f569deb1b5ae3f36c130f >= _x */\n      lt\n        /* \"BancorPower.sol\":12967:13025  if (0x009deaf736ac1f569deb1b5ae3f36c130f >= _x) return 123 */\n      tag_704\n      jumpi\n        /* \"BancorPower.sol\":13022:13025  123 */\n      0x7b\n        /* \"BancorPower.sol\":13015:13025  return 123 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":12967:13025  if (0x009deaf736ac1f569deb1b5ae3f36c130f >= _x) return 123 */\n    tag_704:\n        /* \"BancorPower.sol\":13080:13082  _x */\n      dup2\n        /* \"BancorPower.sol\":13040:13076  0x00976bd9952c7aa957f5937d790ef65037 */\n      0x976bd9952c7aa957f5937d790ef65037\n        /* \"BancorPower.sol\":13040:13082  0x00976bd9952c7aa957f5937d790ef65037 >= _x */\n      lt\n        /* \"BancorPower.sol\":13036:13094  if (0x00976bd9952c7aa957f5937d790ef65037 >= _x) return 124 */\n      tag_705\n      jumpi\n        /* \"BancorPower.sol\":13091:13094  124 */\n      0x7c\n        /* \"BancorPower.sol\":13084:13094  return 124 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":13036:13094  if (0x00976bd9952c7aa957f5937d790ef65037 >= _x) return 124 */\n    tag_705:\n        /* \"BancorPower.sol\":13149:13151  _x */\n      dup2\n        /* \"BancorPower.sol\":13109:13145  0x009131271922eaa6064b73a22d0bd4f2bf */\n      0x9131271922eaa6064b73a22d0bd4f2bf\n        /* \"BancorPower.sol\":13109:13151  0x009131271922eaa6064b73a22d0bd4f2bf >= _x */\n      lt\n        /* \"BancorPower.sol\":13105:13163  if (0x009131271922eaa6064b73a22d0bd4f2bf >= _x) return 125 */\n      tag_706\n      jumpi\n        /* \"BancorPower.sol\":13160:13163  125 */\n      0x7d\n        /* \"BancorPower.sol\":13153:13163  return 125 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":13105:13163  if (0x009131271922eaa6064b73a22d0bd4f2bf >= _x) return 125 */\n    tag_706:\n        /* \"BancorPower.sol\":13218:13220  _x */\n      dup2\n        /* \"BancorPower.sol\":13178:13214  0x008b380f3558668c46c91c49a2f8e967b9 */\n      0x8b380f3558668c46c91c49a2f8e967b9\n        /* \"BancorPower.sol\":13178:13220  0x008b380f3558668c46c91c49a2f8e967b9 >= _x */\n      lt\n        /* \"BancorPower.sol\":13174:13232  if (0x008b380f3558668c46c91c49a2f8e967b9 >= _x) return 126 */\n      tag_707\n      jumpi\n        /* \"BancorPower.sol\":13229:13232  126 */\n      0x7e\n        /* \"BancorPower.sol\":13222:13232  return 126 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":13174:13232  if (0x008b380f3558668c46c91c49a2f8e967b9 >= _x) return 126 */\n    tag_707:\n        /* \"BancorPower.sol\":13287:13289  _x */\n      dup2\n        /* \"BancorPower.sol\":13247:13283  0x00857ddf0117efa215952912839f6473e6 */\n      0x857ddf0117efa215952912839f6473e6\n        /* \"BancorPower.sol\":13247:13289  0x00857ddf0117efa215952912839f6473e6 >= _x */\n      lt\n        /* \"BancorPower.sol\":13243:13301  if (0x00857ddf0117efa215952912839f6473e6 >= _x) return 127 */\n      tag_708\n      jumpi\n        /* \"BancorPower.sol\":13298:13301  127 */\n      0x7f\n        /* \"BancorPower.sol\":13291:13301  return 127 */\n      swap1\n      pop\n      jump(tag_612)\n        /* \"BancorPower.sol\":13243:13301  if (0x00857ddf0117efa215952912839f6473e6 >= _x) return 127 */\n    tag_708:\n        /* \"BancorPower.sol\":13320:13325  false */\n      0x00\n        /* \"BancorPower.sol\":13312:13326  require(false) */\n      tag_709\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_709:\n        /* \"BancorPower.sol\":13344:13345  0 */\n      0x00\n        /* \"BancorPower.sol\":13337:13345  return 0 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":6600:13353  function findPositionInMaxExpArray(uint256 _x) internal pure returns (uint8) {... */\n    tag_612:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":13920:17784  function generalExp(uint256 _x, uint8 _precision) internal pure returns (uint256) {... */\n    tag_246:\n        /* \"BancorPower.sol\":13993:14000  uint256 */\n      0x00\n        /* \"BancorPower.sol\":14013:14023  uint256 xi */\n      dup1\n        /* \"BancorPower.sol\":14026:14028  _x */\n      dup4\n        /* \"BancorPower.sol\":14013:14028  uint256 xi = _x */\n      swap1\n      pop\n        /* \"BancorPower.sol\":14039:14050  uint256 res */\n      0x00\n        /* \"BancorPower.sol\":14085:14095  _precision */\n      dup4\n        /* \"BancorPower.sol\":14072:14095  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14078:14080  _x */\n      dup6\n        /* \"BancorPower.sol\":14073:14075  xi */\n      dup4\n        /* \"BancorPower.sol\":14073:14080  xi * _x */\n      tag_711\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_711:\n        /* \"BancorPower.sol\":14072:14095  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14067:14095  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14109:14142  0x3442c4e6074a82f1797f72ac0000000 */\n      0x03442c4e6074a82f1797f72ac0000000\n        /* \"BancorPower.sol\":14104:14106  xi */\n      dup3\n        /* \"BancorPower.sol\":14104:14142  xi * 0x3442c4e6074a82f1797f72ac0000000 */\n      tag_712\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_712:\n        /* \"BancorPower.sol\":14097:14142  res += xi * 0x3442c4e6074a82f1797f72ac0000000 */\n      dup2\n      tag_713\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_713:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14197:14207  _precision */\n      dup4\n        /* \"BancorPower.sol\":14184:14207  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14190:14192  _x */\n      dup6\n        /* \"BancorPower.sol\":14185:14187  xi */\n      dup4\n        /* \"BancorPower.sol\":14185:14192  xi * _x */\n      tag_714\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_714:\n        /* \"BancorPower.sol\":14184:14207  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14179:14207  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14221:14254  0x116b96f757c380fb287fd0e40000000 */\n      0x0116b96f757c380fb287fd0e40000000\n        /* \"BancorPower.sol\":14216:14218  xi */\n      dup3\n        /* \"BancorPower.sol\":14216:14254  xi * 0x116b96f757c380fb287fd0e40000000 */\n      tag_715\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_715:\n        /* \"BancorPower.sol\":14209:14254  res += xi * 0x116b96f757c380fb287fd0e40000000 */\n      dup2\n      tag_716\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_716:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14309:14319  _precision */\n      dup4\n        /* \"BancorPower.sol\":14296:14319  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14302:14304  _x */\n      dup6\n        /* \"BancorPower.sol\":14297:14299  xi */\n      dup4\n        /* \"BancorPower.sol\":14297:14304  xi * _x */\n      tag_717\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_717:\n        /* \"BancorPower.sol\":14296:14319  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14291:14319  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14333:14366  0x045ae5bdd5f0e03eca1ff4390000000 */\n      0x45ae5bdd5f0e03eca1ff4390000000\n        /* \"BancorPower.sol\":14328:14330  xi */\n      dup3\n        /* \"BancorPower.sol\":14328:14366  xi * 0x045ae5bdd5f0e03eca1ff4390000000 */\n      tag_718\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_718:\n        /* \"BancorPower.sol\":14321:14366  res += xi * 0x045ae5bdd5f0e03eca1ff4390000000 */\n      dup2\n      tag_719\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_719:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14421:14431  _precision */\n      dup4\n        /* \"BancorPower.sol\":14408:14431  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14414:14416  _x */\n      dup6\n        /* \"BancorPower.sol\":14409:14411  xi */\n      dup4\n        /* \"BancorPower.sol\":14409:14416  xi * _x */\n      tag_720\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_720:\n        /* \"BancorPower.sol\":14408:14431  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14403:14431  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14445:14478  0x00defabf91302cd95b9ffda50000000 */\n      0x0defabf91302cd95b9ffda50000000\n        /* \"BancorPower.sol\":14440:14442  xi */\n      dup3\n        /* \"BancorPower.sol\":14440:14478  xi * 0x00defabf91302cd95b9ffda50000000 */\n      tag_721\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_721:\n        /* \"BancorPower.sol\":14433:14478  res += xi * 0x00defabf91302cd95b9ffda50000000 */\n      dup2\n      tag_722\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_722:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14533:14543  _precision */\n      dup4\n        /* \"BancorPower.sol\":14520:14543  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14526:14528  _x */\n      dup6\n        /* \"BancorPower.sol\":14521:14523  xi */\n      dup4\n        /* \"BancorPower.sol\":14521:14528  xi * _x */\n      tag_723\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_723:\n        /* \"BancorPower.sol\":14520:14543  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14515:14543  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14557:14590  0x002529ca9832b22439efff9b8000000 */\n      0x02529ca9832b22439efff9b8000000\n        /* \"BancorPower.sol\":14552:14554  xi */\n      dup3\n        /* \"BancorPower.sol\":14552:14590  xi * 0x002529ca9832b22439efff9b8000000 */\n      tag_724\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_724:\n        /* \"BancorPower.sol\":14545:14590  res += xi * 0x002529ca9832b22439efff9b8000000 */\n      dup2\n      tag_725\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_725:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14645:14655  _precision */\n      dup4\n        /* \"BancorPower.sol\":14632:14655  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14638:14640  _x */\n      dup6\n        /* \"BancorPower.sol\":14633:14635  xi */\n      dup4\n        /* \"BancorPower.sol\":14633:14640  xi * _x */\n      tag_726\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_726:\n        /* \"BancorPower.sol\":14632:14655  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14627:14655  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14669:14702  0x00054f1cf12bd04e516b6da88000000 */\n      0x54f1cf12bd04e516b6da88000000\n        /* \"BancorPower.sol\":14664:14666  xi */\n      dup3\n        /* \"BancorPower.sol\":14664:14702  xi * 0x00054f1cf12bd04e516b6da88000000 */\n      tag_727\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_727:\n        /* \"BancorPower.sol\":14657:14702  res += xi * 0x00054f1cf12bd04e516b6da88000000 */\n      dup2\n      tag_728\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_728:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14757:14767  _precision */\n      dup4\n        /* \"BancorPower.sol\":14744:14767  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14750:14752  _x */\n      dup6\n        /* \"BancorPower.sol\":14745:14747  xi */\n      dup4\n        /* \"BancorPower.sol\":14745:14752  xi * _x */\n      tag_729\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_729:\n        /* \"BancorPower.sol\":14744:14767  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14739:14767  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14781:14814  0x0000a9e39e257a09ca2d6db51000000 */\n      0x0a9e39e257a09ca2d6db51000000\n        /* \"BancorPower.sol\":14776:14778  xi */\n      dup3\n        /* \"BancorPower.sol\":14776:14814  xi * 0x0000a9e39e257a09ca2d6db51000000 */\n      tag_730\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_730:\n        /* \"BancorPower.sol\":14769:14814  res += xi * 0x0000a9e39e257a09ca2d6db51000000 */\n      dup2\n      tag_731\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_731:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14869:14879  _precision */\n      dup4\n        /* \"BancorPower.sol\":14856:14879  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14862:14864  _x */\n      dup6\n        /* \"BancorPower.sol\":14857:14859  xi */\n      dup4\n        /* \"BancorPower.sol\":14857:14864  xi * _x */\n      tag_732\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_732:\n        /* \"BancorPower.sol\":14856:14879  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14851:14879  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":14893:14926  0x000012e066e7b839fa050c309000000 */\n      0x012e066e7b839fa050c309000000\n        /* \"BancorPower.sol\":14888:14890  xi */\n      dup3\n        /* \"BancorPower.sol\":14888:14926  xi * 0x000012e066e7b839fa050c309000000 */\n      tag_733\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_733:\n        /* \"BancorPower.sol\":14881:14926  res += xi * 0x000012e066e7b839fa050c309000000 */\n      dup2\n      tag_734\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_734:\n      swap1\n      pop\n        /* \"BancorPower.sol\":14981:14991  _precision */\n      dup4\n        /* \"BancorPower.sol\":14968:14991  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":14974:14976  _x */\n      dup6\n        /* \"BancorPower.sol\":14969:14971  xi */\n      dup4\n        /* \"BancorPower.sol\":14969:14976  xi * _x */\n      tag_735\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_735:\n        /* \"BancorPower.sol\":14968:14991  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":14963:14991  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15005:15038  0x000001e33d7d926c329a1ad1a800000 */\n      0x1e33d7d926c329a1ad1a800000\n        /* \"BancorPower.sol\":15000:15002  xi */\n      dup3\n        /* \"BancorPower.sol\":15000:15038  xi * 0x000001e33d7d926c329a1ad1a800000 */\n      tag_736\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_736:\n        /* \"BancorPower.sol\":14993:15038  res += xi * 0x000001e33d7d926c329a1ad1a800000 */\n      dup2\n      tag_737\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_737:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15093:15103  _precision */\n      dup4\n        /* \"BancorPower.sol\":15080:15103  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15086:15088  _x */\n      dup6\n        /* \"BancorPower.sol\":15081:15083  xi */\n      dup4\n        /* \"BancorPower.sol\":15081:15088  xi * _x */\n      tag_738\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_738:\n        /* \"BancorPower.sol\":15080:15103  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15075:15103  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15117:15150  0x0000002bee513bdb4a6b19b5f800000 */\n      0x02bee513bdb4a6b19b5f800000\n        /* \"BancorPower.sol\":15112:15114  xi */\n      dup3\n        /* \"BancorPower.sol\":15112:15150  xi * 0x0000002bee513bdb4a6b19b5f800000 */\n      tag_739\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_739:\n        /* \"BancorPower.sol\":15105:15150  res += xi * 0x0000002bee513bdb4a6b19b5f800000 */\n      dup2\n      tag_740\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_740:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15205:15215  _precision */\n      dup4\n        /* \"BancorPower.sol\":15192:15215  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15198:15200  _x */\n      dup6\n        /* \"BancorPower.sol\":15193:15195  xi */\n      dup4\n        /* \"BancorPower.sol\":15193:15200  xi * _x */\n      tag_741\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_741:\n        /* \"BancorPower.sol\":15192:15215  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15187:15215  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15229:15262  0x00000003a9316fa79b88eccf2a00000 */\n      0x3a9316fa79b88eccf2a00000\n        /* \"BancorPower.sol\":15224:15226  xi */\n      dup3\n        /* \"BancorPower.sol\":15224:15262  xi * 0x00000003a9316fa79b88eccf2a00000 */\n      tag_742\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_742:\n        /* \"BancorPower.sol\":15217:15262  res += xi * 0x00000003a9316fa79b88eccf2a00000 */\n      dup2\n      tag_743\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_743:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15317:15327  _precision */\n      dup4\n        /* \"BancorPower.sol\":15304:15327  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15310:15312  _x */\n      dup6\n        /* \"BancorPower.sol\":15305:15307  xi */\n      dup4\n        /* \"BancorPower.sol\":15305:15312  xi * _x */\n      tag_744\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_744:\n        /* \"BancorPower.sol\":15304:15327  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15299:15327  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15341:15374  0x0000000048177ebe1fa812375200000 */\n      0x048177ebe1fa812375200000\n        /* \"BancorPower.sol\":15336:15338  xi */\n      dup3\n        /* \"BancorPower.sol\":15336:15374  xi * 0x0000000048177ebe1fa812375200000 */\n      tag_745\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_745:\n        /* \"BancorPower.sol\":15329:15374  res += xi * 0x0000000048177ebe1fa812375200000 */\n      dup2\n      tag_746\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_746:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15429:15439  _precision */\n      dup4\n        /* \"BancorPower.sol\":15416:15439  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15422:15424  _x */\n      dup6\n        /* \"BancorPower.sol\":15417:15419  xi */\n      dup4\n        /* \"BancorPower.sol\":15417:15424  xi * _x */\n      tag_747\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_747:\n        /* \"BancorPower.sol\":15416:15439  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15411:15439  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15453:15486  0x0000000005263fe90242dcbacf00000 */\n      0x5263fe90242dcbacf00000\n        /* \"BancorPower.sol\":15448:15450  xi */\n      dup3\n        /* \"BancorPower.sol\":15448:15486  xi * 0x0000000005263fe90242dcbacf00000 */\n      tag_748\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_748:\n        /* \"BancorPower.sol\":15441:15486  res += xi * 0x0000000005263fe90242dcbacf00000 */\n      dup2\n      tag_749\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_749:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15541:15551  _precision */\n      dup4\n        /* \"BancorPower.sol\":15528:15551  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15534:15536  _x */\n      dup6\n        /* \"BancorPower.sol\":15529:15531  xi */\n      dup4\n        /* \"BancorPower.sol\":15529:15536  xi * _x */\n      tag_750\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_750:\n        /* \"BancorPower.sol\":15528:15551  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15523:15551  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15565:15598  0x000000000057e22099c030d94100000 */\n      0x057e22099c030d94100000\n        /* \"BancorPower.sol\":15560:15562  xi */\n      dup3\n        /* \"BancorPower.sol\":15560:15598  xi * 0x000000000057e22099c030d94100000 */\n      tag_751\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_751:\n        /* \"BancorPower.sol\":15553:15598  res += xi * 0x000000000057e22099c030d94100000 */\n      dup2\n      tag_752\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_752:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15653:15663  _precision */\n      dup4\n        /* \"BancorPower.sol\":15640:15663  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15646:15648  _x */\n      dup6\n        /* \"BancorPower.sol\":15641:15643  xi */\n      dup4\n        /* \"BancorPower.sol\":15641:15648  xi * _x */\n      tag_753\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_753:\n        /* \"BancorPower.sol\":15640:15663  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15635:15663  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15677:15710  0x0000000000057e22099c030d9410000 */\n      0x57e22099c030d9410000\n        /* \"BancorPower.sol\":15672:15674  xi */\n      dup3\n        /* \"BancorPower.sol\":15672:15710  xi * 0x0000000000057e22099c030d9410000 */\n      tag_754\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_754:\n        /* \"BancorPower.sol\":15665:15710  res += xi * 0x0000000000057e22099c030d9410000 */\n      dup2\n      tag_755\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_755:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15765:15775  _precision */\n      dup4\n        /* \"BancorPower.sol\":15752:15775  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15758:15760  _x */\n      dup6\n        /* \"BancorPower.sol\":15753:15755  xi */\n      dup4\n        /* \"BancorPower.sol\":15753:15760  xi * _x */\n      tag_756\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_756:\n        /* \"BancorPower.sol\":15752:15775  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15747:15775  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15789:15822  0x00000000000052b6b54569976310000 */\n      0x052b6b54569976310000\n        /* \"BancorPower.sol\":15784:15786  xi */\n      dup3\n        /* \"BancorPower.sol\":15784:15822  xi * 0x00000000000052b6b54569976310000 */\n      tag_757\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_757:\n        /* \"BancorPower.sol\":15777:15822  res += xi * 0x00000000000052b6b54569976310000 */\n      dup2\n      tag_758\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_758:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15877:15887  _precision */\n      dup4\n        /* \"BancorPower.sol\":15864:15887  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15870:15872  _x */\n      dup6\n        /* \"BancorPower.sol\":15865:15867  xi */\n      dup4\n        /* \"BancorPower.sol\":15865:15872  xi * _x */\n      tag_759\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_759:\n        /* \"BancorPower.sol\":15864:15887  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15859:15887  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":15901:15934  0x00000000000004985f67696bf748000 */\n      0x4985f67696bf748000\n        /* \"BancorPower.sol\":15896:15898  xi */\n      dup3\n        /* \"BancorPower.sol\":15896:15934  xi * 0x00000000000004985f67696bf748000 */\n      tag_760\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_760:\n        /* \"BancorPower.sol\":15889:15934  res += xi * 0x00000000000004985f67696bf748000 */\n      dup2\n      tag_761\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_761:\n      swap1\n      pop\n        /* \"BancorPower.sol\":15989:15999  _precision */\n      dup4\n        /* \"BancorPower.sol\":15976:15999  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":15982:15984  _x */\n      dup6\n        /* \"BancorPower.sol\":15977:15979  xi */\n      dup4\n        /* \"BancorPower.sol\":15977:15984  xi * _x */\n      tag_762\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_762:\n        /* \"BancorPower.sol\":15976:15999  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":15971:15999  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16013:16046  0x000000000000003dea12ea99e498000 */\n      0x03dea12ea99e498000\n        /* \"BancorPower.sol\":16008:16010  xi */\n      dup3\n        /* \"BancorPower.sol\":16008:16046  xi * 0x000000000000003dea12ea99e498000 */\n      tag_763\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_763:\n        /* \"BancorPower.sol\":16001:16046  res += xi * 0x000000000000003dea12ea99e498000 */\n      dup2\n      tag_764\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_764:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16101:16111  _precision */\n      dup4\n        /* \"BancorPower.sol\":16088:16111  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16094:16096  _x */\n      dup6\n        /* \"BancorPower.sol\":16089:16091  xi */\n      dup4\n        /* \"BancorPower.sol\":16089:16096  xi * _x */\n      tag_765\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_765:\n        /* \"BancorPower.sol\":16088:16111  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16083:16111  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16125:16158  0x00000000000000031880f2214b6e000 */\n      0x31880f2214b6e000\n        /* \"BancorPower.sol\":16120:16122  xi */\n      dup3\n        /* \"BancorPower.sol\":16120:16158  xi * 0x00000000000000031880f2214b6e000 */\n      tag_766\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_766:\n        /* \"BancorPower.sol\":16113:16158  res += xi * 0x00000000000000031880f2214b6e000 */\n      dup2\n      tag_767\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_767:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16213:16223  _precision */\n      dup4\n        /* \"BancorPower.sol\":16200:16223  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16206:16208  _x */\n      dup6\n        /* \"BancorPower.sol\":16201:16203  xi */\n      dup4\n        /* \"BancorPower.sol\":16201:16208  xi * _x */\n      tag_768\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_768:\n        /* \"BancorPower.sol\":16200:16223  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16195:16223  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16237:16270  0x000000000000000025bcff56eb36000 */\n      0x025bcff56eb36000\n        /* \"BancorPower.sol\":16232:16234  xi */\n      dup3\n        /* \"BancorPower.sol\":16232:16270  xi * 0x000000000000000025bcff56eb36000 */\n      tag_769\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_769:\n        /* \"BancorPower.sol\":16225:16270  res += xi * 0x000000000000000025bcff56eb36000 */\n      dup2\n      tag_770\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_770:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16325:16335  _precision */\n      dup4\n        /* \"BancorPower.sol\":16312:16335  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16318:16320  _x */\n      dup6\n        /* \"BancorPower.sol\":16313:16315  xi */\n      dup4\n        /* \"BancorPower.sol\":16313:16320  xi * _x */\n      tag_771\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_771:\n        /* \"BancorPower.sol\":16312:16335  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16307:16335  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16349:16382  0x000000000000000001b722e10ab1000 */\n      0x1b722e10ab1000\n        /* \"BancorPower.sol\":16344:16346  xi */\n      dup3\n        /* \"BancorPower.sol\":16344:16382  xi * 0x000000000000000001b722e10ab1000 */\n      tag_772\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_772:\n        /* \"BancorPower.sol\":16337:16382  res += xi * 0x000000000000000001b722e10ab1000 */\n      dup2\n      tag_773\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_773:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16437:16447  _precision */\n      dup4\n        /* \"BancorPower.sol\":16424:16447  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16430:16432  _x */\n      dup6\n        /* \"BancorPower.sol\":16425:16427  xi */\n      dup4\n        /* \"BancorPower.sol\":16425:16432  xi * _x */\n      tag_774\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_774:\n        /* \"BancorPower.sol\":16424:16447  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16419:16447  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16461:16494  0x0000000000000000001317c70077000 */\n      0x01317c70077000\n        /* \"BancorPower.sol\":16456:16458  xi */\n      dup3\n        /* \"BancorPower.sol\":16456:16494  xi * 0x0000000000000000001317c70077000 */\n      tag_775\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_775:\n        /* \"BancorPower.sol\":16449:16494  res += xi * 0x0000000000000000001317c70077000 */\n      dup2\n      tag_776\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_776:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16549:16559  _precision */\n      dup4\n        /* \"BancorPower.sol\":16536:16559  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16542:16544  _x */\n      dup6\n        /* \"BancorPower.sol\":16537:16539  xi */\n      dup4\n        /* \"BancorPower.sol\":16537:16544  xi * _x */\n      tag_777\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_777:\n        /* \"BancorPower.sol\":16536:16559  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16531:16559  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16573:16606  0x00000000000000000000cba84aafa00 */\n      0x0cba84aafa00\n        /* \"BancorPower.sol\":16568:16570  xi */\n      dup3\n        /* \"BancorPower.sol\":16568:16606  xi * 0x00000000000000000000cba84aafa00 */\n      tag_778\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_778:\n        /* \"BancorPower.sol\":16561:16606  res += xi * 0x00000000000000000000cba84aafa00 */\n      dup2\n      tag_779\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_779:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16661:16671  _precision */\n      dup4\n        /* \"BancorPower.sol\":16648:16671  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16654:16656  _x */\n      dup6\n        /* \"BancorPower.sol\":16649:16651  xi */\n      dup4\n        /* \"BancorPower.sol\":16649:16656  xi * _x */\n      tag_780\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_780:\n        /* \"BancorPower.sol\":16648:16671  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16643:16671  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16685:16718  0x00000000000000000000082573a0a00 */\n      0x82573a0a00\n        /* \"BancorPower.sol\":16680:16682  xi */\n      dup3\n        /* \"BancorPower.sol\":16680:16718  xi * 0x00000000000000000000082573a0a00 */\n      tag_781\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_781:\n        /* \"BancorPower.sol\":16673:16718  res += xi * 0x00000000000000000000082573a0a00 */\n      dup2\n      tag_782\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_782:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16773:16783  _precision */\n      dup4\n        /* \"BancorPower.sol\":16760:16783  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16766:16768  _x */\n      dup6\n        /* \"BancorPower.sol\":16761:16763  xi */\n      dup4\n        /* \"BancorPower.sol\":16761:16768  xi * _x */\n      tag_783\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_783:\n        /* \"BancorPower.sol\":16760:16783  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16755:16783  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16797:16830  0x00000000000000000000005035ad900 */\n      0x05035ad900\n        /* \"BancorPower.sol\":16792:16794  xi */\n      dup3\n        /* \"BancorPower.sol\":16792:16830  xi * 0x00000000000000000000005035ad900 */\n      tag_784\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_784:\n        /* \"BancorPower.sol\":16785:16830  res += xi * 0x00000000000000000000005035ad900 */\n      dup2\n      tag_785\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_785:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16885:16895  _precision */\n      dup4\n        /* \"BancorPower.sol\":16872:16895  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16878:16880  _x */\n      dup6\n        /* \"BancorPower.sol\":16873:16875  xi */\n      dup4\n        /* \"BancorPower.sol\":16873:16880  xi * _x */\n      tag_786\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_786:\n        /* \"BancorPower.sol\":16872:16895  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16867:16895  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":16909:16942  0x000000000000000000000002f881b00 */\n      0x2f881b00\n        /* \"BancorPower.sol\":16904:16906  xi */\n      dup3\n        /* \"BancorPower.sol\":16904:16942  xi * 0x000000000000000000000002f881b00 */\n      tag_787\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_787:\n        /* \"BancorPower.sol\":16897:16942  res += xi * 0x000000000000000000000002f881b00 */\n      dup2\n      tag_788\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_788:\n      swap1\n      pop\n        /* \"BancorPower.sol\":16997:17007  _precision */\n      dup4\n        /* \"BancorPower.sol\":16984:17007  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":16990:16992  _x */\n      dup6\n        /* \"BancorPower.sol\":16985:16987  xi */\n      dup4\n        /* \"BancorPower.sol\":16985:16992  xi * _x */\n      tag_789\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_789:\n        /* \"BancorPower.sol\":16984:17007  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":16979:17007  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17021:17054  0x0000000000000000000000001b29340 */\n      0x01b29340\n        /* \"BancorPower.sol\":17016:17018  xi */\n      dup3\n        /* \"BancorPower.sol\":17016:17054  xi * 0x0000000000000000000000001b29340 */\n      tag_790\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_790:\n        /* \"BancorPower.sol\":17009:17054  res += xi * 0x0000000000000000000000001b29340 */\n      dup2\n      tag_791\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_791:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17109:17119  _precision */\n      dup4\n        /* \"BancorPower.sol\":17096:17119  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":17102:17104  _x */\n      dup6\n        /* \"BancorPower.sol\":17097:17099  xi */\n      dup4\n        /* \"BancorPower.sol\":17097:17104  xi * _x */\n      tag_792\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_792:\n        /* \"BancorPower.sol\":17096:17119  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":17091:17119  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17133:17166  0x00000000000000000000000000efc40 */\n      0x0efc40\n        /* \"BancorPower.sol\":17128:17130  xi */\n      dup3\n        /* \"BancorPower.sol\":17128:17166  xi * 0x00000000000000000000000000efc40 */\n      tag_793\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_793:\n        /* \"BancorPower.sol\":17121:17166  res += xi * 0x00000000000000000000000000efc40 */\n      dup2\n      tag_794\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_794:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17221:17231  _precision */\n      dup4\n        /* \"BancorPower.sol\":17208:17231  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":17214:17216  _x */\n      dup6\n        /* \"BancorPower.sol\":17209:17211  xi */\n      dup4\n        /* \"BancorPower.sol\":17209:17216  xi * _x */\n      tag_795\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_795:\n        /* \"BancorPower.sol\":17208:17231  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":17203:17231  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17245:17278  0x0000000000000000000000000007fe0 */\n      0x7fe0\n        /* \"BancorPower.sol\":17240:17242  xi */\n      dup3\n        /* \"BancorPower.sol\":17240:17278  xi * 0x0000000000000000000000000007fe0 */\n      tag_796\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_796:\n        /* \"BancorPower.sol\":17233:17278  res += xi * 0x0000000000000000000000000007fe0 */\n      dup2\n      tag_797\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_797:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17333:17343  _precision */\n      dup4\n        /* \"BancorPower.sol\":17320:17343  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":17326:17328  _x */\n      dup6\n        /* \"BancorPower.sol\":17321:17323  xi */\n      dup4\n        /* \"BancorPower.sol\":17321:17328  xi * _x */\n      tag_798\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_798:\n        /* \"BancorPower.sol\":17320:17343  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":17315:17343  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17357:17390  0x0000000000000000000000000000420 */\n      0x0420\n        /* \"BancorPower.sol\":17352:17354  xi */\n      dup3\n        /* \"BancorPower.sol\":17352:17390  xi * 0x0000000000000000000000000000420 */\n      tag_799\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_799:\n        /* \"BancorPower.sol\":17345:17390  res += xi * 0x0000000000000000000000000000420 */\n      dup2\n      tag_800\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_800:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17445:17455  _precision */\n      dup4\n        /* \"BancorPower.sol\":17432:17455  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":17438:17440  _x */\n      dup6\n        /* \"BancorPower.sol\":17433:17435  xi */\n      dup4\n        /* \"BancorPower.sol\":17433:17440  xi * _x */\n      tag_801\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_801:\n        /* \"BancorPower.sol\":17432:17455  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":17427:17455  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17469:17502  0x0000000000000000000000000000021 */\n      0x21\n        /* \"BancorPower.sol\":17464:17466  xi */\n      dup3\n        /* \"BancorPower.sol\":17464:17502  xi * 0x0000000000000000000000000000021 */\n      tag_802\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_802:\n        /* \"BancorPower.sol\":17457:17502  res += xi * 0x0000000000000000000000000000021 */\n      dup2\n      tag_803\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_803:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17557:17567  _precision */\n      dup4\n        /* \"BancorPower.sol\":17544:17567  (xi * _x) >> _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":17550:17552  _x */\n      dup6\n        /* \"BancorPower.sol\":17545:17547  xi */\n      dup4\n        /* \"BancorPower.sol\":17545:17552  xi * _x */\n      tag_804\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_804:\n        /* \"BancorPower.sol\":17544:17567  (xi * _x) >> _precision */\n      swap1\n      shr\n        /* \"BancorPower.sol\":17539:17567  xi = (xi * _x) >> _precision */\n      swap2\n      pop\n        /* \"BancorPower.sol\":17581:17614  0x0000000000000000000000000000001 */\n      0x01\n        /* \"BancorPower.sol\":17576:17578  xi */\n      dup3\n        /* \"BancorPower.sol\":17576:17614  xi * 0x0000000000000000000000000000001 */\n      tag_805\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_805:\n        /* \"BancorPower.sol\":17569:17614  res += xi * 0x0000000000000000000000000000001 */\n      dup2\n      tag_806\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_806:\n      swap1\n      pop\n        /* \"BancorPower.sol\":17715:17725  _precision */\n      dup4\n        /* \"BancorPower.sol\":17708:17725  ONE << _precision */\n      0xff\n      and\n        /* \"BancorPower.sol\":840:841  1 */\n      0x01\n        /* \"BancorPower.sol\":17708:17725  ONE << _precision */\n      swap1\n      shl\n        /* \"BancorPower.sol\":17702:17704  _x */\n      dup6\n        /* \"BancorPower.sol\":17666:17699  0x688589cc0e9505e2f2fee5580000000 */\n      0x0688589cc0e9505e2f2fee5580000000\n        /* \"BancorPower.sol\":17660:17663  res */\n      dup4\n        /* \"BancorPower.sol\":17660:17699  res / 0x688589cc0e9505e2f2fee5580000000 */\n      tag_807\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_807:\n        /* \"BancorPower.sol\":17660:17704  res / 0x688589cc0e9505e2f2fee5580000000 + _x */\n      tag_808\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_808:\n        /* \"BancorPower.sol\":17660:17726  res / 0x688589cc0e9505e2f2fee5580000000 + _x + (ONE << _precision) */\n      tag_809\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_809:\n        /* \"BancorPower.sol\":17653:17726  return res / 0x688589cc0e9505e2f2fee5580000000 + _x + (ONE << _precision) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"BancorPower.sol\":13920:17784  function generalExp(uint256 _x, uint8 _precision) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BancorPower.sol\":5690:6232  function floorLog2(uint256 _n) internal pure returns (uint8) {... */\n    tag_494:\n        /* \"BancorPower.sol\":5744:5749  uint8 */\n      0x00\n        /* \"BancorPower.sol\":5762:5771  uint8 res */\n      dup1\n        /* \"BancorPower.sol\":5774:5775  0 */\n      0x00\n        /* \"BancorPower.sol\":5762:5775  uint8 res = 0 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":5797:5800  256 */\n      0x0100\n        /* \"BancorPower.sol\":5792:5794  _n */\n      dup4\n        /* \"BancorPower.sol\":5792:5800  _n < 256 */\n      lt\n        /* \"BancorPower.sol\":5788:6202  if (_n < 256) {... */\n      iszero\n      tag_811\n      jumpi\n        /* \"BancorPower.sol\":5854:5939  while (_n > 1) {... */\n    tag_812:\n        /* \"BancorPower.sol\":5866:5867  1 */\n      0x01\n        /* \"BancorPower.sol\":5861:5863  _n */\n      dup4\n        /* \"BancorPower.sol\":5861:5867  _n > 1 */\n      gt\n        /* \"BancorPower.sol\":5854:5939  while (_n > 1) {... */\n      iszero\n      tag_813\n      jumpi\n        /* \"BancorPower.sol\":5895:5896  1 */\n      0x01\n        /* \"BancorPower.sol\":5888:5896  _n >>= 1 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"BancorPower.sol\":5922:5923  1 */\n      0x01\n        /* \"BancorPower.sol\":5915:5923  res += 1 */\n      dup2\n      tag_814\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_814:\n      swap1\n      pop\n        /* \"BancorPower.sol\":5854:5939  while (_n > 1) {... */\n      jump(tag_812)\n    tag_813:\n        /* \"BancorPower.sol\":5788:6202  if (_n < 256) {... */\n      jump(tag_815)\n    tag_811:\n        /* \"BancorPower.sol\":6022:6029  uint8 s */\n      0x00\n        /* \"BancorPower.sol\":6032:6035  128 */\n      0x80\n        /* \"BancorPower.sol\":6022:6035  uint8 s = 128 */\n      swap1\n      pop\n        /* \"BancorPower.sol\":6017:6191  for (uint8 s = 128; s > 0; s >>= 1) {... */\n    tag_816:\n        /* \"BancorPower.sol\":6041:6042  0 */\n      0x00\n        /* \"BancorPower.sol\":6037:6038  s */\n      dup2\n        /* \"BancorPower.sol\":6037:6042  s > 0 */\n      0xff\n      and\n      gt\n        /* \"BancorPower.sol\":6017:6191  for (uint8 s = 128; s > 0; s >>= 1) {... */\n      iszero\n      tag_817\n      jumpi\n        /* \"BancorPower.sol\":6090:6091  s */\n      dup1\n        /* \"BancorPower.sol\":6083:6091  ONE << s */\n      0xff\n      and\n        /* \"BancorPower.sol\":840:841  1 */\n      0x01\n        /* \"BancorPower.sol\":6083:6091  ONE << s */\n      swap1\n      shl\n        /* \"BancorPower.sol\":6076:6078  _n */\n      dup5\n        /* \"BancorPower.sol\":6076:6092  _n >= (ONE << s) */\n      lt\n        /* \"BancorPower.sol\":6072:6176  if (_n >= (ONE << s)) {... */\n      tag_819\n      jumpi\n        /* \"BancorPower.sol\":6124:6125  s */\n      dup1\n        /* \"BancorPower.sol\":6117:6125  _n >>= s */\n      0xff\n      and\n      dup5\n      swap1\n      shr\n      swap4\n      pop\n        /* \"BancorPower.sol\":6155:6156  s */\n      dup1\n        /* \"BancorPower.sol\":6148:6156  res |= s */\n      dup3\n      or\n      swap2\n      pop\n        /* \"BancorPower.sol\":6072:6176  if (_n >= (ONE << s)) {... */\n    tag_819:\n        /* \"BancorPower.sol\":6050:6051  1 */\n      0x01\n        /* \"BancorPower.sol\":6044:6051  s >>= 1 */\n      dup2\n      0xff\n      and\n      swap1\n      shr\n      swap1\n      pop\n        /* \"BancorPower.sol\":6017:6191  for (uint8 s = 128; s > 0; s >>= 1) {... */\n      jump(tag_816)\n    tag_817:\n      pop\n        /* \"BancorPower.sol\":5788:6202  if (_n < 256) {... */\n    tag_815:\n        /* \"BancorPower.sol\":6221:6224  res */\n      dup1\n        /* \"BancorPower.sol\":6214:6224  return res */\n      swap2\n      pop\n      pop\n        /* \"BancorPower.sol\":5690:6232  function floorLog2(uint256 _n) internal pure returns (uint8) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_29:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_821:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_822:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:456   */\n    tag_823:\n        /* \"#utility.yul\":416:423   */\n      0x00\n        /* \"#utility.yul\":445:450   */\n      dup2\n        /* \"#utility.yul\":434:450   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":462:674   */\n    tag_824:\n        /* \"#utility.yul\":580:649   */\n      tag_843\n        /* \"#utility.yul\":643:648   */\n      dup2\n        /* \"#utility.yul\":580:649   */\n      tag_823\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":573:578   */\n      dup2\n        /* \"#utility.yul\":570:650   */\n      eq\n        /* \"#utility.yul\":560:668   */\n      tag_844\n      jumpi\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":661:662   */\n      dup1\n        /* \"#utility.yul\":654:666   */\n      revert\n        /* \"#utility.yul\":560:668   */\n    tag_844:\n        /* \"#utility.yul\":462:674   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":680:909   */\n    tag_825:\n        /* \"#utility.yul\":771:776   */\n      0x00\n        /* \"#utility.yul\":809:815   */\n      dup2\n        /* \"#utility.yul\":796:816   */\n      calldataload\n        /* \"#utility.yul\":787:816   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:903   */\n      tag_846\n        /* \"#utility.yul\":897:902   */\n      dup2\n        /* \"#utility.yul\":825:903   */\n      tag_824\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":680:909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":915:992   */\n    tag_826:\n        /* \"#utility.yul\":952:959   */\n      0x00\n        /* \"#utility.yul\":981:986   */\n      dup2\n        /* \"#utility.yul\":970:986   */\n      swap1\n      pop\n        /* \"#utility.yul\":915:992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":998:1120   */\n    tag_827:\n        /* \"#utility.yul\":1071:1095   */\n      tag_849\n        /* \"#utility.yul\":1089:1094   */\n      dup2\n        /* \"#utility.yul\":1071:1095   */\n      tag_826\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":1064:1069   */\n      dup2\n        /* \"#utility.yul\":1061:1096   */\n      eq\n        /* \"#utility.yul\":1051:1114   */\n      tag_850\n      jumpi\n        /* \"#utility.yul\":1110:1111   */\n      0x00\n        /* \"#utility.yul\":1107:1108   */\n      dup1\n        /* \"#utility.yul\":1100:1112   */\n      revert\n        /* \"#utility.yul\":1051:1114   */\n    tag_850:\n        /* \"#utility.yul\":998:1120   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1265   */\n    tag_828:\n        /* \"#utility.yul\":1172:1177   */\n      0x00\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1197:1217   */\n      calldataload\n        /* \"#utility.yul\":1188:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1226:1259   */\n      tag_852\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1226:1259   */\n      tag_827\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":1126:1265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1835   */\n    tag_6:\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1392:1398   */\n      dup1\n        /* \"#utility.yul\":1441:1443   */\n      0x40\n        /* \"#utility.yul\":1429:1438   */\n      dup4\n        /* \"#utility.yul\":1420:1427   */\n      dup6\n        /* \"#utility.yul\":1416:1439   */\n      sub\n        /* \"#utility.yul\":1412:1444   */\n      slt\n        /* \"#utility.yul\":1409:1528   */\n      iszero\n      tag_854\n      jumpi\n        /* \"#utility.yul\":1447:1526   */\n      tag_855\n      tag_821\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":1409:1528   */\n    tag_854:\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1592:1690   */\n      tag_856\n        /* \"#utility.yul\":1682:1689   */\n      dup6\n        /* \"#utility.yul\":1673:1679   */\n      dup3\n        /* \"#utility.yul\":1662:1671   */\n      dup7\n        /* \"#utility.yul\":1658:1680   */\n      add\n        /* \"#utility.yul\":1592:1690   */\n      tag_825\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":1582:1690   */\n      swap3\n      pop\n        /* \"#utility.yul\":1538:1700   */\n      pop\n        /* \"#utility.yul\":1739:1741   */\n      0x20\n        /* \"#utility.yul\":1765:1818   */\n      tag_857\n        /* \"#utility.yul\":1810:1817   */\n      dup6\n        /* \"#utility.yul\":1801:1807   */\n      dup3\n        /* \"#utility.yul\":1790:1799   */\n      dup7\n        /* \"#utility.yul\":1786:1808   */\n      add\n        /* \"#utility.yul\":1765:1818   */\n      tag_828\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":1755:1818   */\n      swap2\n      pop\n        /* \"#utility.yul\":1710:1828   */\n      pop\n        /* \"#utility.yul\":1271:1835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1841:1967   */\n    tag_829:\n        /* \"#utility.yul\":1936:1960   */\n      tag_859\n        /* \"#utility.yul\":1954:1959   */\n      dup2\n        /* \"#utility.yul\":1936:1960   */\n      tag_826\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":1931:1934   */\n      dup3\n        /* \"#utility.yul\":1924:1961   */\n      mstore\n        /* \"#utility.yul\":1841:1967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1973:2211   */\n    tag_9:\n        /* \"#utility.yul\":2074:2078   */\n      0x00\n        /* \"#utility.yul\":2112:2114   */\n      0x20\n        /* \"#utility.yul\":2101:2110   */\n      dup3\n        /* \"#utility.yul\":2097:2115   */\n      add\n        /* \"#utility.yul\":2089:2115   */\n      swap1\n      pop\n        /* \"#utility.yul\":2125:2204   */\n      tag_861\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2190:2199   */\n      dup4\n        /* \"#utility.yul\":2186:2203   */\n      add\n        /* \"#utility.yul\":2177:2183   */\n      dup5\n        /* \"#utility.yul\":2125:2204   */\n      tag_829\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":1973:2211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2334   */\n    tag_830:\n        /* \"#utility.yul\":2326:2327   */\n      0x00\n        /* \"#utility.yul\":2323:2324   */\n      dup1\n        /* \"#utility.yul\":2316:2328   */\n      revert\n        /* \"#utility.yul\":2340:2457   */\n    tag_831:\n        /* \"#utility.yul\":2449:2450   */\n      0x00\n        /* \"#utility.yul\":2446:2447   */\n      dup1\n        /* \"#utility.yul\":2439:2451   */\n      revert\n        /* \"#utility.yul\":2463:2580   */\n    tag_832:\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2603:3171   */\n    tag_833:\n        /* \"#utility.yul\":2676:2684   */\n      0x00\n        /* \"#utility.yul\":2686:2692   */\n      dup1\n        /* \"#utility.yul\":2736:2739   */\n      dup4\n        /* \"#utility.yul\":2729:2733   */\n      0x1f\n        /* \"#utility.yul\":2721:2727   */\n      dup5\n        /* \"#utility.yul\":2717:2734   */\n      add\n        /* \"#utility.yul\":2713:2740   */\n      slt\n        /* \"#utility.yul\":2703:2825   */\n      tag_866\n      jumpi\n        /* \"#utility.yul\":2744:2823   */\n      tag_867\n      tag_830\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":2703:2825   */\n    tag_866:\n        /* \"#utility.yul\":2857:2863   */\n      dup3\n        /* \"#utility.yul\":2844:2864   */\n      calldataload\n        /* \"#utility.yul\":2834:2864   */\n      swap1\n      pop\n        /* \"#utility.yul\":2887:2905   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2879:2885   */\n      dup2\n        /* \"#utility.yul\":2876:2906   */\n      gt\n        /* \"#utility.yul\":2873:2990   */\n      iszero\n      tag_868\n      jumpi\n        /* \"#utility.yul\":2909:2988   */\n      tag_869\n      tag_831\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":2873:2990   */\n    tag_868:\n        /* \"#utility.yul\":3023:3027   */\n      0x20\n        /* \"#utility.yul\":3015:3021   */\n      dup4\n        /* \"#utility.yul\":3011:3028   */\n      add\n        /* \"#utility.yul\":2999:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":3077:3080   */\n      dup4\n        /* \"#utility.yul\":3069:3073   */\n      0x20\n        /* \"#utility.yul\":3061:3067   */\n      dup3\n        /* \"#utility.yul\":3057:3074   */\n      mul\n        /* \"#utility.yul\":3047:3055   */\n      dup4\n        /* \"#utility.yul\":3043:3075   */\n      add\n        /* \"#utility.yul\":3040:3081   */\n      gt\n        /* \"#utility.yul\":3037:3165   */\n      iszero\n      tag_870\n      jumpi\n        /* \"#utility.yul\":3084:3163   */\n      tag_871\n      tag_832\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":3037:3165   */\n    tag_870:\n        /* \"#utility.yul\":2603:3171   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3177:3971   */\n    tag_13:\n        /* \"#utility.yul\":3317:3323   */\n      0x00\n        /* \"#utility.yul\":3325:3331   */\n      dup1\n        /* \"#utility.yul\":3333:3339   */\n      0x00\n        /* \"#utility.yul\":3382:3384   */\n      0x40\n        /* \"#utility.yul\":3370:3379   */\n      dup5\n        /* \"#utility.yul\":3361:3368   */\n      dup7\n        /* \"#utility.yul\":3357:3380   */\n      sub\n        /* \"#utility.yul\":3353:3385   */\n      slt\n        /* \"#utility.yul\":3350:3469   */\n      iszero\n      tag_873\n      jumpi\n        /* \"#utility.yul\":3388:3467   */\n      tag_874\n      tag_821\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":3350:3469   */\n    tag_873:\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3533:3631   */\n      tag_875\n        /* \"#utility.yul\":3623:3630   */\n      dup7\n        /* \"#utility.yul\":3614:3620   */\n      dup3\n        /* \"#utility.yul\":3603:3612   */\n      dup8\n        /* \"#utility.yul\":3599:3621   */\n      add\n        /* \"#utility.yul\":3533:3631   */\n      tag_825\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":3523:3631   */\n      swap4\n      pop\n        /* \"#utility.yul\":3479:3641   */\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x20\n        /* \"#utility.yul\":3697:3706   */\n      dup5\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3739:3757   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3731:3737   */\n      dup2\n        /* \"#utility.yul\":3728:3758   */\n      gt\n        /* \"#utility.yul\":3725:3842   */\n      iszero\n      tag_876\n      jumpi\n        /* \"#utility.yul\":3761:3840   */\n      tag_877\n      tag_822\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":3725:3842   */\n    tag_876:\n        /* \"#utility.yul\":3874:3954   */\n      tag_878\n        /* \"#utility.yul\":3946:3953   */\n      dup7\n        /* \"#utility.yul\":3937:3943   */\n      dup3\n        /* \"#utility.yul\":3926:3935   */\n      dup8\n        /* \"#utility.yul\":3922:3944   */\n      add\n        /* \"#utility.yul\":3874:3954   */\n      tag_833\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":3856:3954   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3651:3964   */\n      pop\n        /* \"#utility.yul\":3177:3971   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3977:4157   */\n    tag_26:\n        /* \"#utility.yul\":4025:4102   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4015:4103   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x32\n        /* \"#utility.yul\":4119:4120   */\n      0x04\n        /* \"#utility.yul\":4112:4127   */\n      mstore\n        /* \"#utility.yul\":4146:4150   */\n      0x24\n        /* \"#utility.yul\":4143:4144   */\n      0x00\n        /* \"#utility.yul\":4136:4151   */\n      revert\n        /* \"#utility.yul\":4163:4343   */\n    tag_834:\n        /* \"#utility.yul\":4211:4288   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4208:4209   */\n      0x00\n        /* \"#utility.yul\":4201:4289   */\n      mstore\n        /* \"#utility.yul\":4308:4312   */\n      0x11\n        /* \"#utility.yul\":4305:4306   */\n      0x04\n        /* \"#utility.yul\":4298:4313   */\n      mstore\n        /* \"#utility.yul\":4332:4336   */\n      0x24\n        /* \"#utility.yul\":4329:4330   */\n      0x00\n        /* \"#utility.yul\":4322:4337   */\n      revert\n        /* \"#utility.yul\":4349:4435   */\n    tag_835:\n        /* \"#utility.yul\":4384:4391   */\n      0x00\n        /* \"#utility.yul\":4424:4428   */\n      0xff\n        /* \"#utility.yul\":4417:4422   */\n      dup3\n        /* \"#utility.yul\":4413:4429   */\n      and\n        /* \"#utility.yul\":4402:4429   */\n      swap1\n      pop\n        /* \"#utility.yul\":4349:4435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4441:4608   */\n    tag_32:\n        /* \"#utility.yul\":4478:4481   */\n      0x00\n        /* \"#utility.yul\":4501:4523   */\n      tag_883\n        /* \"#utility.yul\":4517:4522   */\n      dup3\n        /* \"#utility.yul\":4501:4523   */\n      tag_835\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":4492:4523   */\n      swap2\n      pop\n        /* \"#utility.yul\":4545:4549   */\n      0xff\n        /* \"#utility.yul\":4538:4543   */\n      dup3\n        /* \"#utility.yul\":4535:4550   */\n      sub\n        /* \"#utility.yul\":4532:4573   */\n      tag_884\n      jumpi\n        /* \"#utility.yul\":4553:4571   */\n      tag_885\n      tag_834\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":4532:4573   */\n    tag_884:\n        /* \"#utility.yul\":4600:4601   */\n      0x01\n        /* \"#utility.yul\":4593:4598   */\n      dup3\n        /* \"#utility.yul\":4589:4602   */\n      add\n        /* \"#utility.yul\":4582:4602   */\n      swap1\n      pop\n        /* \"#utility.yul\":4441:4608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4614:4808   */\n    tag_40:\n        /* \"#utility.yul\":4654:4658   */\n      0x00\n        /* \"#utility.yul\":4674:4694   */\n      tag_887\n        /* \"#utility.yul\":4692:4693   */\n      dup3\n        /* \"#utility.yul\":4674:4694   */\n      tag_826\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":4669:4694   */\n      swap2\n      pop\n        /* \"#utility.yul\":4708:4728   */\n      tag_888\n        /* \"#utility.yul\":4726:4727   */\n      dup4\n        /* \"#utility.yul\":4708:4728   */\n      tag_826\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":4703:4728   */\n      swap3\n      pop\n        /* \"#utility.yul\":4752:4753   */\n      dup3\n        /* \"#utility.yul\":4749:4750   */\n      dup3\n        /* \"#utility.yul\":4745:4754   */\n      sub\n        /* \"#utility.yul\":4737:4754   */\n      swap1\n      pop\n        /* \"#utility.yul\":4776:4777   */\n      dup2\n        /* \"#utility.yul\":4770:4774   */\n      dup2\n        /* \"#utility.yul\":4767:4778   */\n      gt\n        /* \"#utility.yul\":4764:4801   */\n      iszero\n      tag_889\n      jumpi\n        /* \"#utility.yul\":4781:4799   */\n      tag_890\n      tag_834\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":4764:4801   */\n    tag_889:\n        /* \"#utility.yul\":4614:4808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4814:4994   */\n    tag_123:\n        /* \"#utility.yul\":4862:4939   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4859:4860   */\n      0x00\n        /* \"#utility.yul\":4852:4940   */\n      mstore\n        /* \"#utility.yul\":4959:4963   */\n      0x41\n        /* \"#utility.yul\":4956:4957   */\n      0x04\n        /* \"#utility.yul\":4949:4964   */\n      mstore\n        /* \"#utility.yul\":4983:4987   */\n      0x24\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":4973:4988   */\n      revert\n        /* \"#utility.yul\":5000:5188   */\n    tag_130:\n        /* \"#utility.yul\":5038:5041   */\n      0x00\n        /* \"#utility.yul\":5057:5075   */\n      tag_893\n        /* \"#utility.yul\":5073:5074   */\n      dup3\n        /* \"#utility.yul\":5057:5075   */\n      tag_835\n      jump\t// in\n    tag_893:\n        /* \"#utility.yul\":5052:5075   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5107   */\n      tag_894\n        /* \"#utility.yul\":5105:5106   */\n      dup4\n        /* \"#utility.yul\":5089:5107   */\n      tag_835\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":5084:5107   */\n      swap3\n      pop\n        /* \"#utility.yul\":5130:5131   */\n      dup3\n        /* \"#utility.yul\":5127:5128   */\n      dup3\n        /* \"#utility.yul\":5123:5132   */\n      add\n        /* \"#utility.yul\":5116:5132   */\n      swap1\n      pop\n        /* \"#utility.yul\":5153:5157   */\n      0xff\n        /* \"#utility.yul\":5148:5151   */\n      dup2\n        /* \"#utility.yul\":5145:5158   */\n      gt\n        /* \"#utility.yul\":5142:5181   */\n      iszero\n      tag_895\n      jumpi\n        /* \"#utility.yul\":5161:5179   */\n      tag_896\n      tag_834\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":5142:5181   */\n    tag_895:\n        /* \"#utility.yul\":5000:5188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5374   */\n    tag_147:\n        /* \"#utility.yul\":5242:5319   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5239:5240   */\n      0x00\n        /* \"#utility.yul\":5232:5320   */\n      mstore\n        /* \"#utility.yul\":5339:5343   */\n      0x21\n        /* \"#utility.yul\":5336:5337   */\n      0x04\n        /* \"#utility.yul\":5329:5344   */\n      mstore\n        /* \"#utility.yul\":5363:5367   */\n      0x24\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5353:5368   */\n      revert\n        /* \"#utility.yul\":5380:5571   */\n    tag_154:\n        /* \"#utility.yul\":5420:5423   */\n      0x00\n        /* \"#utility.yul\":5439:5459   */\n      tag_899\n        /* \"#utility.yul\":5457:5458   */\n      dup3\n        /* \"#utility.yul\":5439:5459   */\n      tag_826\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":5434:5459   */\n      swap2\n      pop\n        /* \"#utility.yul\":5473:5493   */\n      tag_900\n        /* \"#utility.yul\":5491:5492   */\n      dup4\n        /* \"#utility.yul\":5473:5493   */\n      tag_826\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":5468:5493   */\n      swap3\n      pop\n        /* \"#utility.yul\":5516:5517   */\n      dup3\n        /* \"#utility.yul\":5513:5514   */\n      dup3\n        /* \"#utility.yul\":5509:5518   */\n      add\n        /* \"#utility.yul\":5502:5518   */\n      swap1\n      pop\n        /* \"#utility.yul\":5537:5540   */\n      dup1\n        /* \"#utility.yul\":5534:5535   */\n      dup3\n        /* \"#utility.yul\":5531:5541   */\n      gt\n        /* \"#utility.yul\":5528:5564   */\n      iszero\n      tag_901\n      jumpi\n        /* \"#utility.yul\":5544:5562   */\n      tag_902\n      tag_834\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":5528:5564   */\n    tag_901:\n        /* \"#utility.yul\":5380:5571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5577:5757   */\n    tag_157:\n        /* \"#utility.yul\":5625:5702   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5622:5623   */\n      0x00\n        /* \"#utility.yul\":5615:5703   */\n      mstore\n        /* \"#utility.yul\":5722:5726   */\n      0x01\n        /* \"#utility.yul\":5719:5720   */\n      0x04\n        /* \"#utility.yul\":5712:5727   */\n      mstore\n        /* \"#utility.yul\":5746:5750   */\n      0x24\n        /* \"#utility.yul\":5743:5744   */\n      0x00\n        /* \"#utility.yul\":5736:5751   */\n      revert\n        /* \"#utility.yul\":5763:5943   */\n    tag_836:\n        /* \"#utility.yul\":5811:5888   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5801:5889   */\n      mstore\n        /* \"#utility.yul\":5908:5912   */\n      0x12\n        /* \"#utility.yul\":5905:5906   */\n      0x04\n        /* \"#utility.yul\":5898:5913   */\n      mstore\n        /* \"#utility.yul\":5932:5936   */\n      0x24\n        /* \"#utility.yul\":5929:5930   */\n      0x00\n        /* \"#utility.yul\":5922:5937   */\n      revert\n        /* \"#utility.yul\":5949:6134   */\n    tag_160:\n        /* \"#utility.yul\":5989:5990   */\n      0x00\n        /* \"#utility.yul\":6006:6026   */\n      tag_906\n        /* \"#utility.yul\":6024:6025   */\n      dup3\n        /* \"#utility.yul\":6006:6026   */\n      tag_826\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":6001:6026   */\n      swap2\n      pop\n        /* \"#utility.yul\":6040:6060   */\n      tag_907\n        /* \"#utility.yul\":6058:6059   */\n      dup4\n        /* \"#utility.yul\":6040:6060   */\n      tag_826\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":6035:6060   */\n      swap3\n      pop\n        /* \"#utility.yul\":6079:6080   */\n      dup3\n        /* \"#utility.yul\":6069:6104   */\n      tag_908\n      jumpi\n        /* \"#utility.yul\":6084:6102   */\n      tag_909\n      tag_836\n      jump\t// in\n    tag_909:\n        /* \"#utility.yul\":6069:6104   */\n    tag_908:\n        /* \"#utility.yul\":6126:6127   */\n      dup3\n        /* \"#utility.yul\":6123:6124   */\n      dup3\n        /* \"#utility.yul\":6119:6128   */\n      div\n        /* \"#utility.yul\":6114:6128   */\n      swap1\n      pop\n        /* \"#utility.yul\":5949:6134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6140:6550   */\n    tag_168:\n        /* \"#utility.yul\":6180:6187   */\n      0x00\n        /* \"#utility.yul\":6203:6223   */\n      tag_911\n        /* \"#utility.yul\":6221:6222   */\n      dup3\n        /* \"#utility.yul\":6203:6223   */\n      tag_826\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":6198:6223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6237:6257   */\n      tag_912\n        /* \"#utility.yul\":6255:6256   */\n      dup4\n        /* \"#utility.yul\":6237:6257   */\n      tag_826\n      jump\t// in\n    tag_912:\n        /* \"#utility.yul\":6232:6257   */\n      swap3\n      pop\n        /* \"#utility.yul\":6292:6293   */\n      dup3\n        /* \"#utility.yul\":6289:6290   */\n      dup3\n        /* \"#utility.yul\":6285:6294   */\n      mul\n        /* \"#utility.yul\":6314:6344   */\n      tag_913\n        /* \"#utility.yul\":6332:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_826\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":6303:6344   */\n      swap2\n      pop\n        /* \"#utility.yul\":6493:6494   */\n      dup3\n        /* \"#utility.yul\":6484:6491   */\n      dup3\n        /* \"#utility.yul\":6480:6495   */\n      div\n        /* \"#utility.yul\":6477:6478   */\n      dup5\n        /* \"#utility.yul\":6474:6496   */\n      eq\n        /* \"#utility.yul\":6454:6455   */\n      dup4\n        /* \"#utility.yul\":6447:6456   */\n      iszero\n        /* \"#utility.yul\":6427:6510   */\n      or\n        /* \"#utility.yul\":6404:6543   */\n      tag_914\n      jumpi\n        /* \"#utility.yul\":6523:6541   */\n      tag_915\n      tag_834\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":6404:6543   */\n    tag_914:\n        /* \"#utility.yul\":6188:6550   */\n      pop\n        /* \"#utility.yul\":6140:6550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6556:6747   */\n    tag_245:\n        /* \"#utility.yul\":6594:6598   */\n      0x00\n        /* \"#utility.yul\":6614:6632   */\n      tag_917\n        /* \"#utility.yul\":6630:6631   */\n      dup3\n        /* \"#utility.yul\":6614:6632   */\n      tag_835\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":6609:6632   */\n      swap2\n      pop\n        /* \"#utility.yul\":6646:6664   */\n      tag_918\n        /* \"#utility.yul\":6662:6663   */\n      dup4\n        /* \"#utility.yul\":6646:6664   */\n      tag_835\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":6641:6664   */\n      swap3\n      pop\n        /* \"#utility.yul\":6688:6689   */\n      dup3\n        /* \"#utility.yul\":6685:6686   */\n      dup3\n        /* \"#utility.yul\":6681:6690   */\n      sub\n        /* \"#utility.yul\":6673:6690   */\n      swap1\n      pop\n        /* \"#utility.yul\":6712:6716   */\n      0xff\n        /* \"#utility.yul\":6706:6710   */\n      dup2\n        /* \"#utility.yul\":6703:6717   */\n      gt\n        /* \"#utility.yul\":6700:6740   */\n      iszero\n      tag_919\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_920\n      tag_834\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":6700:6740   */\n    tag_919:\n        /* \"#utility.yul\":6556:6747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6753:6920   */\n    tag_506:\n        /* \"#utility.yul\":6790:6793   */\n      0x00\n        /* \"#utility.yul\":6813:6835   */\n      tag_922\n        /* \"#utility.yul\":6829:6834   */\n      dup3\n        /* \"#utility.yul\":6813:6835   */\n      tag_835\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":6804:6835   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6861   */\n      0x00\n        /* \"#utility.yul\":6850:6855   */\n      dup3\n        /* \"#utility.yul\":6847:6862   */\n      sub\n        /* \"#utility.yul\":6844:6885   */\n      tag_923\n      jumpi\n        /* \"#utility.yul\":6865:6883   */\n      tag_924\n      tag_834\n      jump\t// in\n    tag_924:\n        /* \"#utility.yul\":6844:6885   */\n    tag_923:\n        /* \"#utility.yul\":6912:6913   */\n      0x01\n        /* \"#utility.yul\":6905:6910   */\n      dup3\n        /* \"#utility.yul\":6901:6914   */\n      sub\n        /* \"#utility.yul\":6894:6914   */\n      swap1\n      pop\n        /* \"#utility.yul\":6753:6920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6926:7102   */\n    tag_511:\n        /* \"#utility.yul\":6958:6959   */\n      0x00\n        /* \"#utility.yul\":6975:6995   */\n      tag_926\n        /* \"#utility.yul\":6993:6994   */\n      dup3\n        /* \"#utility.yul\":6975:6995   */\n      tag_826\n      jump\t// in\n    tag_926:\n        /* \"#utility.yul\":6970:6995   */\n      swap2\n      pop\n        /* \"#utility.yul\":7009:7029   */\n      tag_927\n        /* \"#utility.yul\":7027:7028   */\n      dup4\n        /* \"#utility.yul\":7009:7029   */\n      tag_826\n      jump\t// in\n    tag_927:\n        /* \"#utility.yul\":7004:7029   */\n      swap3\n      pop\n        /* \"#utility.yul\":7048:7049   */\n      dup3\n        /* \"#utility.yul\":7038:7073   */\n      tag_928\n      jumpi\n        /* \"#utility.yul\":7053:7071   */\n      tag_929\n      tag_836\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":7038:7073   */\n    tag_928:\n        /* \"#utility.yul\":7094:7095   */\n      dup3\n        /* \"#utility.yul\":7091:7092   */\n      dup3\n        /* \"#utility.yul\":7087:7096   */\n      mod\n        /* \"#utility.yul\":7082:7096   */\n      swap1\n      pop\n        /* \"#utility.yul\":6926:7102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f1b2f2308eff25ef3e1103b5687084e763b761014a325515204e4f43226777a64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "613f1361004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c80634dec36e3146100435780638e501fc714610073575b5f80fd5b61005d60048036038101906100589190613ae1565b61009b565b60405161006a9190613b2e565b60405180910390f35b81801561007e575f80fd5b5061009960048036038101906100949190613ba8565b6100af565b005b5f6100a7835f8461027b565b905092915050565b5f8380549050146100be575f80fd5b61010082829050106100ce575f80fd5b5f5b828290508160ff161015610248575f83838360ff168181106100f5576100f4613c05565b5b905060200201359050601560ff16811061010d575f80fd5b610115613a34565b81815f019060ff16908160ff16815250505f60ff1682036101635784848461013c90613c6b565b94508460ff1681811061015257610151613c05565b5b905060200201358160a00181815250505b8581908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548160ff021916908360ff1602179055506020820151815f0160016101000a81548160ff021916908360ff1602179055506040820151815f0160026101000a81548160ff021916908360ff1602179055506060820151815f0160036101000a81548160ff021916908360ff1602179055506080820151815f0160046101000a81548160ff021916908360ff16021790555060a08201518160010155505050508061024190613c6b565b90506100d0565b505f610254845f61071f565b509050600184805490506102689190613c93565b8160ff1614610275575f80fd5b50505050565b5f80848460ff168154811061029357610292613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff1690505f60ff168160ff16036102cf57816001015492505050610718565b600160ff168160ff16036102e7578392505050610718565b600260ff168160ff1603610399575f61031187845f0160019054906101000a900460ff168761027b565b90505f61033b600261032d60018561094c90919063ffffffff16565b61097290919063ffffffff16565b90505f8290505b8082101561038c57819050610385600261037784610369868861097290919063ffffffff16565b61094c90919063ffffffff16565b61097290919063ffffffff16565b9150610342565b8095505050505050610718565b600460ff168160ff16101580156103b75750600960ff168160ff1611155b15610545575f6103d887845f0160019054906101000a900460ff168761027b565b90505f6103f688855f0160029054906101000a900460ff168861027b565b9050600460ff168360ff160361042457610419818361094c90919063ffffffff16565b945050505050610718565b600560ff168360ff160361045057610445818361098790919063ffffffff16565b945050505050610718565b600660ff168360ff160361047c5761047181836109ad90919063ffffffff16565b945050505050610718565b600760ff168360ff16036104a85761049d818361097290919063ffffffff16565b945050505050610718565b600860ff168360ff16036104f8575f8190505f600190505f5b828110156104e9576104dc85836109ad90919063ffffffff16565b91508060010190506104c1565b50809650505050505050610718565b600960ff168360ff160361053e57610533670de0b6b3a764000061052583856109ad90919063ffffffff16565b61097290919063ffffffff16565b945050505050610718565b5050610714565b601260ff168160ff16036105c1575f61056f87845f0160019054906101000a900460ff16876109ed565b9050801561059c5761059287845f0160029054906101000a900460ff168761027b565b9350505050610718565b6105b787845f0160039054906101000a900460ff168761027b565b9350505050610718565b601360ff168160ff1603610640575f6105eb87845f0160019054906101000a900460ff168761027b565b90505f61060988855f0160029054906101000a900460ff168861027b565b90505f61062789865f0160039054906101000a900460ff168961027b565b9050610634838383610cc3565b95505050505050610718565b601460ff168160ff1603610713575f61066a87845f0160019054906101000a900460ff168761027b565b90505f61068888855f0160029054906101000a900460ff168861027b565b90505f6106a689865f0160039054906101000a900460ff168961027b565b90505f6106c48a875f0160049054906101000a900460ff168a61027b565b905064010000000081106106d6575f80fd5b5f806106e7858585620f4240610d62565b915091508060ff1661070287846109ad90919063ffffffff16565b901c98505050505050505050610718565b5b5f80fd5b9392505050565b5f8083805490508360ff1610610733575f80fd5b5f848460ff168154811061074a57610749613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff1690505f61077582610e7d565b90505f8160ff1667ffffffffffffffff81111561079557610794613cc6565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b5090505f8790505f5b8360ff168160ff16101561092b575f8160ff1603610811576001826107f19190613cf3565b865f0160016101000a81548160ff021916908360ff1602179055506108c0565b60018160ff1603610849576001826108299190613cf3565b865f0160026101000a81548160ff021916908360ff1602179055506108bf565b60028160ff1603610881576001826108619190613cf3565b865f0160036101000a81548160ff021916908360ff1602179055506108be565b60038160ff16036108b9576001826108999190613cf3565b865f0160046101000a81548160ff021916908360ff1602179055506108bd565b5f80fd5b5b5b5b6108d68a6001846108d19190613cf3565b61071f565b848360ff16815181106108ec576108eb613c05565b5b6020026020010181600281111561090657610905613d27565b5b600281111561091857610917613d27565b5b81525081935050508060010190506107cc565b505f6109378584610ef9565b90508181975097505050505050509250929050565b5f81836109599190613d54565b90508281101561096c5761096b613d87565b5b92915050565b5f818361097f9190613de1565b905092915050565b5f8282111561099957610998613d87565b5b81836109a59190613c93565b905092915050565b5f8083036109bd575f90506109e7565b81836109c99190613e11565b90508183826109d89190613de1565b146109e6576109e5613d87565b5b5b92915050565b5f80848460ff1681548110610a0557610a04613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff169050600360ff168160ff1603610a5957610a4f86835f0160019054906101000a900460ff16866109ed565b1592505050610cbc565b600a60ff168160ff1610158015610a775750600f60ff168160ff1611155b15610b6a575f610a9887845f0160019054906101000a900460ff168761027b565b90505f610ab688855f0160029054906101000a900460ff168861027b565b9050600a60ff168360ff1603610ad457808214945050505050610cbc565b600b60ff168360ff1603610af15780821415945050505050610cbc565b600c60ff168360ff1603610b0d57808210945050505050610cbc565b600d60ff168360ff1603610b2957808211945050505050610cbc565b600e60ff168360ff1603610b465780821115945050505050610cbc565b600f60ff168360ff1603610b635780821015945050505050610cbc565b5050610cb8565b601060ff168160ff1610158015610b885750601160ff168160ff1611155b15610c3a575f610ba987845f0160019054906101000a900460ff16876109ed565b9050601060ff168260ff1603610bef578015610be457610bda87845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b5f9350505050610cbc565b601160ff168260ff1603610c34578015610c0f5760019350505050610cbc565b610c2a87845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b50610cb7565b601260ff168160ff1603610cb6575f610c6487845f0160019054906101000a900460ff16876109ed565b90508015610c9157610c8787845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b610cac87845f0160039054906101000a900460ff16876109ed565b9350505050610cbc565b5b5b5f80fd5b9392505050565b5f81831015610cd0575f80fd5b5f80836f8000000000000000000000000000000086610cef9190613e11565b610cf99190613de1565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610d2457610d1d8161157f565b9150610d30565b610d2d81611cf4565b91505b6f800000000000000000000000000000008683610d4d9190613e11565b610d579190613de1565b925050509392505050565b5f807002000000000000000000000000000000008610610d80575f80fd5b84861015610d8c575f80fd5b5f80866f8000000000000000000000000000000089610dab9190613e11565b610db59190613de1565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610de057610dd98161157f565b9150610dec565b610de981611cf4565b91505b5f8563ffffffff168763ffffffff1684610e069190613e11565b610e109190613de1565b9050700800000000000000000000000000000000811015610e4257610e3481611e49565b607f94509450505050610e74565b5f610e4c82612643565b9050610e6a81607f610e5e9190613e52565b60ff1683901c826132a6565b8195509550505050505b94509492505050565b5f600160ff168260ff1611610e94575f9050610ef4565b600360ff168260ff1611610eab5760019050610ef4565b601160ff168260ff1611610ec25760029050610ef4565b601360ff168260ff1611610ed95760039050610ef4565b601460ff168260ff1611610ef05760049050610ef4565b5f80fd5b919050565b5f600160ff168360ff1611610f115760019050611579565b600260ff168360ff1603610f725760016002811115610f3357610f32613d27565b5b825f81518110610f4657610f45613c05565b5b60200260200101516002811115610f6057610f5f613d27565b5b14610f69575f80fd5b60019050611579565b600360ff168360ff1603610fd257600280811115610f9357610f92613d27565b5b825f81518110610fa657610fa5613c05565b5b60200260200101516002811115610fc057610fbf613d27565b5b14610fc9575f80fd5b60029050611579565b600460ff168360ff1610158015610ff05750600960ff168360ff1611155b15611093576001600281111561100957611008613d27565b5b825f8151811061101c5761101b613c05565b5b6020026020010151600281111561103657611035613d27565b5b1461103f575f80fd5b6001600281111561105357611052613d27565b5b8260018151811061106757611066613c05565b5b6020026020010151600281111561108157611080613d27565b5b1461108a575f80fd5b60019050611579565b600a60ff168360ff16101580156110b15750600f60ff168360ff1611155b1561115457600160028111156110ca576110c9613d27565b5b825f815181106110dd576110dc613c05565b5b602002602001015160028111156110f7576110f6613d27565b5b14611100575f80fd5b6001600281111561111457611113613d27565b5b8260018151811061112857611127613c05565b5b6020026020010151600281111561114257611141613d27565b5b1461114b575f80fd5b60029050611579565b601060ff168360ff16101580156111725750601160ff168360ff1611155b156112135760028081111561118a57611189613d27565b5b825f8151811061119d5761119c613c05565b5b602002602001015160028111156111b7576111b6613d27565b5b146111c0575f80fd5b6002808111156111d3576111d2613d27565b5b826001815181106111e7576111e6613c05565b5b6020026020010151600281111561120157611200613d27565b5b1461120a575f80fd5b60029050611579565b601260ff168360ff160361133c5760028081111561123457611233613d27565b5b825f8151811061124757611246613c05565b5b6020026020010151600281111561126157611260613d27565b5b1461126a575f80fd5b5f600281111561127d5761127c613d27565b5b8260018151811061129157611290613c05565b5b602002602001015160028111156112ab576112aa613d27565b5b036112b4575f80fd5b816002815181106112c8576112c7613c05565b5b602002602001015160028111156112e2576112e1613d27565b5b826001815181106112f6576112f5613c05565b5b602002602001015160028111156113105761130f613d27565b5b14611319575f80fd5b8160018151811061132d5761132c613c05565b5b60200260200101519050611579565b601360ff168360ff1603611433576001600281111561135e5761135d613d27565b5b825f8151811061137157611370613c05565b5b6020026020010151600281111561138b5761138a613d27565b5b14611394575f80fd5b600160028111156113a8576113a7613d27565b5b826001815181106113bc576113bb613c05565b5b602002602001015160028111156113d6576113d5613d27565b5b146113df575f80fd5b600160028111156113f3576113f2613d27565b5b8260028151811061140757611406613c05565b5b6020026020010151600281111561142157611420613d27565b5b1461142a575f80fd5b60019050611579565b601460ff168360ff1603611575576001600281111561145557611454613d27565b5b825f8151811061146857611467613c05565b5b6020026020010151600281111561148257611481613d27565b5b1461148b575f80fd5b6001600281111561149f5761149e613d27565b5b826001815181106114b3576114b2613c05565b5b602002602001015160028111156114cd576114cc613d27565b5b146114d6575f80fd5b600160028111156114ea576114e9613d27565b5b826002815181106114fe576114fd613c05565b5b6020026020010151600281111561151857611517613d27565b5b14611521575f80fd5b6001600281111561153557611534613d27565b5b8260038151811061154957611548613c05565b5b6020026020010151600281111561156357611562613d27565b5b1461156c575f80fd5b60019050611579565b5f80fd5b92915050565b5f805f90505f805f6fd3094c70f034de4b96ff7d5b6f99fcd886106115f6576f40000000000000000000000000000000846115ba9190613d54565b93506fd3094c70f034de4b96ff7d5b6f99fcd86f80000000000000000000000000000000876115e99190613e11565b6115f39190613de1565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611665576f20000000000000000000000000000000846116299190613d54565b93506fa45af1e1f40c333b3de1db4dd55f29a76f80000000000000000000000000000000876116589190613e11565b6116629190613de1565b95505b6f910b022db7ae67ce76b441c27035c6a186106116d4576f10000000000000000000000000000000846116989190613d54565b93506f910b022db7ae67ce76b441c27035c6a16f80000000000000000000000000000000876116c79190613e11565b6116d19190613de1565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611743576f08000000000000000000000000000000846117079190613d54565b93506f88415abbe9a76bead8d00cf112e4d4a86f80000000000000000000000000000000876117369190613e11565b6117409190613de1565b95505b6f84102b00893f64c705e841d5d4064bd386106117b2576f04000000000000000000000000000000846117769190613d54565b93506f84102b00893f64c705e841d5d4064bd36f80000000000000000000000000000000876117a59190613e11565b6117af9190613de1565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611821576f02000000000000000000000000000000846117e59190613d54565b93506f8204055aaef1c8bd5c3259f4822735a26f80000000000000000000000000000000876118149190613e11565b61181e9190613de1565b95505b6f810100ab00222d861931c15e39b44e998610611890576f01000000000000000000000000000000846118549190613d54565b93506f810100ab00222d861931c15e39b44e996f80000000000000000000000000000000876118839190613e11565b61188d9190613de1565b95505b6f808040155aabbbe9451521693554f73386106118fe576e800000000000000000000000000000846118c29190613d54565b93506f808040155aabbbe9451521693554f7336f80000000000000000000000000000000876118f19190613e11565b6118fb9190613de1565b95505b6f800000000000000000000000000000008661191a9190613c93565b92508291506f80000000000000000000000000000000838461193c9190613e11565b6119469190613de1565b9050700100000000000000000000000000000000837001000000000000000000000000000000006119779190613c93565b836119829190613e11565b61198c9190613de1565b846119979190613d54565b93506f8000000000000000000000000000000081836119b69190613e11565b6119c09190613de1565b9150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6119f09190613c93565b836119fb9190613e11565b611a059190613de1565b84611a109190613d54565b93506f800000000000000000000000000000008183611a2f9190613e11565b611a399190613de1565b9150700300000000000000000000000000000000836f99999999999999999999999999999999611a699190613c93565b83611a749190613e11565b611a7e9190613de1565b84611a899190613d54565b93506f800000000000000000000000000000008183611aa89190613e11565b611ab29190613de1565b9150700400000000000000000000000000000000836f92492492492492492492492492492492611ae29190613c93565b83611aed9190613e11565b611af79190613de1565b84611b029190613d54565b93506f800000000000000000000000000000008183611b219190613e11565b611b2b9190613de1565b9150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e611b5b9190613c93565b83611b669190613e11565b611b709190613de1565b84611b7b9190613d54565b93506f800000000000000000000000000000008183611b9a9190613e11565b611ba49190613de1565b9150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b611bd49190613c93565b83611bdf9190613e11565b611be99190613de1565b84611bf49190613d54565b93506f800000000000000000000000000000008183611c139190613e11565b611c1d9190613de1565b9150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d89611c4d9190613c93565b83611c589190613e11565b611c629190613de1565b84611c6d9190613d54565b93506f800000000000000000000000000000008183611c8c9190613e11565b611c969190613de1565b9150700800000000000000000000000000000000836f88888888888888888888888888888888611cc69190613c93565b83611cd19190613e11565b611cdb9190613de1565b84611ce69190613d54565b935083945050505050919050565b5f805f90507001000000000000000000000000000000008310611d64575f611d366f8000000000000000000000000000000085611d319190613de1565b6139b3565b90508060ff1684901c93506f800000000000000000000000000000008160ff16611d609190613e11565b9150505b6f80000000000000000000000000000000831115611e0a575f607f90505b5f8160ff161115611e08576f800000000000000000000000000000008485611daa9190613e11565b611db49190613de1565b93507001000000000000000000000000000000008410611df757600184901c9350600181611de29190613e52565b60ff166001901b82611df49190613d54565b91505b80611e0190613e86565b9050611d82565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f882611e379190613e11565b611e419190613de1565b915050919050565b5f805f90505f806f1000000000000000000000000000000085611e6c9190613ead565b91508190506f800000000000000000000000000000008282611e8e9190613e11565b611e989190613de1565b90506710e1b3be415a000081611eae9190613e11565b83611eb99190613d54565b92506f800000000000000000000000000000008282611ed89190613e11565b611ee29190613de1565b90506705a0913f6b1e000081611ef89190613e11565b83611f039190613d54565b92506f800000000000000000000000000000008282611f229190613e11565b611f2c9190613de1565b9050670168244fdac7800081611f429190613e11565b83611f4d9190613d54565b92506f800000000000000000000000000000008282611f6c9190613e11565b611f769190613de1565b9050664807432bc1800081611f8b9190613e11565b83611f969190613d54565b92506f800000000000000000000000000000008282611fb59190613e11565b611fbf9190613de1565b9050660c0135dca0400081611fd49190613e11565b83611fdf9190613d54565b92506f800000000000000000000000000000008282611ffe9190613e11565b6120089190613de1565b90506601b707b1cdc0008161201d9190613e11565b836120289190613d54565b92506f8000000000000000000000000000000082826120479190613e11565b6120519190613de1565b90506536e0f639b800816120659190613e11565b836120709190613d54565b92506f80000000000000000000000000000000828261208f9190613e11565b6120999190613de1565b9050650618fee9f800816120ad9190613e11565b836120b89190613d54565b92506f8000000000000000000000000000000082826120d79190613e11565b6120e19190613de1565b9050649c197dcc00816120f49190613e11565b836120ff9190613d54565b92506f80000000000000000000000000000000828261211e9190613e11565b6121289190613de1565b9050640e30dce4008161213b9190613e11565b836121469190613d54565b92506f8000000000000000000000000000000082826121659190613e11565b61216f9190613de1565b905064012ebd1300816121829190613e11565b8361218d9190613d54565b92506f8000000000000000000000000000000082826121ac9190613e11565b6121b69190613de1565b90506317499f00816121c89190613e11565b836121d39190613d54565b92506f8000000000000000000000000000000082826121f29190613e11565b6121fc9190613de1565b90506301a9d4808161220e9190613e11565b836122199190613d54565b92506f8000000000000000000000000000000082826122389190613e11565b6122429190613de1565b9050621c6380816122539190613e11565b8361225e9190613d54565b92506f80000000000000000000000000000000828261227d9190613e11565b6122879190613de1565b90506201c638816122989190613e11565b836122a39190613d54565b92506f8000000000000000000000000000000082826122c29190613e11565b6122cc9190613de1565b9050611ab8816122dc9190613e11565b836122e79190613d54565b92506f8000000000000000000000000000000082826123069190613e11565b6123109190613de1565b905061017c816123209190613e11565b8361232b9190613d54565b92506f80000000000000000000000000000000828261234a9190613e11565b6123549190613de1565b90506014816123639190613e11565b8361236e9190613d54565b92506f80000000000000000000000000000000828261238d9190613e11565b6123979190613de1565b90506001816123a69190613e11565b836123b19190613d54565b92506f80000000000000000000000000000000826721c3677c82b40000856123d99190613de1565b6123e39190613d54565b6123ed9190613d54565b92505f6f100000000000000000000000000000008616146124445770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f9846124379190613e11565b6124419190613de1565b92505b5f6f20000000000000000000000000000000861614612499577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e7788461248c9190613e11565b6124969190613de1565b92505b5f6f400000000000000000000000000000008616146124ed576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5846124e09190613e11565b6124ea9190613de1565b92505b5f6f80000000000000000000000000000000861614612540576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e846125339190613e11565b61253d9190613de1565b92505b5f700100000000000000000000000000000000861614612594576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c5846125879190613e11565b6125919190613de1565b92505b5f7002000000000000000000000000000000008616146125e7576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7846125da9190613e11565b6125e49190613de1565b92505b5f700400000000000000000000000000000000861614612638576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc3078461262b9190613e11565b6126359190613de1565b92505b829350505050919050565b5f81701c35fedd14ffffffffffffffffffffffff1061266557602090506132a1565b81701b0ce43b323fffffffffffffffffffffff1061268657602190506132a1565b817019f0028ec1ffffffffffffffffffffffff106126a757602290506132a1565b817018ded91f0e7fffffffffffffffffffffff106126c857602390506132a1565b817017d8ec7f0417ffffffffffffffffffffff106126e957602490506132a1565b817016ddc6556cdbffffffffffffffffffffff1061270a57602590506132a1565b817015ecf52776a1ffffffffffffffffffffff1061272b57602690506132a1565b817015060c256cb2ffffffffffffffffffffff1061274c57602790506132a1565b81701428a2f98d72ffffffffffffffffffffff1061276d57602890506132a1565b817013545598e5c23fffffffffffffffffffff1061278e57602990506132a1565b81701288c4161ce1dfffffffffffffffffffff106127af57602a90506132a1565b817011c592761c666fffffffffffffffffffff106127d057602b90506132a1565b8170110a688680a757ffffffffffffffffffff106127f157602c90506132a1565b81701056f1b5bedf77ffffffffffffffffffff1061281257602d90506132a1565b81700faadceceeff8bffffffffffffffffffff1061283357602e90506132a1565b81700f05dc6b27edadffffffffffffffffffff1061285457602f90506132a1565b81700e67a5a25da4107fffffffffffffffffff1061287557603090506132a1565b81700dcff115b14eedffffffffffffffffffff1061289657603190506132a1565b81700d3e7a392431239fffffffffffffffffff106128b757603290506132a1565b81700cb2ff529eb71e4fffffffffffffffffff106128d857603390506132a1565b81700c2d415c3db974afffffffffffffffffff106128f957603490506132a1565b81700bad03e7d883f69bffffffffffffffffff1061291a57603590506132a1565b81700b320d03b2c343d5ffffffffffffffffff1061293b57603690506132a1565b81700abc25204e02828dffffffffffffffffff1061295c57603790506132a1565b81700a4b16f74ee4bb207fffffffffffffffff1061297d57603890506132a1565b817009deaf736ac1f569ffffffffffffffffff1061299e57603990506132a1565b81700976bd9952c7aa957fffffffffffffffff106129bf57603a90506132a1565b817009131271922eaa606fffffffffffffffff106129e057603b90506132a1565b817008b380f3558668c46fffffffffffffffff10612a0157603c90506132a1565b81700857ddf0117efa215bffffffffffffffff10612a2257603d90506132a1565b817007ffffffffffffffffffffffffffffffff10612a4357603e90506132a1565b817007abbf6f6abb9d087fffffffffffffffff10612a6457603f90506132a1565b8170075af62cbac95f7dfa7fffffffffffffff10612a8557604090506132a1565b8170070d7fb7452e187ac13fffffffffffffff10612aa657604190506132a1565b817006c3390ecc8af379295fffffffffffffff10612ac757604290506132a1565b8170067c00a3b07ffc01fd6fffffffffffffff10612ae857604390506132a1565b81700637b647c39cbb9d3d27ffffffffffffff10612b0957604490506132a1565b817005f63b1fc104dbd39587ffffffffffffff10612b2a57604590506132a1565b817005b771955b36e12f7235ffffffffffffff10612b4b57604690506132a1565b8170057b3d49dda84556d6f6ffffffffffffff10612b6c57604790506132a1565b8170054183095b2c8ececf30ffffffffffffff10612b8d57604890506132a1565b8170050a28be635ca2b888f77fffffffffffff10612bae57604990506132a1565b817004d5156639708c9db33c3fffffffffffff10612bcf57604a90506132a1565b817004a23105873875bd52dfdfffffffffffff10612bf057604b90506132a1565b81700471649d87199aa990756fffffffffffff10612c1157604c90506132a1565b817004429a21a029d4c1457cfbffffffffffff10612c3257604d90506132a1565b81700415bc6d6fb7dd71af2cb3ffffffffffff10612c5357604e90506132a1565b817003eab73b3bbfe282243ce1ffffffffffff10612c7457604f90506132a1565b817003c1771ac9fb6b4c18e229ffffffffffff10612c9557605090506132a1565b81700399e96897690418f785257fffffffffff10612cb657605190506132a1565b81700373fc456c53bb779bf0ea9fffffffffff10612cd757605290506132a1565b8170034f9e8e490c48e67e6ab8bfffffffffff10612cf857605390506132a1565b8170032cbfd4a7adc790560b3337ffffffffff10612d1957605490506132a1565b8170030b50570f6e5d2acca94613ffffffffff10612d3a57605590506132a1565b817002eb40f9f620fda6b56c2861ffffffffff10612d5b57605690506132a1565b817002cc8340ecb0d0f520a6af58ffffffffff10612d7c57605790506132a1565b817002af09481380a0a35cf1ba02ffffffffff10612d9d57605890506132a1565b81700292c5bdd3b92ec810287b1b3fffffffff10612dbe57605990506132a1565b81700277abdcdab07d5a77ac6d6b9fffffffff10612ddf57605a90506132a1565b8170025daf6654b1eaa55fd64df5efffffffff10612e0057605b90506132a1565b81700244c49c648baa98192dce88b7ffffffff10612e2157605c90506132a1565b8170022ce03cd5619a311b2471268bffffffff10612e4257605d90506132a1565b81700215f77c045fbe885654a44a0fffffffff10612e6357605e90506132a1565b817001ffffffffffffffffffffffffffffffff10612e8457605f90506132a1565b817001eaefdbdaaee7421fc4d3ede5ffffffff10612ea557606090506132a1565b817001d6bd8b2eb257df7e8ca57b09bfffffff10612ec657606190506132a1565b817001c35fedd14b861eb0443f7f133fffffff10612ee757606290506132a1565b817001b0ce43b322bcde4a56e8ada5afffffff10612f0857606390506132a1565b8170019f0028ec1fff007f5a195a39dfffffff10612f2957606490506132a1565b8170018ded91f0e72ee74f49b15ba527ffffff10612f4a57606590506132a1565b8170017d8ec7f04136f4e5615fd41a63ffffff10612f6b57606690506132a1565b8170016ddc6556cdb84bdc8d12d22e6fffffff10612f8c57606790506132a1565b8170015ecf52776a1155b5bd8395814f7fffff10612fad57606890506132a1565b8170015060c256cb23b3b3cc3754cf40ffffff10612fce57606990506132a1565b817001428a2f98d728ae223ddab715be3fffff10612fef57606a90506132a1565b8170013545598e5c23276ccf0ede68034fffff1061301057606b90506132a1565b817001288c4161ce1d6f54b7f61081194fffff1061303157606c90506132a1565b8170011c592761c666aa641d5a01a40f17ffff1061305257606d90506132a1565b81700110a688680a7530515f3e6e6cfdcdffff1061307357606e90506132a1565b817001056f1b5bedf75c6bcb2ce8aed428ffff1061309457606f90506132a1565b816ffaadceceeff8a0890f3875f008277fff106130b457607090506132a1565b816ff05dc6b27edad306388a600f6ba0bfff106130d457607190506132a1565b816fe67a5a25da41063de1495d5b18cdbfff106130f457607290506132a1565b816fdcff115b14eedde6fc3aa5353f2e4fff1061311457607390506132a1565b816fd3e7a3924312399f9aae2e0f868f8fff1061313457607490506132a1565b816fcb2ff529eb71e41582cccd5a1ee26fff1061315457607590506132a1565b816fc2d415c3db974ab32a51840c0b67edff1061317457607690506132a1565b816fbad03e7d883f69ad5b0a186184e06bff1061319457607790506132a1565b816fb320d03b2c343d4829abd6075f0cc5ff106131b457607890506132a1565b816fabc25204e02828d73c6e80bcdb1a95bf106131d457607990506132a1565b816fa4b16f74ee4bb2040a1ec6c15fbbf2df106131f457607a90506132a1565b816f9deaf736ac1f569deb1b5ae3f36c130f1061321457607b90506132a1565b816f976bd9952c7aa957f5937d790ef650371061323457607c90506132a1565b816f9131271922eaa6064b73a22d0bd4f2bf1061325457607d90506132a1565b816f8b380f3558668c46c91c49a2f8e967b91061327457607e90506132a1565b816f857ddf0117efa215952912839f6473e61061329457607f90506132a1565b5f61329d575f80fd5b5f90505b919050565b5f808390505f8360ff1685836132bc9190613e11565b901c91506f03442c4e6074a82f1797f72ac0000000826132dc9190613e11565b816132e79190613d54565b90508360ff1685836132f99190613e11565b901c91506f0116b96f757c380fb287fd0e40000000826133199190613e11565b816133249190613d54565b90508360ff1685836133369190613e11565b901c91506e45ae5bdd5f0e03eca1ff4390000000826133559190613e11565b816133609190613d54565b90508360ff1685836133729190613e11565b901c91506e0defabf91302cd95b9ffda50000000826133919190613e11565b8161339c9190613d54565b90508360ff1685836133ae9190613e11565b901c91506e02529ca9832b22439efff9b8000000826133cd9190613e11565b816133d89190613d54565b90508360ff1685836133ea9190613e11565b901c91506d54f1cf12bd04e516b6da88000000826134089190613e11565b816134139190613d54565b90508360ff1685836134259190613e11565b901c91506d0a9e39e257a09ca2d6db51000000826134439190613e11565b8161344e9190613d54565b90508360ff1685836134609190613e11565b901c91506d012e066e7b839fa050c3090000008261347e9190613e11565b816134899190613d54565b90508360ff16858361349b9190613e11565b901c91506c1e33d7d926c329a1ad1a800000826134b89190613e11565b816134c39190613d54565b90508360ff1685836134d59190613e11565b901c91506c02bee513bdb4a6b19b5f800000826134f29190613e11565b816134fd9190613d54565b90508360ff16858361350f9190613e11565b901c91506b3a9316fa79b88eccf2a000008261352b9190613e11565b816135369190613d54565b90508360ff1685836135489190613e11565b901c91506b048177ebe1fa812375200000826135649190613e11565b8161356f9190613d54565b90508360ff1685836135819190613e11565b901c91506a5263fe90242dcbacf000008261359c9190613e11565b816135a79190613d54565b90508360ff1685836135b99190613e11565b901c91506a057e22099c030d94100000826135d49190613e11565b816135df9190613d54565b90508360ff1685836135f19190613e11565b901c91506957e22099c030d94100008261360b9190613e11565b816136169190613d54565b90508360ff1685836136289190613e11565b901c915069052b6b54569976310000826136429190613e11565b8161364d9190613d54565b90508360ff16858361365f9190613e11565b901c9150684985f67696bf748000826136789190613e11565b816136839190613d54565b90508360ff1685836136959190613e11565b901c91506803dea12ea99e498000826136ae9190613e11565b816136b99190613d54565b90508360ff1685836136cb9190613e11565b901c91506731880f2214b6e000826136e39190613e11565b816136ee9190613d54565b90508360ff1685836137009190613e11565b901c915067025bcff56eb36000826137189190613e11565b816137239190613d54565b90508360ff1685836137359190613e11565b901c9150661b722e10ab10008261374c9190613e11565b816137579190613d54565b90508360ff1685836137699190613e11565b901c91506601317c70077000826137809190613e11565b8161378b9190613d54565b90508360ff16858361379d9190613e11565b901c9150650cba84aafa00826137b39190613e11565b816137be9190613d54565b90508360ff1685836137d09190613e11565b901c91506482573a0a00826137e59190613e11565b816137f09190613d54565b90508360ff1685836138029190613e11565b901c91506405035ad900826138179190613e11565b816138229190613d54565b90508360ff1685836138349190613e11565b901c9150632f881b00826138489190613e11565b816138539190613d54565b90508360ff1685836138659190613e11565b901c91506301b29340826138799190613e11565b816138849190613d54565b90508360ff1685836138969190613e11565b901c9150620efc40826138a99190613e11565b816138b49190613d54565b90508360ff1685836138c69190613e11565b901c9150617fe0826138d89190613e11565b816138e39190613d54565b90508360ff1685836138f59190613e11565b901c9150610420826139079190613e11565b816139129190613d54565b90508360ff1685836139249190613e11565b901c91506021826139359190613e11565b816139409190613d54565b90508360ff1685836139529190613e11565b901c91506001826139639190613e11565b8161396e9190613d54565b90508360ff166001901b856f0688589cc0e9505e2f2fee5580000000836139959190613de1565b61399f9190613d54565b6139a99190613d54565b9250505092915050565b5f805f90506101008310156139ec575b60018311156139e757600183901c92506001816139e09190613cf3565b90506139c3565b613a2b565b5f608090505b5f8160ff161115613a29578060ff166001901b8410613a1a578060ff1684901c935080821791505b60018160ff16901c90506139f2565b505b80915050919050565b6040518060c001604052805f60ff1681526020015f60ff1681526020015f60ff1681526020015f60ff1681526020015f60ff1681526020015f81525090565b5f80fd5b5f80fd5b5f819050919050565b613a8d81613a7b565b8114613a97575f80fd5b50565b5f81359050613aa881613a84565b92915050565b5f819050919050565b613ac081613aae565b8114613aca575f80fd5b50565b5f81359050613adb81613ab7565b92915050565b5f8060408385031215613af757613af6613a73565b5b5f613b0485828601613a9a565b9250506020613b1585828601613acd565b9150509250929050565b613b2881613aae565b82525050565b5f602082019050613b415f830184613b1f565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112613b6857613b67613b47565b5b8235905067ffffffffffffffff811115613b8557613b84613b4b565b5b602083019150836020820283011115613ba157613ba0613b4f565b5b9250929050565b5f805f60408486031215613bbf57613bbe613a73565b5b5f613bcc86828701613a9a565b935050602084013567ffffffffffffffff811115613bed57613bec613a77565b5b613bf986828701613b53565b92509250509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60ff82169050919050565b5f613c7582613c5f565b915060ff8203613c8857613c87613c32565b5b600182019050919050565b5f613c9d82613aae565b9150613ca883613aae565b9250828203905081811115613cc057613cbf613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f613cfd82613c5f565b9150613d0883613c5f565b9250828201905060ff811115613d2157613d20613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f613d5e82613aae565b9150613d6983613aae565b9250828201905080821115613d8157613d80613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613deb82613aae565b9150613df683613aae565b925082613e0657613e05613db4565b5b828204905092915050565b5f613e1b82613aae565b9150613e2683613aae565b9250828202613e3481613aae565b91508282048414831517613e4b57613e4a613c32565b5b5092915050565b5f613e5c82613c5f565b9150613e6783613c5f565b9250828203905060ff811115613e8057613e7f613c32565b5b92915050565b5f613e9082613c5f565b91505f8203613ea257613ea1613c32565b5b600182039050919050565b5f613eb782613aae565b9150613ec283613aae565b925082613ed257613ed1613db4565b5b82820690509291505056fea26469706673582212201f1b2f2308eff25ef3e1103b5687084e763b761014a325515204e4f43226777a64736f6c63430008170033",
							"opcodes": "PUSH2 0x3F13 PUSH2 0x4E PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH2 0x42 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DEC36E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8E501FC7 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0xA7 DUP4 PUSH0 DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 DUP1 SLOAD SWAP1 POP EQ PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP3 DUP3 SWAP1 POP LT PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x248 JUMPI PUSH0 DUP4 DUP4 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xF5 JUMPI PUSH2 0xF4 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x15 PUSH1 0xFF AND DUP2 LT PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x3A34 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0xFF AND DUP3 SUB PUSH2 0x163 JUMPI DUP5 DUP5 DUP5 PUSH2 0x13C SWAP1 PUSH2 0x3C6B JUMP JUMPDEST SWAP5 POP DUP5 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP DUP1 PUSH2 0x241 SWAP1 PUSH2 0x3C6B JUMP JUMPDEST SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP PUSH0 PUSH2 0x254 DUP5 PUSH0 PUSH2 0x71F JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP2 PUSH1 0xFF AND EQ PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x293 JUMPI PUSH2 0x292 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x2CF JUMPI DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x2E7 JUMPI DUP4 SWAP3 POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x399 JUMPI PUSH0 PUSH2 0x311 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x33B PUSH1 0x2 PUSH2 0x32D PUSH1 0x1 DUP6 PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x38C JUMPI DUP2 SWAP1 POP PUSH2 0x385 PUSH1 0x2 PUSH2 0x377 DUP5 PUSH2 0x369 DUP7 DUP9 PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x342 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH1 0x9 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x545 JUMPI PUSH0 PUSH2 0x3D8 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3F6 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x424 JUMPI PUSH2 0x419 DUP2 DUP4 PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x450 JUMPI PUSH2 0x445 DUP2 DUP4 PUSH2 0x987 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x47C JUMPI PUSH2 0x471 DUP2 DUP4 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x7 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x4A8 JUMPI PUSH2 0x49D DUP2 DUP4 PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x8 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x4F8 JUMPI PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH2 0x4DC DUP6 DUP4 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4C1 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x9 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x53E JUMPI PUSH2 0x533 PUSH8 0xDE0B6B3A7640000 PUSH2 0x525 DUP4 DUP6 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST POP POP PUSH2 0x714 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x5C1 JUMPI PUSH0 PUSH2 0x56F DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x59C JUMPI PUSH2 0x592 DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH2 0x5B7 DUP8 DUP5 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x640 JUMPI PUSH0 PUSH2 0x5EB DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x609 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x627 DUP10 DUP7 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH2 0x634 DUP4 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x713 JUMPI PUSH0 PUSH2 0x66A DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x688 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A6 DUP10 DUP7 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6C4 DUP11 DUP8 PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH5 0x100000000 DUP2 LT PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x6E7 DUP6 DUP6 DUP6 PUSH3 0xF4240 PUSH2 0xD62 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xFF AND PUSH2 0x702 DUP8 DUP5 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 SHR SWAP9 POP POP POP POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x749 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x775 DUP3 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x3CC6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP8 SWAP1 POP PUSH0 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x92B JUMPI PUSH0 DUP2 PUSH1 0xFF AND SUB PUSH2 0x811 JUMPI PUSH1 0x1 DUP3 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND SUB PUSH2 0x849 JUMPI PUSH1 0x1 DUP3 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF AND SUB PUSH2 0x881 JUMPI PUSH1 0x1 DUP3 PUSH2 0x861 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x1 DUP3 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BD JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8D6 DUP11 PUSH1 0x1 DUP5 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP5 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x8EC JUMPI PUSH2 0x8EB PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x906 JUMPI PUSH2 0x905 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP DUP2 SWAP4 POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x7CC JUMP JUMPDEST POP PUSH0 PUSH2 0x937 DUP6 DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x999 JUMPI PUSH2 0x998 PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SUB PUSH2 0x9BD JUMPI PUSH0 SWAP1 POP PUSH2 0x9E7 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 POP DUP2 DUP4 DUP3 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST EQ PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xA59 JUMPI PUSH2 0xA4F DUP7 DUP4 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH2 0x9ED JUMP JUMPDEST ISZERO SWAP3 POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xA PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI POP PUSH1 0xF PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH0 PUSH2 0xA98 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAB6 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xAD4 JUMPI DUP1 DUP3 EQ SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xB PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xAF1 JUMPI DUP1 DUP3 EQ ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xC PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB0D JUMPI DUP1 DUP3 LT SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xD PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB29 JUMPI DUP1 DUP3 GT SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xE PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB46 JUMPI DUP1 DUP3 GT ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xF PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB63 JUMPI DUP1 DUP3 LT ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST POP POP PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x11 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC3A JUMPI PUSH0 PUSH2 0xBA9 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xBEF JUMPI DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH2 0xBDA DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH0 SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x11 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xC34 JUMPI DUP1 ISZERO PUSH2 0xC0F JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xC2A DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH2 0xC64 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC87 DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xCAC DUP8 DUP5 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT ISZERO PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH16 0x80000000000000000000000000000000 DUP7 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 DUP2 LT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD1D DUP2 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xD2D DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP7 DUP4 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH17 0x200000000000000000000000000000000 DUP7 LT PUSH2 0xD80 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0xD8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH16 0x80000000000000000000000000000000 DUP10 PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI PUSH2 0xDD9 DUP2 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xDE9 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x800000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE34 DUP2 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x7F SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE74 JUMP JUMPDEST PUSH0 PUSH2 0xE4C DUP3 PUSH2 0x2643 JUMP JUMPDEST SWAP1 POP PUSH2 0xE6A DUP2 PUSH1 0x7F PUSH2 0xE5E SWAP2 SWAP1 PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0xFF AND DUP4 SWAP1 SHR DUP3 PUSH2 0x32A6 JUMP JUMPDEST DUP2 SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xE94 JUMPI PUSH0 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEAB JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEC2 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xED9 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEF0 JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT PUSH2 0xF11 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xF72 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xF69 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xFD2 JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xFF0 JUMPI POP PUSH1 0x9 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1093 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x101C JUMPI PUSH2 0x101B PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1036 JUMPI PUSH2 0x1035 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x108A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0xA PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x10B1 JUMPI POP PUSH1 0xF PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1154 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1100 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x114B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x10 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI POP PUSH1 0x11 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1213 JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x118A JUMPI PUSH2 0x1189 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x119D JUMPI PUSH2 0x119C PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x11C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x11D3 JUMPI PUSH2 0x11D2 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x120A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x133C JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x126A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12AB JUMPI PUSH2 0x12AA PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x12C8 JUMPI PUSH2 0x12C7 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12E2 JUMPI PUSH2 0x12E1 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH2 0x130F PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1319 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1433 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1394 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BB PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x13DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x142A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1575 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1455 JUMPI PUSH2 0x1454 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1468 JUMPI PUSH2 0x1467 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x148B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14EA JUMPI PUSH2 0x14E9 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x156C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP1 PUSH0 PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 DUP7 LT PUSH2 0x15F6 JUMPI PUSH16 0x40000000000000000000000000000000 DUP5 PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 DUP7 LT PUSH2 0x1665 JUMPI PUSH16 0x20000000000000000000000000000000 DUP5 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 DUP7 LT PUSH2 0x16D4 JUMPI PUSH16 0x10000000000000000000000000000000 DUP5 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x16C7 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 DUP7 LT PUSH2 0x1743 JUMPI PUSH16 0x8000000000000000000000000000000 DUP5 PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x84102B00893F64C705E841D5D4064BD3 DUP7 LT PUSH2 0x17B2 JUMPI PUSH16 0x4000000000000000000000000000000 DUP5 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x84102B00893F64C705E841D5D4064BD3 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x17AF SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x8204055AAEF1C8BD5C3259F4822735A2 DUP7 LT PUSH2 0x1821 JUMPI PUSH16 0x2000000000000000000000000000000 DUP5 PUSH2 0x17E5 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x8204055AAEF1C8BD5C3259F4822735A2 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x181E SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x810100AB00222D861931C15E39B44E99 DUP7 LT PUSH2 0x1890 JUMPI PUSH16 0x1000000000000000000000000000000 DUP5 PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x810100AB00222D861931C15E39B44E99 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x808040155AABBBE9451521693554F733 DUP7 LT PUSH2 0x18FE JUMPI PUSH15 0x800000000000000000000000000000 DUP5 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x808040155AABBBE9451521693554F733 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP7 PUSH2 0x191A SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP4 DUP5 PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 PUSH17 0x100000000000000000000000000000000 PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1982 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1997 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x19B6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x19C0 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A05 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1A2F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A39 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A7E SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E PUSH2 0x1B5B SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1B66 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1B70 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1B7B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1BA4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B PUSH2 0x1BD4 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1BF4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1C13 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 PUSH2 0x1C4D SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C62 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1C6D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1C8C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1CE6 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP DUP4 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 LT PUSH2 0x1D64 JUMPI PUSH0 PUSH2 0x1D36 PUSH16 0x80000000000000000000000000000000 DUP6 PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP5 SWAP1 SHR SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 PUSH1 0xFF AND PUSH2 0x1D60 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP4 GT ISZERO PUSH2 0x1E0A JUMPI PUSH0 PUSH1 0x7F SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1E08 JUMPI PUSH16 0x80000000000000000000000000000000 DUP5 DUP6 PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP4 POP PUSH17 0x100000000000000000000000000000000 DUP5 LT PUSH2 0x1DF7 JUMPI PUSH1 0x1 DUP5 SWAP1 SHR SWAP4 POP PUSH1 0x1 DUP2 PUSH2 0x1DE2 SWAP2 SWAP1 PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP3 PUSH2 0x1DF4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x1E01 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D82 JUMP JUMPDEST POP JUMPDEST PUSH16 0x5B9DE1D10BF4103D647B0955897BA80 PUSH16 0x3F80FE03F80FE03F80FE03F80FE03F8 DUP3 PUSH2 0x1E37 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1E41 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP1 PUSH16 0x10000000000000000000000000000000 DUP6 PUSH2 0x1E6C SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1E8E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x10E1B3BE415A0000 DUP2 PUSH2 0x1EAE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1EB9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x5A0913F6B1E0000 DUP2 PUSH2 0x1EF8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F03 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x168244FDAC78000 DUP2 PUSH2 0x1F42 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F4D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1F6C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0x4807432BC18000 DUP2 PUSH2 0x1F8B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1FBF SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0xC0135DCA04000 DUP2 PUSH2 0x1FD4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1FDF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1FFE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2008 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0x1B707B1CDC000 DUP2 PUSH2 0x201D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2028 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2047 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2051 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH6 0x36E0F639B800 DUP2 PUSH2 0x2065 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2070 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x208F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH6 0x618FEE9F800 DUP2 PUSH2 0x20AD SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x20B8 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x20D7 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0x9C197DCC00 DUP2 PUSH2 0x20F4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x20FF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0xE30DCE400 DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2146 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2165 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x216F SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0x12EBD1300 DUP2 PUSH2 0x2182 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x218D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x21AC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x21B6 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH4 0x17499F00 DUP2 PUSH2 0x21C8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x21D3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x21F2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH4 0x1A9D480 DUP2 PUSH2 0x220E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2219 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2238 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1C6380 DUP2 PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x225E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x227D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2287 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1C638 DUP2 PUSH2 0x2298 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x22A3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x22C2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x22CC SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB8 DUP2 PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x22E7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2306 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2310 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C DUP2 PUSH2 0x2320 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x232B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2354 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 PUSH2 0x2363 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x236E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x238D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2397 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x23A6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x23B1 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 PUSH8 0x21C3677C82B40000 DUP6 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x23E3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH2 0x23ED SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH0 PUSH16 0x10000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2444 JUMPI PUSH17 0x18EBEF9EAC820AE8682B9793AC6D1E776 PUSH17 0x1C3D6A24ED82218787D624D3E5EBA95F9 DUP5 PUSH2 0x2437 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x20000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2499 JUMPI PUSH17 0x1368B2FC6F9609FE7ACEB46AA619BAED4 PUSH17 0x18EBEF9EAC820AE8682B9793AC6D1E778 DUP5 PUSH2 0x248C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2496 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x40000000000000000000000000000000 DUP7 AND EQ PUSH2 0x24ED JUMPI PUSH16 0xBC5AB1B16779BE3575BD8F0520A9F21F PUSH17 0x1368B2FC6F9609FE7ACEB46AA619BAED5 DUP5 PUSH2 0x24E0 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x24EA SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x80000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2540 JUMPI PUSH16 0x454AAA8EFE072E7F6DDBAB84B40A55C9 PUSH16 0xBC5AB1B16779BE3575BD8F0520A9F21E DUP5 PUSH2 0x2533 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x253D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2594 JUMPI PUSH16 0x960AADC109E7A3BF4578099615711EA PUSH16 0x454AAA8EFE072E7F6DDBAB84B40A55C5 DUP5 PUSH2 0x2587 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2591 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x200000000000000000000000000000000 DUP7 AND EQ PUSH2 0x25E7 JUMPI PUSH15 0x2BF84208204F5977F9A8CF01FDCE3D PUSH16 0x960AADC109E7A3BF4578099615711D7 DUP5 PUSH2 0x25DA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x25E4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x400000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2638 JUMPI PUSH14 0x3C6AB775DD0B95B4CBEE7E65D11 PUSH15 0x2BF84208204F5977F9A8CF01FDC307 DUP5 PUSH2 0x262B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2635 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH17 0x1C35FEDD14FFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2665 JUMPI PUSH1 0x20 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1B0CE43B323FFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2686 JUMPI PUSH1 0x21 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x19F0028EC1FFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26A7 JUMPI PUSH1 0x22 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x18DED91F0E7FFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26C8 JUMPI PUSH1 0x23 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x17D8EC7F0417FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26E9 JUMPI PUSH1 0x24 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x16DDC6556CDBFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x270A JUMPI PUSH1 0x25 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15ECF52776A1FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x272B JUMPI PUSH1 0x26 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15060C256CB2FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x274C JUMPI PUSH1 0x27 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1428A2F98D72FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x276D JUMPI PUSH1 0x28 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x13545598E5C23FFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x278E JUMPI PUSH1 0x29 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1288C4161CE1DFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27AF JUMPI PUSH1 0x2A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x11C592761C666FFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27D0 JUMPI PUSH1 0x2B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x110A688680A757FFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27F1 JUMPI PUSH1 0x2C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1056F1B5BEDF77FFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2812 JUMPI PUSH1 0x2D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xFAADCECEEFF8BFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2833 JUMPI PUSH1 0x2E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xF05DC6B27EDADFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2854 JUMPI PUSH1 0x2F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xE67A5A25DA4107FFFFFFFFFFFFFFFFFFF LT PUSH2 0x2875 JUMPI PUSH1 0x30 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xDCFF115B14EEDFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2896 JUMPI PUSH1 0x31 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xD3E7A392431239FFFFFFFFFFFFFFFFFFF LT PUSH2 0x28B7 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xCB2FF529EB71E4FFFFFFFFFFFFFFFFFFF LT PUSH2 0x28D8 JUMPI PUSH1 0x33 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xC2D415C3DB974AFFFFFFFFFFFFFFFFFFF LT PUSH2 0x28F9 JUMPI PUSH1 0x34 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xBAD03E7D883F69BFFFFFFFFFFFFFFFFFF LT PUSH2 0x291A JUMPI PUSH1 0x35 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xB320D03B2C343D5FFFFFFFFFFFFFFFFFF LT PUSH2 0x293B JUMPI PUSH1 0x36 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xABC25204E02828DFFFFFFFFFFFFFFFFFF LT PUSH2 0x295C JUMPI PUSH1 0x37 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xA4B16F74EE4BB207FFFFFFFFFFFFFFFFF LT PUSH2 0x297D JUMPI PUSH1 0x38 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x9DEAF736AC1F569FFFFFFFFFFFFFFFFFF LT PUSH2 0x299E JUMPI PUSH1 0x39 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x976BD9952C7AA957FFFFFFFFFFFFFFFFF LT PUSH2 0x29BF JUMPI PUSH1 0x3A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x9131271922EAA606FFFFFFFFFFFFFFFFF LT PUSH2 0x29E0 JUMPI PUSH1 0x3B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x8B380F3558668C46FFFFFFFFFFFFFFFFF LT PUSH2 0x2A01 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x857DDF0117EFA215BFFFFFFFFFFFFFFFF LT PUSH2 0x2A22 JUMPI PUSH1 0x3D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2A43 JUMPI PUSH1 0x3E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x7ABBF6F6ABB9D087FFFFFFFFFFFFFFFFF LT PUSH2 0x2A64 JUMPI PUSH1 0x3F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x75AF62CBAC95F7DFA7FFFFFFFFFFFFFFF LT PUSH2 0x2A85 JUMPI PUSH1 0x40 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x70D7FB7452E187AC13FFFFFFFFFFFFFFF LT PUSH2 0x2AA6 JUMPI PUSH1 0x41 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x6C3390ECC8AF379295FFFFFFFFFFFFFFF LT PUSH2 0x2AC7 JUMPI PUSH1 0x42 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x67C00A3B07FFC01FD6FFFFFFFFFFFFFFF LT PUSH2 0x2AE8 JUMPI PUSH1 0x43 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x637B647C39CBB9D3D27FFFFFFFFFFFFFF LT PUSH2 0x2B09 JUMPI PUSH1 0x44 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x5F63B1FC104DBD39587FFFFFFFFFFFFFF LT PUSH2 0x2B2A JUMPI PUSH1 0x45 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x5B771955B36E12F7235FFFFFFFFFFFFFF LT PUSH2 0x2B4B JUMPI PUSH1 0x46 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x57B3D49DDA84556D6F6FFFFFFFFFFFFFF LT PUSH2 0x2B6C JUMPI PUSH1 0x47 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x54183095B2C8ECECF30FFFFFFFFFFFFFF LT PUSH2 0x2B8D JUMPI PUSH1 0x48 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x50A28BE635CA2B888F77FFFFFFFFFFFFF LT PUSH2 0x2BAE JUMPI PUSH1 0x49 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4D5156639708C9DB33C3FFFFFFFFFFFFF LT PUSH2 0x2BCF JUMPI PUSH1 0x4A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4A23105873875BD52DFDFFFFFFFFFFFFF LT PUSH2 0x2BF0 JUMPI PUSH1 0x4B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x471649D87199AA990756FFFFFFFFFFFFF LT PUSH2 0x2C11 JUMPI PUSH1 0x4C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4429A21A029D4C1457CFBFFFFFFFFFFFF LT PUSH2 0x2C32 JUMPI PUSH1 0x4D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x415BC6D6FB7DD71AF2CB3FFFFFFFFFFFF LT PUSH2 0x2C53 JUMPI PUSH1 0x4E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x3EAB73B3BBFE282243CE1FFFFFFFFFFFF LT PUSH2 0x2C74 JUMPI PUSH1 0x4F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x3C1771AC9FB6B4C18E229FFFFFFFFFFFF LT PUSH2 0x2C95 JUMPI PUSH1 0x50 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x399E96897690418F785257FFFFFFFFFFF LT PUSH2 0x2CB6 JUMPI PUSH1 0x51 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x373FC456C53BB779BF0EA9FFFFFFFFFFF LT PUSH2 0x2CD7 JUMPI PUSH1 0x52 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x34F9E8E490C48E67E6AB8BFFFFFFFFFFF LT PUSH2 0x2CF8 JUMPI PUSH1 0x53 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x32CBFD4A7ADC790560B3337FFFFFFFFFF LT PUSH2 0x2D19 JUMPI PUSH1 0x54 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x30B50570F6E5D2ACCA94613FFFFFFFFFF LT PUSH2 0x2D3A JUMPI PUSH1 0x55 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2EB40F9F620FDA6B56C2861FFFFFFFFFF LT PUSH2 0x2D5B JUMPI PUSH1 0x56 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2CC8340ECB0D0F520A6AF58FFFFFFFFFF LT PUSH2 0x2D7C JUMPI PUSH1 0x57 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2AF09481380A0A35CF1BA02FFFFFFFFFF LT PUSH2 0x2D9D JUMPI PUSH1 0x58 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x292C5BDD3B92EC810287B1B3FFFFFFFFF LT PUSH2 0x2DBE JUMPI PUSH1 0x59 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x277ABDCDAB07D5A77AC6D6B9FFFFFFFFF LT PUSH2 0x2DDF JUMPI PUSH1 0x5A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x25DAF6654B1EAA55FD64DF5EFFFFFFFFF LT PUSH2 0x2E00 JUMPI PUSH1 0x5B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x244C49C648BAA98192DCE88B7FFFFFFFF LT PUSH2 0x2E21 JUMPI PUSH1 0x5C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x22CE03CD5619A311B2471268BFFFFFFFF LT PUSH2 0x2E42 JUMPI PUSH1 0x5D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x215F77C045FBE885654A44A0FFFFFFFFF LT PUSH2 0x2E63 JUMPI PUSH1 0x5E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2E84 JUMPI PUSH1 0x5F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1EAEFDBDAAEE7421FC4D3EDE5FFFFFFFF LT PUSH2 0x2EA5 JUMPI PUSH1 0x60 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1D6BD8B2EB257DF7E8CA57B09BFFFFFFF LT PUSH2 0x2EC6 JUMPI PUSH1 0x61 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1C35FEDD14B861EB0443F7F133FFFFFFF LT PUSH2 0x2EE7 JUMPI PUSH1 0x62 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1B0CE43B322BCDE4A56E8ADA5AFFFFFFF LT PUSH2 0x2F08 JUMPI PUSH1 0x63 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x19F0028EC1FFF007F5A195A39DFFFFFFF LT PUSH2 0x2F29 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x18DED91F0E72EE74F49B15BA527FFFFFF LT PUSH2 0x2F4A JUMPI PUSH1 0x65 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x17D8EC7F04136F4E5615FD41A63FFFFFF LT PUSH2 0x2F6B JUMPI PUSH1 0x66 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x16DDC6556CDB84BDC8D12D22E6FFFFFFF LT PUSH2 0x2F8C JUMPI PUSH1 0x67 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15ECF52776A1155B5BD8395814F7FFFFF LT PUSH2 0x2FAD JUMPI PUSH1 0x68 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15060C256CB23B3B3CC3754CF40FFFFFF LT PUSH2 0x2FCE JUMPI PUSH1 0x69 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1428A2F98D728AE223DDAB715BE3FFFFF LT PUSH2 0x2FEF JUMPI PUSH1 0x6A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x13545598E5C23276CCF0EDE68034FFFFF LT PUSH2 0x3010 JUMPI PUSH1 0x6B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1288C4161CE1D6F54B7F61081194FFFFF LT PUSH2 0x3031 JUMPI PUSH1 0x6C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x11C592761C666AA641D5A01A40F17FFFF LT PUSH2 0x3052 JUMPI PUSH1 0x6D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x110A688680A7530515F3E6E6CFDCDFFFF LT PUSH2 0x3073 JUMPI PUSH1 0x6E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1056F1B5BEDF75C6BCB2CE8AED428FFFF LT PUSH2 0x3094 JUMPI PUSH1 0x6F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xFAADCECEEFF8A0890F3875F008277FFF LT PUSH2 0x30B4 JUMPI PUSH1 0x70 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xF05DC6B27EDAD306388A600F6BA0BFFF LT PUSH2 0x30D4 JUMPI PUSH1 0x71 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xE67A5A25DA41063DE1495D5B18CDBFFF LT PUSH2 0x30F4 JUMPI PUSH1 0x72 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xDCFF115B14EEDDE6FC3AA5353F2E4FFF LT PUSH2 0x3114 JUMPI PUSH1 0x73 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xD3E7A3924312399F9AAE2E0F868F8FFF LT PUSH2 0x3134 JUMPI PUSH1 0x74 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xCB2FF529EB71E41582CCCD5A1EE26FFF LT PUSH2 0x3154 JUMPI PUSH1 0x75 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xC2D415C3DB974AB32A51840C0B67EDFF LT PUSH2 0x3174 JUMPI PUSH1 0x76 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xBAD03E7D883F69AD5B0A186184E06BFF LT PUSH2 0x3194 JUMPI PUSH1 0x77 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xB320D03B2C343D4829ABD6075F0CC5FF LT PUSH2 0x31B4 JUMPI PUSH1 0x78 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xABC25204E02828D73C6E80BCDB1A95BF LT PUSH2 0x31D4 JUMPI PUSH1 0x79 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xA4B16F74EE4BB2040A1EC6C15FBBF2DF LT PUSH2 0x31F4 JUMPI PUSH1 0x7A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x9DEAF736AC1F569DEB1B5AE3F36C130F LT PUSH2 0x3214 JUMPI PUSH1 0x7B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x976BD9952C7AA957F5937D790EF65037 LT PUSH2 0x3234 JUMPI PUSH1 0x7C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x9131271922EAA6064B73A22D0BD4F2BF LT PUSH2 0x3254 JUMPI PUSH1 0x7D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x8B380F3558668C46C91C49A2F8E967B9 LT PUSH2 0x3274 JUMPI PUSH1 0x7E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x857DDF0117EFA215952912839F6473E6 LT PUSH2 0x3294 JUMPI PUSH1 0x7F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST PUSH0 PUSH2 0x329D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SWAP1 POP PUSH0 DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x32BC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH16 0x3442C4E6074A82F1797F72AC0000000 DUP3 PUSH2 0x32DC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x32E7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x32F9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH16 0x116B96F757C380FB287FD0E40000000 DUP3 PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3324 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3336 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0x45AE5BDD5F0E03ECA1FF4390000000 DUP3 PUSH2 0x3355 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3360 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3372 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0xDEFABF91302CD95B9FFDA50000000 DUP3 PUSH2 0x3391 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x339C SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x33AE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0x2529CA9832B22439EFFF9B8000000 DUP3 PUSH2 0x33CD SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x33D8 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x33EA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0x54F1CF12BD04E516B6DA88000000 DUP3 PUSH2 0x3408 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3413 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3425 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0xA9E39E257A09CA2D6DB51000000 DUP3 PUSH2 0x3443 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x344E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3460 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0x12E066E7B839FA050C309000000 DUP3 PUSH2 0x347E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3489 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x349B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH13 0x1E33D7D926C329A1AD1A800000 DUP3 PUSH2 0x34B8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x34C3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x34D5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH13 0x2BEE513BDB4A6B19B5F800000 DUP3 PUSH2 0x34F2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x34FD SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x350F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH12 0x3A9316FA79B88ECCF2A00000 DUP3 PUSH2 0x352B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3536 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3548 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH12 0x48177EBE1FA812375200000 DUP3 PUSH2 0x3564 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x356F SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3581 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH11 0x5263FE90242DCBACF00000 DUP3 PUSH2 0x359C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x35A7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x35B9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH11 0x57E22099C030D94100000 DUP3 PUSH2 0x35D4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x35DF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x35F1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH10 0x57E22099C030D9410000 DUP3 PUSH2 0x360B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3616 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3628 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH10 0x52B6B54569976310000 DUP3 PUSH2 0x3642 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x364D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x365F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH9 0x4985F67696BF748000 DUP3 PUSH2 0x3678 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3683 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3695 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH9 0x3DEA12EA99E498000 DUP3 PUSH2 0x36AE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x36B9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x36CB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH8 0x31880F2214B6E000 DUP3 PUSH2 0x36E3 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x36EE SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3700 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH8 0x25BCFF56EB36000 DUP3 PUSH2 0x3718 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3723 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3735 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH7 0x1B722E10AB1000 DUP3 PUSH2 0x374C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3757 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3769 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH7 0x1317C70077000 DUP3 PUSH2 0x3780 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x378B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH6 0xCBA84AAFA00 DUP3 PUSH2 0x37B3 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x37BE SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x37D0 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH5 0x82573A0A00 DUP3 PUSH2 0x37E5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x37F0 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3802 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH5 0x5035AD900 DUP3 PUSH2 0x3817 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3822 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3834 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH4 0x2F881B00 DUP3 PUSH2 0x3848 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3853 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3865 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH4 0x1B29340 DUP3 PUSH2 0x3879 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3884 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3896 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH3 0xEFC40 DUP3 PUSH2 0x38A9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x38B4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x38C6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH2 0x7FE0 DUP3 PUSH2 0x38D8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x38E3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x38F5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH2 0x420 DUP3 PUSH2 0x3907 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3912 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3924 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH1 0x21 DUP3 PUSH2 0x3935 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3940 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3952 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0x3963 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP6 PUSH16 0x688589CC0E9505E2F2FEE5580000000 DUP4 PUSH2 0x3995 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x399F SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH2 0x39A9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH2 0x100 DUP4 LT ISZERO PUSH2 0x39EC JUMPI JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH2 0x39E7 JUMPI PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x1 DUP2 PUSH2 0x39E0 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x39C3 JUMP JUMPDEST PUSH2 0x3A2B JUMP JUMPDEST PUSH0 PUSH1 0x80 SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x3A29 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP5 LT PUSH2 0x3A1A JUMPI DUP1 PUSH1 0xFF AND DUP5 SWAP1 SHR SWAP4 POP DUP1 DUP3 OR SWAP2 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND SWAP1 SHR SWAP1 POP PUSH2 0x39F2 JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8D DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AA8 DUP2 PUSH2 0x3A84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC0 DUP2 PUSH2 0x3AAE JUMP JUMPDEST DUP2 EQ PUSH2 0x3ACA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3ADB DUP2 PUSH2 0x3AB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AF7 JUMPI PUSH2 0x3AF6 PUSH2 0x3A73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B04 DUP6 DUP3 DUP7 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B15 DUP6 DUP3 DUP7 ADD PUSH2 0x3ACD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B28 DUP2 PUSH2 0x3AAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B41 PUSH0 DUP4 ADD DUP5 PUSH2 0x3B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3B68 JUMPI PUSH2 0x3B67 PUSH2 0x3B47 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B85 JUMPI PUSH2 0x3B84 PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3BA1 JUMPI PUSH2 0x3BA0 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BBF JUMPI PUSH2 0x3BBE PUSH2 0x3A73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BCC DUP7 DUP3 DUP8 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BED JUMPI PUSH2 0x3BEC PUSH2 0x3A77 JUMP JUMPDEST JUMPDEST PUSH2 0x3BF9 DUP7 DUP3 DUP8 ADD PUSH2 0x3B53 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3C75 DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x3C88 JUMPI PUSH2 0x3C87 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3C9D DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA8 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3CC0 JUMPI PUSH2 0x3CBF PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3CFD DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D08 DUP4 PUSH2 0x3C5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3D21 JUMPI PUSH2 0x3D20 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3D5E DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3D69 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D81 JUMPI PUSH2 0x3D80 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3DEB DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3DF6 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3E06 JUMPI PUSH2 0x3E05 PUSH2 0x3DB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E1B DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3E26 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3E34 DUP2 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3E4B JUMPI PUSH2 0x3E4A PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E5C DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH2 0x3E67 DUP4 PUSH2 0x3C5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3E80 JUMPI PUSH2 0x3E7F PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E90 DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x3EA2 JUMPI PUSH2 0x3EA1 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3EB7 DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC2 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3ED2 JUMPI PUSH2 0x3ED1 PUSH2 0x3DB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SHL 0x2F 0x23 ADDMOD 0xEF CALLCODE 0x5E RETURN 0xE1 LT EXTCODESIZE JUMP DUP8 ADDMOD 0x4E PUSH23 0x3B761014A325515204E4F43226777A64736F6C63430008 OR STOP CALLER ",
							"sourceMap": "153:13340:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_3496": {
									"entryPoint": 2380,
									"id": 3496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculate_2387": {
									"entryPoint": 155,
									"id": 2387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkExprType_2699": {
									"entryPoint": 3833,
									"id": 2699,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_3450": {
									"entryPoint": 2418,
									"id": 3450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@findPositionInMaxExpArray_936": {
									"entryPoint": 9795,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@floorLog2_345": {
									"entryPoint": 14771,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@generalExp_1446": {
									"entryPoint": 12966,
									"id": 1446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@generalLog_282": {
									"entryPoint": 7412,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getChildrenCount_2434": {
									"entryPoint": 3709,
									"id": 2434,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@init_2368": {
									"entryPoint": 175,
									"id": 2368,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@log_196": {
									"entryPoint": 3267,
									"id": 196,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mul_3435": {
									"entryPoint": 2477,
									"id": 3435,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@optimalExp_2176": {
									"entryPoint": 7753,
									"id": 2176,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@optimalLog_1766": {
									"entryPoint": 5503,
									"id": 1766,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@populateTree_2844": {
									"entryPoint": 1823,
									"id": 2844,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@power_141": {
									"entryPoint": 3426,
									"id": 141,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@solveBool_3397": {
									"entryPoint": 2541,
									"id": 3397,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@solveMath_3194": {
									"entryPoint": 635,
									"id": 3194,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sub_3471": {
									"entryPoint": 2439,
									"id": 3471,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr": {
									"entryPoint": 15002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 15187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 15053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 15272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_uint256": {
									"entryPoint": 15073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 15135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 15150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 15700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 15603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 15841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 15889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 15507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 15954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr": {
									"entryPoint": 14971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 15022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 15455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint8": {
									"entryPoint": 16006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 15467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 16045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 15751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 15410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 15796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 15655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 15365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 15558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 15179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 15175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 15183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 14967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 14963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr": {
									"entryPoint": 14980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 15031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7105:3",
										"nodeType": "YulBlock",
										"src": "0:7105:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "424:32:3",
													"nodeType": "YulBlock",
													"src": "424:32:3",
													"statements": [
														{
															"nativeSrc": "434:16:3",
															"nodeType": "YulAssignment",
															"src": "434:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "445:5:3",
																"nodeType": "YulIdentifier",
																"src": "445:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "434:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "434:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
												"nativeSrc": "334:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "406:5:3",
														"nodeType": "YulTypedName",
														"src": "406:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "416:7:3",
														"nodeType": "YulTypedName",
														"src": "416:7:3",
														"type": ""
													}
												],
												"src": "334:122:3"
											},
											{
												"body": {
													"nativeSrc": "550:124:3",
													"nodeType": "YulBlock",
													"src": "550:124:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "652:16:3",
																"nodeType": "YulBlock",
																"src": "652:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "661:1:3",
																					"nodeType": "YulLiteral",
																					"src": "661:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "664:1:3",
																					"nodeType": "YulLiteral",
																					"src": "664:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "654:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:3"
																			},
																			"nativeSrc": "654:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "654:12:3"
																		},
																		"nativeSrc": "654:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "654:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "573:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "573:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "643:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "643:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																					"nativeSrc": "580:62:3",
																					"nodeType": "YulIdentifier",
																					"src": "580:62:3"
																				},
																				"nativeSrc": "580:69:3",
																				"nodeType": "YulFunctionCall",
																				"src": "580:69:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "570:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "570:2:3"
																		},
																		"nativeSrc": "570:80:3",
																		"nodeType": "YulFunctionCall",
																		"src": "570:80:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "563:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:3"
																},
																"nativeSrc": "563:88:3",
																"nodeType": "YulFunctionCall",
																"src": "563:88:3"
															},
															"nativeSrc": "560:108:3",
															"nodeType": "YulIf",
															"src": "560:108:3"
														}
													]
												},
												"name": "validator_revert_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
												"nativeSrc": "462:212:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "543:5:3",
														"nodeType": "YulTypedName",
														"src": "543:5:3",
														"type": ""
													}
												],
												"src": "462:212:3"
											},
											{
												"body": {
													"nativeSrc": "777:132:3",
													"nodeType": "YulBlock",
													"src": "777:132:3",
													"statements": [
														{
															"nativeSrc": "787:29:3",
															"nodeType": "YulAssignment",
															"src": "787:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "809:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "809:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "796:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:12:3"
																},
																"nativeSrc": "796:20:3",
																"nodeType": "YulFunctionCall",
																"src": "796:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "787:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "787:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "897:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "897:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																	"nativeSrc": "825:71:3",
																	"nodeType": "YulIdentifier",
																	"src": "825:71:3"
																},
																"nativeSrc": "825:78:3",
																"nodeType": "YulFunctionCall",
																"src": "825:78:3"
															},
															"nativeSrc": "825:78:3",
															"nodeType": "YulExpressionStatement",
															"src": "825:78:3"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
												"nativeSrc": "680:229:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "755:6:3",
														"nodeType": "YulTypedName",
														"src": "755:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "763:3:3",
														"nodeType": "YulTypedName",
														"src": "763:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "771:5:3",
														"nodeType": "YulTypedName",
														"src": "771:5:3",
														"type": ""
													}
												],
												"src": "680:229:3"
											},
											{
												"body": {
													"nativeSrc": "960:32:3",
													"nodeType": "YulBlock",
													"src": "960:32:3",
													"statements": [
														{
															"nativeSrc": "970:16:3",
															"nodeType": "YulAssignment",
															"src": "970:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "981:5:3",
																"nodeType": "YulIdentifier",
																"src": "981:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "970:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "970:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "915:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "942:5:3",
														"nodeType": "YulTypedName",
														"src": "942:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "952:7:3",
														"nodeType": "YulTypedName",
														"src": "952:7:3",
														"type": ""
													}
												],
												"src": "915:77:3"
											},
											{
												"body": {
													"nativeSrc": "1041:79:3",
													"nodeType": "YulBlock",
													"src": "1041:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1098:16:3",
																"nodeType": "YulBlock",
																"src": "1098:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1107:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1107:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1110:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1110:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1100:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1100:6:3"
																			},
																			"nativeSrc": "1100:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1100:12:3"
																		},
																		"nativeSrc": "1100:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1100:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1064:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1064:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1089:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1089:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1071:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1071:17:3"
																				},
																				"nativeSrc": "1071:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1071:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1061:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1061:2:3"
																		},
																		"nativeSrc": "1061:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1061:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:3"
																},
																"nativeSrc": "1054:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1054:43:3"
															},
															"nativeSrc": "1051:63:3",
															"nodeType": "YulIf",
															"src": "1051:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "998:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1034:5:3",
														"nodeType": "YulTypedName",
														"src": "1034:5:3",
														"type": ""
													}
												],
												"src": "998:122:3"
											},
											{
												"body": {
													"nativeSrc": "1178:87:3",
													"nodeType": "YulBlock",
													"src": "1178:87:3",
													"statements": [
														{
															"nativeSrc": "1188:29:3",
															"nodeType": "YulAssignment",
															"src": "1188:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1210:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1197:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:3"
																},
																"nativeSrc": "1197:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1197:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1188:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1253:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1253:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1226:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1226:26:3"
																},
																"nativeSrc": "1226:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1226:33:3"
															},
															"nativeSrc": "1226:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1226:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1126:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1156:6:3",
														"nodeType": "YulTypedName",
														"src": "1156:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1164:3:3",
														"nodeType": "YulTypedName",
														"src": "1164:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1172:5:3",
														"nodeType": "YulTypedName",
														"src": "1172:5:3",
														"type": ""
													}
												],
												"src": "1126:139:3"
											},
											{
												"body": {
													"nativeSrc": "1399:436:3",
													"nodeType": "YulBlock",
													"src": "1399:436:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1445:83:3",
																"nodeType": "YulBlock",
																"src": "1445:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1447:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1447:77:3"
																			},
																			"nativeSrc": "1447:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1447:79:3"
																		},
																		"nativeSrc": "1447:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1447:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1420:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1420:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1429:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1429:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1416:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:3"
																		},
																		"nativeSrc": "1416:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1416:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1441:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1441:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1412:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:3"
																},
																"nativeSrc": "1412:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1412:32:3"
															},
															"nativeSrc": "1409:119:3",
															"nodeType": "YulIf",
															"src": "1409:119:3"
														},
														{
															"nativeSrc": "1538:162:3",
															"nodeType": "YulBlock",
															"src": "1538:162:3",
															"statements": [
																{
																	"nativeSrc": "1553:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1553:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1567:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1567:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1557:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1557:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1582:108:3",
																	"nodeType": "YulAssignment",
																	"src": "1582:108:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1662:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1662:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1673:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1673:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1658:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1658:3:3"
																				},
																				"nativeSrc": "1658:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1658:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1682:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1682:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																			"nativeSrc": "1592:65:3",
																			"nodeType": "YulIdentifier",
																			"src": "1592:65:3"
																		},
																		"nativeSrc": "1592:98:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1592:98:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1582:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1582:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1710:118:3",
															"nodeType": "YulBlock",
															"src": "1710:118:3",
															"statements": [
																{
																	"nativeSrc": "1725:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1725:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1739:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1739:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1729:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1729:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1755:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1755:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1790:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1790:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1801:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1801:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1786:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1786:3:3"
																				},
																				"nativeSrc": "1786:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1786:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1810:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1810:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1765:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1765:20:3"
																		},
																		"nativeSrc": "1765:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1765:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1755:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_uint256",
												"nativeSrc": "1271:564:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1361:9:3",
														"nodeType": "YulTypedName",
														"src": "1361:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1372:7:3",
														"nodeType": "YulTypedName",
														"src": "1372:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1384:6:3",
														"nodeType": "YulTypedName",
														"src": "1384:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1392:6:3",
														"nodeType": "YulTypedName",
														"src": "1392:6:3",
														"type": ""
													}
												],
												"src": "1271:564:3"
											},
											{
												"body": {
													"nativeSrc": "1914:53:3",
													"nodeType": "YulBlock",
													"src": "1914:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1931:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1931:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1954:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1954:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1936:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1936:17:3"
																		},
																		"nativeSrc": "1936:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:3"
																},
																"nativeSrc": "1924:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1924:37:3"
															},
															"nativeSrc": "1924:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1924:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nativeSrc": "1841:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1902:5:3",
														"nodeType": "YulTypedName",
														"src": "1902:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1909:3:3",
														"nodeType": "YulTypedName",
														"src": "1909:3:3",
														"type": ""
													}
												],
												"src": "1841:126:3"
											},
											{
												"body": {
													"nativeSrc": "2079:132:3",
													"nodeType": "YulBlock",
													"src": "2079:132:3",
													"statements": [
														{
															"nativeSrc": "2089:26:3",
															"nodeType": "YulAssignment",
															"src": "2089:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2101:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2112:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2112:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2097:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:3:3"
																},
																"nativeSrc": "2097:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2097:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2089:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2089:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2177:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2201:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2201:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2186:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:3"
																		},
																		"nativeSrc": "2186:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2186:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "2125:51:3",
																	"nodeType": "YulIdentifier",
																	"src": "2125:51:3"
																},
																"nativeSrc": "2125:79:3",
																"nodeType": "YulFunctionCall",
																"src": "2125:79:3"
															},
															"nativeSrc": "2125:79:3",
															"nodeType": "YulExpressionStatement",
															"src": "2125:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "1973:238:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2051:9:3",
														"nodeType": "YulTypedName",
														"src": "2051:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2063:6:3",
														"nodeType": "YulTypedName",
														"src": "2063:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2074:4:3",
														"nodeType": "YulTypedName",
														"src": "2074:4:3",
														"type": ""
													}
												],
												"src": "1973:238:3"
											},
											{
												"body": {
													"nativeSrc": "2306:28:3",
													"nodeType": "YulBlock",
													"src": "2306:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2326:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2326:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2316:6:3"
																},
																"nativeSrc": "2316:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2316:12:3"
															},
															"nativeSrc": "2316:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "2316:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2217:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2217:117:3"
											},
											{
												"body": {
													"nativeSrc": "2429:28:3",
													"nodeType": "YulBlock",
													"src": "2429:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2446:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2446:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2449:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2439:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:3"
																},
																"nativeSrc": "2439:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2439:12:3"
															},
															"nativeSrc": "2439:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "2439:12:3"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2340:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2340:117:3"
											},
											{
												"body": {
													"nativeSrc": "2552:28:3",
													"nodeType": "YulBlock",
													"src": "2552:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2569:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2569:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2562:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:3"
																},
																"nativeSrc": "2562:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2562:12:3"
															},
															"nativeSrc": "2562:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "2562:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2463:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2463:117:3"
											},
											{
												"body": {
													"nativeSrc": "2693:478:3",
													"nodeType": "YulBlock",
													"src": "2693:478:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2742:83:3",
																"nodeType": "YulBlock",
																"src": "2742:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2744:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2744:77:3"
																			},
																			"nativeSrc": "2744:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:79:3"
																		},
																		"nativeSrc": "2744:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2721:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2721:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2729:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2729:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2717:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2717:3:3"
																				},
																				"nativeSrc": "2717:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2717:17:3"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2736:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2713:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:3"
																		},
																		"nativeSrc": "2713:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2706:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:3"
																},
																"nativeSrc": "2706:35:3",
																"nodeType": "YulFunctionCall",
																"src": "2706:35:3"
															},
															"nativeSrc": "2703:122:3",
															"nodeType": "YulIf",
															"src": "2703:122:3"
														},
														{
															"nativeSrc": "2834:30:3",
															"nodeType": "YulAssignment",
															"src": "2834:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2857:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2857:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2844:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2844:12:3"
																},
																"nativeSrc": "2844:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2844:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2834:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2907:83:3",
																"nodeType": "YulBlock",
																"src": "2907:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2909:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2909:77:3"
																			},
																			"nativeSrc": "2909:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:79:3"
																		},
																		"nativeSrc": "2909:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2909:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2879:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:18:3",
																		"nodeType": "YulLiteral",
																		"src": "2887:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2876:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2876:2:3"
																},
																"nativeSrc": "2876:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2876:30:3"
															},
															"nativeSrc": "2873:117:3",
															"nodeType": "YulIf",
															"src": "2873:117:3"
														},
														{
															"nativeSrc": "2999:29:3",
															"nodeType": "YulAssignment",
															"src": "2999:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3015:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3015:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3023:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3023:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3011:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3011:3:3"
																},
																"nativeSrc": "3011:17:3",
																"nodeType": "YulFunctionCall",
																"src": "3011:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2999:8:3",
																	"nodeType": "YulIdentifier",
																	"src": "2999:8:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3082:83:3",
																"nodeType": "YulBlock",
																"src": "3082:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3084:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3084:77:3"
																			},
																			"nativeSrc": "3084:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3084:79:3"
																		},
																		"nativeSrc": "3084:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3084:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3047:8:3",
																				"nodeType": "YulIdentifier",
																				"src": "3047:8:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3061:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3061:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3069:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3069:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3057:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3057:3:3"
																				},
																				"nativeSrc": "3057:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3057:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3043:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:3"
																		},
																		"nativeSrc": "3043:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:32:3"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3077:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3077:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3040:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3040:2:3"
																},
																"nativeSrc": "3040:41:3",
																"nodeType": "YulFunctionCall",
																"src": "3040:41:3"
															},
															"nativeSrc": "3037:128:3",
															"nodeType": "YulIf",
															"src": "3037:128:3"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2603:568:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2660:6:3",
														"nodeType": "YulTypedName",
														"src": "2660:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2668:3:3",
														"nodeType": "YulTypedName",
														"src": "2668:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2676:8:3",
														"nodeType": "YulTypedName",
														"src": "2676:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2686:6:3",
														"nodeType": "YulTypedName",
														"src": "2686:6:3",
														"type": ""
													}
												],
												"src": "2603:568:3"
											},
											{
												"body": {
													"nativeSrc": "3340:631:3",
													"nodeType": "YulBlock",
													"src": "3340:631:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3386:83:3",
																"nodeType": "YulBlock",
																"src": "3386:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3388:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3388:77:3"
																			},
																			"nativeSrc": "3388:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3388:79:3"
																		},
																		"nativeSrc": "3388:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3388:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3361:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3370:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3357:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:3"
																		},
																		"nativeSrc": "3357:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3382:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3353:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:3"
																},
																"nativeSrc": "3353:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3353:32:3"
															},
															"nativeSrc": "3350:119:3",
															"nodeType": "YulIf",
															"src": "3350:119:3"
														},
														{
															"nativeSrc": "3479:162:3",
															"nodeType": "YulBlock",
															"src": "3479:162:3",
															"statements": [
																{
																	"nativeSrc": "3494:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3494:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3508:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3498:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3498:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3523:108:3",
																	"nodeType": "YulAssignment",
																	"src": "3523:108:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3603:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3603:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3614:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3614:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3599:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3599:3:3"
																				},
																				"nativeSrc": "3599:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3599:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3623:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3623:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																			"nativeSrc": "3533:65:3",
																			"nodeType": "YulIdentifier",
																			"src": "3533:65:3"
																		},
																		"nativeSrc": "3533:98:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:98:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3523:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3523:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3651:313:3",
															"nodeType": "YulBlock",
															"src": "3651:313:3",
															"statements": [
																{
																	"nativeSrc": "3666:46:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3697:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3697:9:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3708:2:3",
																						"nodeType": "YulLiteral",
																						"src": "3708:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3693:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3693:3:3"
																				},
																				"nativeSrc": "3693:18:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3693:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3680:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "3680:12:3"
																		},
																		"nativeSrc": "3680:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3670:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3759:83:3",
																		"nodeType": "YulBlock",
																		"src": "3759:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3761:77:3",
																						"nodeType": "YulIdentifier",
																						"src": "3761:77:3"
																					},
																					"nativeSrc": "3761:79:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3761:79:3"
																				},
																				"nativeSrc": "3761:79:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "3761:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3731:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3731:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3739:18:3",
																				"nodeType": "YulLiteral",
																				"src": "3739:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3728:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3728:2:3"
																		},
																		"nativeSrc": "3728:30:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3728:30:3"
																	},
																	"nativeSrc": "3725:117:3",
																	"nodeType": "YulIf",
																	"src": "3725:117:3"
																},
																{
																	"nativeSrc": "3856:98:3",
																	"nodeType": "YulAssignment",
																	"src": "3856:98:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3926:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3926:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3937:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3937:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3922:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3922:3:3"
																				},
																				"nativeSrc": "3922:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3922:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3946:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3946:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3874:47:3",
																			"nodeType": "YulIdentifier",
																			"src": "3874:47:3"
																		},
																		"nativeSrc": "3874:80:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:80:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3856:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3856:6:3"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "3864:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3864:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "3177:794:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:3",
														"nodeType": "YulTypedName",
														"src": "3294:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3305:7:3",
														"nodeType": "YulTypedName",
														"src": "3305:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3317:6:3",
														"nodeType": "YulTypedName",
														"src": "3317:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3325:6:3",
														"nodeType": "YulTypedName",
														"src": "3325:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3333:6:3",
														"nodeType": "YulTypedName",
														"src": "3333:6:3",
														"type": ""
													}
												],
												"src": "3177:794:3"
											},
											{
												"body": {
													"nativeSrc": "4005:152:3",
													"nodeType": "YulBlock",
													"src": "4005:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4022:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4025:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4025:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4015:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:3"
																},
																"nativeSrc": "4015:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4015:88:3"
															},
															"nativeSrc": "4015:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4015:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4119:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4119:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4122:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4112:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4112:6:3"
																},
																"nativeSrc": "4112:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4112:15:3"
															},
															"nativeSrc": "4112:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4112:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4143:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4143:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4146:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4146:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4136:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:3"
																},
																"nativeSrc": "4136:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4136:15:3"
															},
															"nativeSrc": "4136:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4136:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3977:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "3977:180:3"
											},
											{
												"body": {
													"nativeSrc": "4191:152:3",
													"nodeType": "YulBlock",
													"src": "4191:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4208:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4208:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4211:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4211:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4201:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:3"
																},
																"nativeSrc": "4201:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4201:88:3"
															},
															"nativeSrc": "4201:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4201:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4305:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4305:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4308:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4308:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4298:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:3"
																},
																"nativeSrc": "4298:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4298:15:3"
															},
															"nativeSrc": "4298:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4298:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4329:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4329:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4332:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4332:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4322:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:3"
																},
																"nativeSrc": "4322:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4322:15:3"
															},
															"nativeSrc": "4322:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4322:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4163:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4163:180:3"
											},
											{
												"body": {
													"nativeSrc": "4392:43:3",
													"nodeType": "YulBlock",
													"src": "4392:43:3",
													"statements": [
														{
															"nativeSrc": "4402:27:3",
															"nodeType": "YulAssignment",
															"src": "4402:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4417:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4417:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4424:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4413:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:3"
																},
																"nativeSrc": "4413:16:3",
																"nodeType": "YulFunctionCall",
																"src": "4413:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4402:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4402:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4349:86:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4374:5:3",
														"nodeType": "YulTypedName",
														"src": "4374:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4384:7:3",
														"nodeType": "YulTypedName",
														"src": "4384:7:3",
														"type": ""
													}
												],
												"src": "4349:86:3"
											},
											{
												"body": {
													"nativeSrc": "4482:126:3",
													"nodeType": "YulBlock",
													"src": "4482:126:3",
													"statements": [
														{
															"nativeSrc": "4492:31:3",
															"nodeType": "YulAssignment",
															"src": "4492:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4517:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4517:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "4501:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "4501:15:3"
																},
																"nativeSrc": "4501:22:3",
																"nodeType": "YulFunctionCall",
																"src": "4501:22:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4492:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4492:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4551:22:3",
																"nodeType": "YulBlock",
																"src": "4551:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4553:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4553:16:3"
																			},
																			"nativeSrc": "4553:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4553:18:3"
																		},
																		"nativeSrc": "4553:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4553:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4538:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4538:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4545:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4545:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4535:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4535:2:3"
																},
																"nativeSrc": "4535:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4535:15:3"
															},
															"nativeSrc": "4532:41:3",
															"nodeType": "YulIf",
															"src": "4532:41:3"
														},
														{
															"nativeSrc": "4582:20:3",
															"nodeType": "YulAssignment",
															"src": "4582:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4593:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4593:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4600:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4600:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4589:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4589:3:3"
																},
																"nativeSrc": "4589:13:3",
																"nodeType": "YulFunctionCall",
																"src": "4589:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4582:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4582:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "4441:167:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4468:5:3",
														"nodeType": "YulTypedName",
														"src": "4468:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4478:3:3",
														"nodeType": "YulTypedName",
														"src": "4478:3:3",
														"type": ""
													}
												],
												"src": "4441:167:3"
											},
											{
												"body": {
													"nativeSrc": "4659:149:3",
													"nodeType": "YulBlock",
													"src": "4659:149:3",
													"statements": [
														{
															"nativeSrc": "4669:25:3",
															"nodeType": "YulAssignment",
															"src": "4669:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4692:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4692:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4674:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4674:17:3"
																},
																"nativeSrc": "4674:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4674:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4669:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4669:1:3"
																}
															]
														},
														{
															"nativeSrc": "4703:25:3",
															"nodeType": "YulAssignment",
															"src": "4703:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4726:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4726:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4708:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4708:17:3"
																},
																"nativeSrc": "4708:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4708:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4703:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4703:1:3"
																}
															]
														},
														{
															"nativeSrc": "4737:17:3",
															"nodeType": "YulAssignment",
															"src": "4737:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4749:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4749:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4752:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4752:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4745:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:3"
																},
																"nativeSrc": "4745:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4745:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4737:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4779:22:3",
																"nodeType": "YulBlock",
																"src": "4779:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4781:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4781:16:3"
																			},
																			"nativeSrc": "4781:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4781:18:3"
																		},
																		"nativeSrc": "4781:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4781:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4770:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4770:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4776:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4776:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4767:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4767:2:3"
																},
																"nativeSrc": "4767:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4767:11:3"
															},
															"nativeSrc": "4764:37:3",
															"nodeType": "YulIf",
															"src": "4764:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4614:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4645:1:3",
														"nodeType": "YulTypedName",
														"src": "4645:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4648:1:3",
														"nodeType": "YulTypedName",
														"src": "4648:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4654:4:3",
														"nodeType": "YulTypedName",
														"src": "4654:4:3",
														"type": ""
													}
												],
												"src": "4614:194:3"
											},
											{
												"body": {
													"nativeSrc": "4842:152:3",
													"nodeType": "YulBlock",
													"src": "4842:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4859:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4859:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4862:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4852:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:3"
																},
																"nativeSrc": "4852:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4852:88:3"
															},
															"nativeSrc": "4852:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4852:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4956:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4956:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4959:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4959:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4949:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:3"
																},
																"nativeSrc": "4949:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4949:15:3"
															},
															"nativeSrc": "4949:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4949:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4980:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4983:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4983:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4973:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:3"
																},
																"nativeSrc": "4973:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4973:15:3"
															},
															"nativeSrc": "4973:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4973:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4814:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4814:180:3"
											},
											{
												"body": {
													"nativeSrc": "5042:146:3",
													"nodeType": "YulBlock",
													"src": "5042:146:3",
													"statements": [
														{
															"nativeSrc": "5052:23:3",
															"nodeType": "YulAssignment",
															"src": "5052:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5073:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5073:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "5057:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "5057:15:3"
																},
																"nativeSrc": "5057:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5057:18:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5052:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5052:1:3"
																}
															]
														},
														{
															"nativeSrc": "5084:23:3",
															"nodeType": "YulAssignment",
															"src": "5084:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5105:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5105:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "5089:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "5089:15:3"
																},
																"nativeSrc": "5089:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5089:18:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5084:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5084:1:3"
																}
															]
														},
														{
															"nativeSrc": "5116:16:3",
															"nodeType": "YulAssignment",
															"src": "5116:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5127:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5127:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5130:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5130:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5123:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5123:3:3"
																},
																"nativeSrc": "5123:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5123:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5116:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5159:22:3",
																"nodeType": "YulBlock",
																"src": "5159:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5161:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5161:16:3"
																			},
																			"nativeSrc": "5161:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5161:18:3"
																		},
																		"nativeSrc": "5161:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5161:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "5148:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5148:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5153:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5153:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5145:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5145:2:3"
																},
																"nativeSrc": "5145:13:3",
																"nodeType": "YulFunctionCall",
																"src": "5145:13:3"
															},
															"nativeSrc": "5142:39:3",
															"nodeType": "YulIf",
															"src": "5142:39:3"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "5000:188:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5029:1:3",
														"nodeType": "YulTypedName",
														"src": "5029:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5032:1:3",
														"nodeType": "YulTypedName",
														"src": "5032:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5038:3:3",
														"nodeType": "YulTypedName",
														"src": "5038:3:3",
														"type": ""
													}
												],
												"src": "5000:188:3"
											},
											{
												"body": {
													"nativeSrc": "5222:152:3",
													"nodeType": "YulBlock",
													"src": "5222:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5239:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5239:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5242:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5242:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:3"
																},
																"nativeSrc": "5232:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5232:88:3"
															},
															"nativeSrc": "5232:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5232:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5336:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5336:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5339:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5339:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5329:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5329:6:3"
																},
																"nativeSrc": "5329:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5329:15:3"
															},
															"nativeSrc": "5329:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5329:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5360:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5360:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5363:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5353:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5353:6:3"
																},
																"nativeSrc": "5353:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5353:15:3"
															},
															"nativeSrc": "5353:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5353:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "5194:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5194:180:3"
											},
											{
												"body": {
													"nativeSrc": "5424:147:3",
													"nodeType": "YulBlock",
													"src": "5424:147:3",
													"statements": [
														{
															"nativeSrc": "5434:25:3",
															"nodeType": "YulAssignment",
															"src": "5434:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5457:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5457:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5439:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5439:17:3"
																},
																"nativeSrc": "5439:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5439:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5434:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5434:1:3"
																}
															]
														},
														{
															"nativeSrc": "5468:25:3",
															"nodeType": "YulAssignment",
															"src": "5468:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5491:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5491:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5473:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5473:17:3"
																},
																"nativeSrc": "5473:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5473:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5468:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5468:1:3"
																}
															]
														},
														{
															"nativeSrc": "5502:16:3",
															"nodeType": "YulAssignment",
															"src": "5502:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5513:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5513:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5516:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5516:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5509:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:3"
																},
																"nativeSrc": "5509:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5509:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5502:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5542:22:3",
																"nodeType": "YulBlock",
																"src": "5542:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5544:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5544:16:3"
																			},
																			"nativeSrc": "5544:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5544:18:3"
																		},
																		"nativeSrc": "5544:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5544:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5534:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5534:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5537:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5537:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5531:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5531:2:3"
																},
																"nativeSrc": "5531:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5531:10:3"
															},
															"nativeSrc": "5528:36:3",
															"nodeType": "YulIf",
															"src": "5528:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5380:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5411:1:3",
														"nodeType": "YulTypedName",
														"src": "5411:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5414:1:3",
														"nodeType": "YulTypedName",
														"src": "5414:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5420:3:3",
														"nodeType": "YulTypedName",
														"src": "5420:3:3",
														"type": ""
													}
												],
												"src": "5380:191:3"
											},
											{
												"body": {
													"nativeSrc": "5605:152:3",
													"nodeType": "YulBlock",
													"src": "5605:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5622:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5622:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5625:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5625:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5615:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:3"
																},
																"nativeSrc": "5615:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5615:88:3"
															},
															"nativeSrc": "5615:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5615:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5719:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5719:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5722:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5712:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5712:6:3"
																},
																"nativeSrc": "5712:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5712:15:3"
															},
															"nativeSrc": "5712:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5712:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5743:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5743:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5746:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5746:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5736:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5736:6:3"
																},
																"nativeSrc": "5736:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5736:15:3"
															},
															"nativeSrc": "5736:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5736:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "5577:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5577:180:3"
											},
											{
												"body": {
													"nativeSrc": "5791:152:3",
													"nodeType": "YulBlock",
													"src": "5791:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5808:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5808:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5811:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5811:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:3"
																},
																"nativeSrc": "5801:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5801:88:3"
															},
															"nativeSrc": "5801:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5801:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5905:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5908:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:3"
																},
																"nativeSrc": "5898:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5898:15:3"
															},
															"nativeSrc": "5898:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5898:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5929:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5929:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5932:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5932:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5922:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:3"
																},
																"nativeSrc": "5922:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5922:15:3"
															},
															"nativeSrc": "5922:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5922:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5763:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5763:180:3"
											},
											{
												"body": {
													"nativeSrc": "5991:143:3",
													"nodeType": "YulBlock",
													"src": "5991:143:3",
													"statements": [
														{
															"nativeSrc": "6001:25:3",
															"nodeType": "YulAssignment",
															"src": "6001:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6024:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6024:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6006:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6006:17:3"
																},
																"nativeSrc": "6006:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6006:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6001:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6001:1:3"
																}
															]
														},
														{
															"nativeSrc": "6035:25:3",
															"nodeType": "YulAssignment",
															"src": "6035:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6058:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6058:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6040:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6040:17:3"
																},
																"nativeSrc": "6040:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6040:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6035:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6035:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6082:22:3",
																"nodeType": "YulBlock",
																"src": "6082:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6084:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6084:16:3"
																			},
																			"nativeSrc": "6084:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6084:18:3"
																		},
																		"nativeSrc": "6084:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6084:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6079:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6079:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6072:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:3"
																},
																"nativeSrc": "6072:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6072:9:3"
															},
															"nativeSrc": "6069:35:3",
															"nodeType": "YulIf",
															"src": "6069:35:3"
														},
														{
															"nativeSrc": "6114:14:3",
															"nodeType": "YulAssignment",
															"src": "6114:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6123:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6123:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6126:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6126:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6119:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6119:3:3"
																},
																"nativeSrc": "6119:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6119:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6114:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6114:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5949:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5980:1:3",
														"nodeType": "YulTypedName",
														"src": "5980:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5983:1:3",
														"nodeType": "YulTypedName",
														"src": "5983:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5989:1:3",
														"nodeType": "YulTypedName",
														"src": "5989:1:3",
														"type": ""
													}
												],
												"src": "5949:185:3"
											},
											{
												"body": {
													"nativeSrc": "6188:362:3",
													"nodeType": "YulBlock",
													"src": "6188:362:3",
													"statements": [
														{
															"nativeSrc": "6198:25:3",
															"nodeType": "YulAssignment",
															"src": "6198:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6221:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6221:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6203:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6203:17:3"
																},
																"nativeSrc": "6203:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6203:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6198:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6198:1:3"
																}
															]
														},
														{
															"nativeSrc": "6232:25:3",
															"nodeType": "YulAssignment",
															"src": "6232:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6255:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6255:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6237:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6237:17:3"
																},
																"nativeSrc": "6237:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6237:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6232:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6232:1:3"
																}
															]
														},
														{
															"nativeSrc": "6266:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6289:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6289:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6292:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6285:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:3"
																},
																"nativeSrc": "6285:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6285:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6270:11:3",
																	"nodeType": "YulTypedName",
																	"src": "6270:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6303:41:3",
															"nodeType": "YulAssignment",
															"src": "6303:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6332:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "6332:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6314:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6314:17:3"
																},
																"nativeSrc": "6314:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6303:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "6303:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6521:22:3",
																"nodeType": "YulBlock",
																"src": "6521:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6523:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6523:16:3"
																			},
																			"nativeSrc": "6523:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6523:18:3"
																		},
																		"nativeSrc": "6523:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6523:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6454:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "6454:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6447:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "6447:6:3"
																				},
																				"nativeSrc": "6447:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6447:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6477:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "6477:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6484:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "6484:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6493:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "6493:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6480:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "6480:3:3"
																						},
																						"nativeSrc": "6480:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "6480:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6474:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "6474:2:3"
																				},
																				"nativeSrc": "6474:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6474:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6427:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "6427:2:3"
																		},
																		"nativeSrc": "6427:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6407:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:3"
																},
																"nativeSrc": "6407:113:3",
																"nodeType": "YulFunctionCall",
																"src": "6407:113:3"
															},
															"nativeSrc": "6404:139:3",
															"nodeType": "YulIf",
															"src": "6404:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6140:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6171:1:3",
														"nodeType": "YulTypedName",
														"src": "6171:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6174:1:3",
														"nodeType": "YulTypedName",
														"src": "6174:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6180:7:3",
														"nodeType": "YulTypedName",
														"src": "6180:7:3",
														"type": ""
													}
												],
												"src": "6140:410:3"
											},
											{
												"body": {
													"nativeSrc": "6599:148:3",
													"nodeType": "YulBlock",
													"src": "6599:148:3",
													"statements": [
														{
															"nativeSrc": "6609:23:3",
															"nodeType": "YulAssignment",
															"src": "6609:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6630:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6630:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6614:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "6614:15:3"
																},
																"nativeSrc": "6614:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6614:18:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6609:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6609:1:3"
																}
															]
														},
														{
															"nativeSrc": "6641:23:3",
															"nodeType": "YulAssignment",
															"src": "6641:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6662:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6662:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6646:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "6646:15:3"
																},
																"nativeSrc": "6646:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6646:18:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6641:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6641:1:3"
																}
															]
														},
														{
															"nativeSrc": "6673:17:3",
															"nodeType": "YulAssignment",
															"src": "6673:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6685:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6685:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6688:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6688:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6681:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:3"
																},
																"nativeSrc": "6681:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6681:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6673:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6673:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6718:22:3",
																"nodeType": "YulBlock",
																"src": "6718:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6720:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:3"
																			},
																			"nativeSrc": "6720:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:3"
																		},
																		"nativeSrc": "6720:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6706:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6706:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6712:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6712:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6703:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6703:2:3"
																},
																"nativeSrc": "6703:14:3",
																"nodeType": "YulFunctionCall",
																"src": "6703:14:3"
															},
															"nativeSrc": "6700:40:3",
															"nodeType": "YulIf",
															"src": "6700:40:3"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "6556:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6585:1:3",
														"nodeType": "YulTypedName",
														"src": "6585:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6588:1:3",
														"nodeType": "YulTypedName",
														"src": "6588:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6594:4:3",
														"nodeType": "YulTypedName",
														"src": "6594:4:3",
														"type": ""
													}
												],
												"src": "6556:191:3"
											},
											{
												"body": {
													"nativeSrc": "6794:126:3",
													"nodeType": "YulBlock",
													"src": "6794:126:3",
													"statements": [
														{
															"nativeSrc": "6804:31:3",
															"nodeType": "YulAssignment",
															"src": "6804:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6829:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6829:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6813:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "6813:15:3"
																},
																"nativeSrc": "6813:22:3",
																"nodeType": "YulFunctionCall",
																"src": "6813:22:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6804:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6804:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6863:22:3",
																"nodeType": "YulBlock",
																"src": "6863:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6865:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6865:16:3"
																			},
																			"nativeSrc": "6865:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6865:18:3"
																		},
																		"nativeSrc": "6865:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6865:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6850:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6850:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6857:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6857:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6847:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6847:2:3"
																},
																"nativeSrc": "6847:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6847:15:3"
															},
															"nativeSrc": "6844:41:3",
															"nodeType": "YulIf",
															"src": "6844:41:3"
														},
														{
															"nativeSrc": "6894:20:3",
															"nodeType": "YulAssignment",
															"src": "6894:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6905:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6912:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6912:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6901:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:3"
																},
																"nativeSrc": "6901:13:3",
																"nodeType": "YulFunctionCall",
																"src": "6901:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6894:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6894:3:3"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint8",
												"nativeSrc": "6753:167:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6780:5:3",
														"nodeType": "YulTypedName",
														"src": "6780:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6790:3:3",
														"nodeType": "YulTypedName",
														"src": "6790:3:3",
														"type": ""
													}
												],
												"src": "6753:167:3"
											},
											{
												"body": {
													"nativeSrc": "6960:142:3",
													"nodeType": "YulBlock",
													"src": "6960:142:3",
													"statements": [
														{
															"nativeSrc": "6970:25:3",
															"nodeType": "YulAssignment",
															"src": "6970:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6993:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6993:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6975:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6975:17:3"
																},
																"nativeSrc": "6975:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6975:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6970:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6970:1:3"
																}
															]
														},
														{
															"nativeSrc": "7004:25:3",
															"nodeType": "YulAssignment",
															"src": "7004:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7027:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7009:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7009:17:3"
																},
																"nativeSrc": "7009:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7009:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7004:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7004:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7051:22:3",
																"nodeType": "YulBlock",
																"src": "7051:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7053:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7053:16:3"
																			},
																			"nativeSrc": "7053:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7053:18:3"
																		},
																		"nativeSrc": "7053:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7053:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7048:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7048:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7041:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7041:6:3"
																},
																"nativeSrc": "7041:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7041:9:3"
															},
															"nativeSrc": "7038:35:3",
															"nodeType": "YulIf",
															"src": "7038:35:3"
														},
														{
															"nativeSrc": "7082:14:3",
															"nodeType": "YulAssignment",
															"src": "7082:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7091:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7091:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7094:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7094:1:3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "7087:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7087:3:3"
																},
																"nativeSrc": "7087:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7087:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7082:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7082:1:3"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "6926:176:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6949:1:3",
														"nodeType": "YulTypedName",
														"src": "6949:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6952:1:3",
														"nodeType": "YulTypedName",
														"src": "6952:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6958:1:3",
														"nodeType": "YulTypedName",
														"src": "6958:1:3",
														"type": ""
													}
												],
												"src": "6926:176:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(value) {\n        if iszero(eq(value, cleanup_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c80634dec36e3146100435780638e501fc714610073575b5f80fd5b61005d60048036038101906100589190613ae1565b61009b565b60405161006a9190613b2e565b60405180910390f35b81801561007e575f80fd5b5061009960048036038101906100949190613ba8565b6100af565b005b5f6100a7835f8461027b565b905092915050565b5f8380549050146100be575f80fd5b61010082829050106100ce575f80fd5b5f5b828290508160ff161015610248575f83838360ff168181106100f5576100f4613c05565b5b905060200201359050601560ff16811061010d575f80fd5b610115613a34565b81815f019060ff16908160ff16815250505f60ff1682036101635784848461013c90613c6b565b94508460ff1681811061015257610151613c05565b5b905060200201358160a00181815250505b8581908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548160ff021916908360ff1602179055506020820151815f0160016101000a81548160ff021916908360ff1602179055506040820151815f0160026101000a81548160ff021916908360ff1602179055506060820151815f0160036101000a81548160ff021916908360ff1602179055506080820151815f0160046101000a81548160ff021916908360ff16021790555060a08201518160010155505050508061024190613c6b565b90506100d0565b505f610254845f61071f565b509050600184805490506102689190613c93565b8160ff1614610275575f80fd5b50505050565b5f80848460ff168154811061029357610292613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff1690505f60ff168160ff16036102cf57816001015492505050610718565b600160ff168160ff16036102e7578392505050610718565b600260ff168160ff1603610399575f61031187845f0160019054906101000a900460ff168761027b565b90505f61033b600261032d60018561094c90919063ffffffff16565b61097290919063ffffffff16565b90505f8290505b8082101561038c57819050610385600261037784610369868861097290919063ffffffff16565b61094c90919063ffffffff16565b61097290919063ffffffff16565b9150610342565b8095505050505050610718565b600460ff168160ff16101580156103b75750600960ff168160ff1611155b15610545575f6103d887845f0160019054906101000a900460ff168761027b565b90505f6103f688855f0160029054906101000a900460ff168861027b565b9050600460ff168360ff160361042457610419818361094c90919063ffffffff16565b945050505050610718565b600560ff168360ff160361045057610445818361098790919063ffffffff16565b945050505050610718565b600660ff168360ff160361047c5761047181836109ad90919063ffffffff16565b945050505050610718565b600760ff168360ff16036104a85761049d818361097290919063ffffffff16565b945050505050610718565b600860ff168360ff16036104f8575f8190505f600190505f5b828110156104e9576104dc85836109ad90919063ffffffff16565b91508060010190506104c1565b50809650505050505050610718565b600960ff168360ff160361053e57610533670de0b6b3a764000061052583856109ad90919063ffffffff16565b61097290919063ffffffff16565b945050505050610718565b5050610714565b601260ff168160ff16036105c1575f61056f87845f0160019054906101000a900460ff16876109ed565b9050801561059c5761059287845f0160029054906101000a900460ff168761027b565b9350505050610718565b6105b787845f0160039054906101000a900460ff168761027b565b9350505050610718565b601360ff168160ff1603610640575f6105eb87845f0160019054906101000a900460ff168761027b565b90505f61060988855f0160029054906101000a900460ff168861027b565b90505f61062789865f0160039054906101000a900460ff168961027b565b9050610634838383610cc3565b95505050505050610718565b601460ff168160ff1603610713575f61066a87845f0160019054906101000a900460ff168761027b565b90505f61068888855f0160029054906101000a900460ff168861027b565b90505f6106a689865f0160039054906101000a900460ff168961027b565b90505f6106c48a875f0160049054906101000a900460ff168a61027b565b905064010000000081106106d6575f80fd5b5f806106e7858585620f4240610d62565b915091508060ff1661070287846109ad90919063ffffffff16565b901c98505050505050505050610718565b5b5f80fd5b9392505050565b5f8083805490508360ff1610610733575f80fd5b5f848460ff168154811061074a57610749613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff1690505f61077582610e7d565b90505f8160ff1667ffffffffffffffff81111561079557610794613cc6565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b5090505f8790505f5b8360ff168160ff16101561092b575f8160ff1603610811576001826107f19190613cf3565b865f0160016101000a81548160ff021916908360ff1602179055506108c0565b60018160ff1603610849576001826108299190613cf3565b865f0160026101000a81548160ff021916908360ff1602179055506108bf565b60028160ff1603610881576001826108619190613cf3565b865f0160036101000a81548160ff021916908360ff1602179055506108be565b60038160ff16036108b9576001826108999190613cf3565b865f0160046101000a81548160ff021916908360ff1602179055506108bd565b5f80fd5b5b5b5b6108d68a6001846108d19190613cf3565b61071f565b848360ff16815181106108ec576108eb613c05565b5b6020026020010181600281111561090657610905613d27565b5b600281111561091857610917613d27565b5b81525081935050508060010190506107cc565b505f6109378584610ef9565b90508181975097505050505050509250929050565b5f81836109599190613d54565b90508281101561096c5761096b613d87565b5b92915050565b5f818361097f9190613de1565b905092915050565b5f8282111561099957610998613d87565b5b81836109a59190613c93565b905092915050565b5f8083036109bd575f90506109e7565b81836109c99190613e11565b90508183826109d89190613de1565b146109e6576109e5613d87565b5b5b92915050565b5f80848460ff1681548110610a0557610a04613c05565b5b905f5260205f20906002020190505f815f015f9054906101000a900460ff169050600360ff168160ff1603610a5957610a4f86835f0160019054906101000a900460ff16866109ed565b1592505050610cbc565b600a60ff168160ff1610158015610a775750600f60ff168160ff1611155b15610b6a575f610a9887845f0160019054906101000a900460ff168761027b565b90505f610ab688855f0160029054906101000a900460ff168861027b565b9050600a60ff168360ff1603610ad457808214945050505050610cbc565b600b60ff168360ff1603610af15780821415945050505050610cbc565b600c60ff168360ff1603610b0d57808210945050505050610cbc565b600d60ff168360ff1603610b2957808211945050505050610cbc565b600e60ff168360ff1603610b465780821115945050505050610cbc565b600f60ff168360ff1603610b635780821015945050505050610cbc565b5050610cb8565b601060ff168160ff1610158015610b885750601160ff168160ff1611155b15610c3a575f610ba987845f0160019054906101000a900460ff16876109ed565b9050601060ff168260ff1603610bef578015610be457610bda87845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b5f9350505050610cbc565b601160ff168260ff1603610c34578015610c0f5760019350505050610cbc565b610c2a87845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b50610cb7565b601260ff168160ff1603610cb6575f610c6487845f0160019054906101000a900460ff16876109ed565b90508015610c9157610c8787845f0160029054906101000a900460ff16876109ed565b9350505050610cbc565b610cac87845f0160039054906101000a900460ff16876109ed565b9350505050610cbc565b5b5b5f80fd5b9392505050565b5f81831015610cd0575f80fd5b5f80836f8000000000000000000000000000000086610cef9190613e11565b610cf99190613de1565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610d2457610d1d8161157f565b9150610d30565b610d2d81611cf4565b91505b6f800000000000000000000000000000008683610d4d9190613e11565b610d579190613de1565b925050509392505050565b5f807002000000000000000000000000000000008610610d80575f80fd5b84861015610d8c575f80fd5b5f80866f8000000000000000000000000000000089610dab9190613e11565b610db59190613de1565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610de057610dd98161157f565b9150610dec565b610de981611cf4565b91505b5f8563ffffffff168763ffffffff1684610e069190613e11565b610e109190613de1565b9050700800000000000000000000000000000000811015610e4257610e3481611e49565b607f94509450505050610e74565b5f610e4c82612643565b9050610e6a81607f610e5e9190613e52565b60ff1683901c826132a6565b8195509550505050505b94509492505050565b5f600160ff168260ff1611610e94575f9050610ef4565b600360ff168260ff1611610eab5760019050610ef4565b601160ff168260ff1611610ec25760029050610ef4565b601360ff168260ff1611610ed95760039050610ef4565b601460ff168260ff1611610ef05760049050610ef4565b5f80fd5b919050565b5f600160ff168360ff1611610f115760019050611579565b600260ff168360ff1603610f725760016002811115610f3357610f32613d27565b5b825f81518110610f4657610f45613c05565b5b60200260200101516002811115610f6057610f5f613d27565b5b14610f69575f80fd5b60019050611579565b600360ff168360ff1603610fd257600280811115610f9357610f92613d27565b5b825f81518110610fa657610fa5613c05565b5b60200260200101516002811115610fc057610fbf613d27565b5b14610fc9575f80fd5b60029050611579565b600460ff168360ff1610158015610ff05750600960ff168360ff1611155b15611093576001600281111561100957611008613d27565b5b825f8151811061101c5761101b613c05565b5b6020026020010151600281111561103657611035613d27565b5b1461103f575f80fd5b6001600281111561105357611052613d27565b5b8260018151811061106757611066613c05565b5b6020026020010151600281111561108157611080613d27565b5b1461108a575f80fd5b60019050611579565b600a60ff168360ff16101580156110b15750600f60ff168360ff1611155b1561115457600160028111156110ca576110c9613d27565b5b825f815181106110dd576110dc613c05565b5b602002602001015160028111156110f7576110f6613d27565b5b14611100575f80fd5b6001600281111561111457611113613d27565b5b8260018151811061112857611127613c05565b5b6020026020010151600281111561114257611141613d27565b5b1461114b575f80fd5b60029050611579565b601060ff168360ff16101580156111725750601160ff168360ff1611155b156112135760028081111561118a57611189613d27565b5b825f8151811061119d5761119c613c05565b5b602002602001015160028111156111b7576111b6613d27565b5b146111c0575f80fd5b6002808111156111d3576111d2613d27565b5b826001815181106111e7576111e6613c05565b5b6020026020010151600281111561120157611200613d27565b5b1461120a575f80fd5b60029050611579565b601260ff168360ff160361133c5760028081111561123457611233613d27565b5b825f8151811061124757611246613c05565b5b6020026020010151600281111561126157611260613d27565b5b1461126a575f80fd5b5f600281111561127d5761127c613d27565b5b8260018151811061129157611290613c05565b5b602002602001015160028111156112ab576112aa613d27565b5b036112b4575f80fd5b816002815181106112c8576112c7613c05565b5b602002602001015160028111156112e2576112e1613d27565b5b826001815181106112f6576112f5613c05565b5b602002602001015160028111156113105761130f613d27565b5b14611319575f80fd5b8160018151811061132d5761132c613c05565b5b60200260200101519050611579565b601360ff168360ff1603611433576001600281111561135e5761135d613d27565b5b825f8151811061137157611370613c05565b5b6020026020010151600281111561138b5761138a613d27565b5b14611394575f80fd5b600160028111156113a8576113a7613d27565b5b826001815181106113bc576113bb613c05565b5b602002602001015160028111156113d6576113d5613d27565b5b146113df575f80fd5b600160028111156113f3576113f2613d27565b5b8260028151811061140757611406613c05565b5b6020026020010151600281111561142157611420613d27565b5b1461142a575f80fd5b60019050611579565b601460ff168360ff1603611575576001600281111561145557611454613d27565b5b825f8151811061146857611467613c05565b5b6020026020010151600281111561148257611481613d27565b5b1461148b575f80fd5b6001600281111561149f5761149e613d27565b5b826001815181106114b3576114b2613c05565b5b602002602001015160028111156114cd576114cc613d27565b5b146114d6575f80fd5b600160028111156114ea576114e9613d27565b5b826002815181106114fe576114fd613c05565b5b6020026020010151600281111561151857611517613d27565b5b14611521575f80fd5b6001600281111561153557611534613d27565b5b8260038151811061154957611548613c05565b5b6020026020010151600281111561156357611562613d27565b5b1461156c575f80fd5b60019050611579565b5f80fd5b92915050565b5f805f90505f805f6fd3094c70f034de4b96ff7d5b6f99fcd886106115f6576f40000000000000000000000000000000846115ba9190613d54565b93506fd3094c70f034de4b96ff7d5b6f99fcd86f80000000000000000000000000000000876115e99190613e11565b6115f39190613de1565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611665576f20000000000000000000000000000000846116299190613d54565b93506fa45af1e1f40c333b3de1db4dd55f29a76f80000000000000000000000000000000876116589190613e11565b6116629190613de1565b95505b6f910b022db7ae67ce76b441c27035c6a186106116d4576f10000000000000000000000000000000846116989190613d54565b93506f910b022db7ae67ce76b441c27035c6a16f80000000000000000000000000000000876116c79190613e11565b6116d19190613de1565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611743576f08000000000000000000000000000000846117079190613d54565b93506f88415abbe9a76bead8d00cf112e4d4a86f80000000000000000000000000000000876117369190613e11565b6117409190613de1565b95505b6f84102b00893f64c705e841d5d4064bd386106117b2576f04000000000000000000000000000000846117769190613d54565b93506f84102b00893f64c705e841d5d4064bd36f80000000000000000000000000000000876117a59190613e11565b6117af9190613de1565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611821576f02000000000000000000000000000000846117e59190613d54565b93506f8204055aaef1c8bd5c3259f4822735a26f80000000000000000000000000000000876118149190613e11565b61181e9190613de1565b95505b6f810100ab00222d861931c15e39b44e998610611890576f01000000000000000000000000000000846118549190613d54565b93506f810100ab00222d861931c15e39b44e996f80000000000000000000000000000000876118839190613e11565b61188d9190613de1565b95505b6f808040155aabbbe9451521693554f73386106118fe576e800000000000000000000000000000846118c29190613d54565b93506f808040155aabbbe9451521693554f7336f80000000000000000000000000000000876118f19190613e11565b6118fb9190613de1565b95505b6f800000000000000000000000000000008661191a9190613c93565b92508291506f80000000000000000000000000000000838461193c9190613e11565b6119469190613de1565b9050700100000000000000000000000000000000837001000000000000000000000000000000006119779190613c93565b836119829190613e11565b61198c9190613de1565b846119979190613d54565b93506f8000000000000000000000000000000081836119b69190613e11565b6119c09190613de1565b9150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6119f09190613c93565b836119fb9190613e11565b611a059190613de1565b84611a109190613d54565b93506f800000000000000000000000000000008183611a2f9190613e11565b611a399190613de1565b9150700300000000000000000000000000000000836f99999999999999999999999999999999611a699190613c93565b83611a749190613e11565b611a7e9190613de1565b84611a899190613d54565b93506f800000000000000000000000000000008183611aa89190613e11565b611ab29190613de1565b9150700400000000000000000000000000000000836f92492492492492492492492492492492611ae29190613c93565b83611aed9190613e11565b611af79190613de1565b84611b029190613d54565b93506f800000000000000000000000000000008183611b219190613e11565b611b2b9190613de1565b9150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e611b5b9190613c93565b83611b669190613e11565b611b709190613de1565b84611b7b9190613d54565b93506f800000000000000000000000000000008183611b9a9190613e11565b611ba49190613de1565b9150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b611bd49190613c93565b83611bdf9190613e11565b611be99190613de1565b84611bf49190613d54565b93506f800000000000000000000000000000008183611c139190613e11565b611c1d9190613de1565b9150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d89611c4d9190613c93565b83611c589190613e11565b611c629190613de1565b84611c6d9190613d54565b93506f800000000000000000000000000000008183611c8c9190613e11565b611c969190613de1565b9150700800000000000000000000000000000000836f88888888888888888888888888888888611cc69190613c93565b83611cd19190613e11565b611cdb9190613de1565b84611ce69190613d54565b935083945050505050919050565b5f805f90507001000000000000000000000000000000008310611d64575f611d366f8000000000000000000000000000000085611d319190613de1565b6139b3565b90508060ff1684901c93506f800000000000000000000000000000008160ff16611d609190613e11565b9150505b6f80000000000000000000000000000000831115611e0a575f607f90505b5f8160ff161115611e08576f800000000000000000000000000000008485611daa9190613e11565b611db49190613de1565b93507001000000000000000000000000000000008410611df757600184901c9350600181611de29190613e52565b60ff166001901b82611df49190613d54565b91505b80611e0190613e86565b9050611d82565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f882611e379190613e11565b611e419190613de1565b915050919050565b5f805f90505f806f1000000000000000000000000000000085611e6c9190613ead565b91508190506f800000000000000000000000000000008282611e8e9190613e11565b611e989190613de1565b90506710e1b3be415a000081611eae9190613e11565b83611eb99190613d54565b92506f800000000000000000000000000000008282611ed89190613e11565b611ee29190613de1565b90506705a0913f6b1e000081611ef89190613e11565b83611f039190613d54565b92506f800000000000000000000000000000008282611f229190613e11565b611f2c9190613de1565b9050670168244fdac7800081611f429190613e11565b83611f4d9190613d54565b92506f800000000000000000000000000000008282611f6c9190613e11565b611f769190613de1565b9050664807432bc1800081611f8b9190613e11565b83611f969190613d54565b92506f800000000000000000000000000000008282611fb59190613e11565b611fbf9190613de1565b9050660c0135dca0400081611fd49190613e11565b83611fdf9190613d54565b92506f800000000000000000000000000000008282611ffe9190613e11565b6120089190613de1565b90506601b707b1cdc0008161201d9190613e11565b836120289190613d54565b92506f8000000000000000000000000000000082826120479190613e11565b6120519190613de1565b90506536e0f639b800816120659190613e11565b836120709190613d54565b92506f80000000000000000000000000000000828261208f9190613e11565b6120999190613de1565b9050650618fee9f800816120ad9190613e11565b836120b89190613d54565b92506f8000000000000000000000000000000082826120d79190613e11565b6120e19190613de1565b9050649c197dcc00816120f49190613e11565b836120ff9190613d54565b92506f80000000000000000000000000000000828261211e9190613e11565b6121289190613de1565b9050640e30dce4008161213b9190613e11565b836121469190613d54565b92506f8000000000000000000000000000000082826121659190613e11565b61216f9190613de1565b905064012ebd1300816121829190613e11565b8361218d9190613d54565b92506f8000000000000000000000000000000082826121ac9190613e11565b6121b69190613de1565b90506317499f00816121c89190613e11565b836121d39190613d54565b92506f8000000000000000000000000000000082826121f29190613e11565b6121fc9190613de1565b90506301a9d4808161220e9190613e11565b836122199190613d54565b92506f8000000000000000000000000000000082826122389190613e11565b6122429190613de1565b9050621c6380816122539190613e11565b8361225e9190613d54565b92506f80000000000000000000000000000000828261227d9190613e11565b6122879190613de1565b90506201c638816122989190613e11565b836122a39190613d54565b92506f8000000000000000000000000000000082826122c29190613e11565b6122cc9190613de1565b9050611ab8816122dc9190613e11565b836122e79190613d54565b92506f8000000000000000000000000000000082826123069190613e11565b6123109190613de1565b905061017c816123209190613e11565b8361232b9190613d54565b92506f80000000000000000000000000000000828261234a9190613e11565b6123549190613de1565b90506014816123639190613e11565b8361236e9190613d54565b92506f80000000000000000000000000000000828261238d9190613e11565b6123979190613de1565b90506001816123a69190613e11565b836123b19190613d54565b92506f80000000000000000000000000000000826721c3677c82b40000856123d99190613de1565b6123e39190613d54565b6123ed9190613d54565b92505f6f100000000000000000000000000000008616146124445770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f9846124379190613e11565b6124419190613de1565b92505b5f6f20000000000000000000000000000000861614612499577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e7788461248c9190613e11565b6124969190613de1565b92505b5f6f400000000000000000000000000000008616146124ed576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5846124e09190613e11565b6124ea9190613de1565b92505b5f6f80000000000000000000000000000000861614612540576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e846125339190613e11565b61253d9190613de1565b92505b5f700100000000000000000000000000000000861614612594576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c5846125879190613e11565b6125919190613de1565b92505b5f7002000000000000000000000000000000008616146125e7576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7846125da9190613e11565b6125e49190613de1565b92505b5f700400000000000000000000000000000000861614612638576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc3078461262b9190613e11565b6126359190613de1565b92505b829350505050919050565b5f81701c35fedd14ffffffffffffffffffffffff1061266557602090506132a1565b81701b0ce43b323fffffffffffffffffffffff1061268657602190506132a1565b817019f0028ec1ffffffffffffffffffffffff106126a757602290506132a1565b817018ded91f0e7fffffffffffffffffffffff106126c857602390506132a1565b817017d8ec7f0417ffffffffffffffffffffff106126e957602490506132a1565b817016ddc6556cdbffffffffffffffffffffff1061270a57602590506132a1565b817015ecf52776a1ffffffffffffffffffffff1061272b57602690506132a1565b817015060c256cb2ffffffffffffffffffffff1061274c57602790506132a1565b81701428a2f98d72ffffffffffffffffffffff1061276d57602890506132a1565b817013545598e5c23fffffffffffffffffffff1061278e57602990506132a1565b81701288c4161ce1dfffffffffffffffffffff106127af57602a90506132a1565b817011c592761c666fffffffffffffffffffff106127d057602b90506132a1565b8170110a688680a757ffffffffffffffffffff106127f157602c90506132a1565b81701056f1b5bedf77ffffffffffffffffffff1061281257602d90506132a1565b81700faadceceeff8bffffffffffffffffffff1061283357602e90506132a1565b81700f05dc6b27edadffffffffffffffffffff1061285457602f90506132a1565b81700e67a5a25da4107fffffffffffffffffff1061287557603090506132a1565b81700dcff115b14eedffffffffffffffffffff1061289657603190506132a1565b81700d3e7a392431239fffffffffffffffffff106128b757603290506132a1565b81700cb2ff529eb71e4fffffffffffffffffff106128d857603390506132a1565b81700c2d415c3db974afffffffffffffffffff106128f957603490506132a1565b81700bad03e7d883f69bffffffffffffffffff1061291a57603590506132a1565b81700b320d03b2c343d5ffffffffffffffffff1061293b57603690506132a1565b81700abc25204e02828dffffffffffffffffff1061295c57603790506132a1565b81700a4b16f74ee4bb207fffffffffffffffff1061297d57603890506132a1565b817009deaf736ac1f569ffffffffffffffffff1061299e57603990506132a1565b81700976bd9952c7aa957fffffffffffffffff106129bf57603a90506132a1565b817009131271922eaa606fffffffffffffffff106129e057603b90506132a1565b817008b380f3558668c46fffffffffffffffff10612a0157603c90506132a1565b81700857ddf0117efa215bffffffffffffffff10612a2257603d90506132a1565b817007ffffffffffffffffffffffffffffffff10612a4357603e90506132a1565b817007abbf6f6abb9d087fffffffffffffffff10612a6457603f90506132a1565b8170075af62cbac95f7dfa7fffffffffffffff10612a8557604090506132a1565b8170070d7fb7452e187ac13fffffffffffffff10612aa657604190506132a1565b817006c3390ecc8af379295fffffffffffffff10612ac757604290506132a1565b8170067c00a3b07ffc01fd6fffffffffffffff10612ae857604390506132a1565b81700637b647c39cbb9d3d27ffffffffffffff10612b0957604490506132a1565b817005f63b1fc104dbd39587ffffffffffffff10612b2a57604590506132a1565b817005b771955b36e12f7235ffffffffffffff10612b4b57604690506132a1565b8170057b3d49dda84556d6f6ffffffffffffff10612b6c57604790506132a1565b8170054183095b2c8ececf30ffffffffffffff10612b8d57604890506132a1565b8170050a28be635ca2b888f77fffffffffffff10612bae57604990506132a1565b817004d5156639708c9db33c3fffffffffffff10612bcf57604a90506132a1565b817004a23105873875bd52dfdfffffffffffff10612bf057604b90506132a1565b81700471649d87199aa990756fffffffffffff10612c1157604c90506132a1565b817004429a21a029d4c1457cfbffffffffffff10612c3257604d90506132a1565b81700415bc6d6fb7dd71af2cb3ffffffffffff10612c5357604e90506132a1565b817003eab73b3bbfe282243ce1ffffffffffff10612c7457604f90506132a1565b817003c1771ac9fb6b4c18e229ffffffffffff10612c9557605090506132a1565b81700399e96897690418f785257fffffffffff10612cb657605190506132a1565b81700373fc456c53bb779bf0ea9fffffffffff10612cd757605290506132a1565b8170034f9e8e490c48e67e6ab8bfffffffffff10612cf857605390506132a1565b8170032cbfd4a7adc790560b3337ffffffffff10612d1957605490506132a1565b8170030b50570f6e5d2acca94613ffffffffff10612d3a57605590506132a1565b817002eb40f9f620fda6b56c2861ffffffffff10612d5b57605690506132a1565b817002cc8340ecb0d0f520a6af58ffffffffff10612d7c57605790506132a1565b817002af09481380a0a35cf1ba02ffffffffff10612d9d57605890506132a1565b81700292c5bdd3b92ec810287b1b3fffffffff10612dbe57605990506132a1565b81700277abdcdab07d5a77ac6d6b9fffffffff10612ddf57605a90506132a1565b8170025daf6654b1eaa55fd64df5efffffffff10612e0057605b90506132a1565b81700244c49c648baa98192dce88b7ffffffff10612e2157605c90506132a1565b8170022ce03cd5619a311b2471268bffffffff10612e4257605d90506132a1565b81700215f77c045fbe885654a44a0fffffffff10612e6357605e90506132a1565b817001ffffffffffffffffffffffffffffffff10612e8457605f90506132a1565b817001eaefdbdaaee7421fc4d3ede5ffffffff10612ea557606090506132a1565b817001d6bd8b2eb257df7e8ca57b09bfffffff10612ec657606190506132a1565b817001c35fedd14b861eb0443f7f133fffffff10612ee757606290506132a1565b817001b0ce43b322bcde4a56e8ada5afffffff10612f0857606390506132a1565b8170019f0028ec1fff007f5a195a39dfffffff10612f2957606490506132a1565b8170018ded91f0e72ee74f49b15ba527ffffff10612f4a57606590506132a1565b8170017d8ec7f04136f4e5615fd41a63ffffff10612f6b57606690506132a1565b8170016ddc6556cdb84bdc8d12d22e6fffffff10612f8c57606790506132a1565b8170015ecf52776a1155b5bd8395814f7fffff10612fad57606890506132a1565b8170015060c256cb23b3b3cc3754cf40ffffff10612fce57606990506132a1565b817001428a2f98d728ae223ddab715be3fffff10612fef57606a90506132a1565b8170013545598e5c23276ccf0ede68034fffff1061301057606b90506132a1565b817001288c4161ce1d6f54b7f61081194fffff1061303157606c90506132a1565b8170011c592761c666aa641d5a01a40f17ffff1061305257606d90506132a1565b81700110a688680a7530515f3e6e6cfdcdffff1061307357606e90506132a1565b817001056f1b5bedf75c6bcb2ce8aed428ffff1061309457606f90506132a1565b816ffaadceceeff8a0890f3875f008277fff106130b457607090506132a1565b816ff05dc6b27edad306388a600f6ba0bfff106130d457607190506132a1565b816fe67a5a25da41063de1495d5b18cdbfff106130f457607290506132a1565b816fdcff115b14eedde6fc3aa5353f2e4fff1061311457607390506132a1565b816fd3e7a3924312399f9aae2e0f868f8fff1061313457607490506132a1565b816fcb2ff529eb71e41582cccd5a1ee26fff1061315457607590506132a1565b816fc2d415c3db974ab32a51840c0b67edff1061317457607690506132a1565b816fbad03e7d883f69ad5b0a186184e06bff1061319457607790506132a1565b816fb320d03b2c343d4829abd6075f0cc5ff106131b457607890506132a1565b816fabc25204e02828d73c6e80bcdb1a95bf106131d457607990506132a1565b816fa4b16f74ee4bb2040a1ec6c15fbbf2df106131f457607a90506132a1565b816f9deaf736ac1f569deb1b5ae3f36c130f1061321457607b90506132a1565b816f976bd9952c7aa957f5937d790ef650371061323457607c90506132a1565b816f9131271922eaa6064b73a22d0bd4f2bf1061325457607d90506132a1565b816f8b380f3558668c46c91c49a2f8e967b91061327457607e90506132a1565b816f857ddf0117efa215952912839f6473e61061329457607f90506132a1565b5f61329d575f80fd5b5f90505b919050565b5f808390505f8360ff1685836132bc9190613e11565b901c91506f03442c4e6074a82f1797f72ac0000000826132dc9190613e11565b816132e79190613d54565b90508360ff1685836132f99190613e11565b901c91506f0116b96f757c380fb287fd0e40000000826133199190613e11565b816133249190613d54565b90508360ff1685836133369190613e11565b901c91506e45ae5bdd5f0e03eca1ff4390000000826133559190613e11565b816133609190613d54565b90508360ff1685836133729190613e11565b901c91506e0defabf91302cd95b9ffda50000000826133919190613e11565b8161339c9190613d54565b90508360ff1685836133ae9190613e11565b901c91506e02529ca9832b22439efff9b8000000826133cd9190613e11565b816133d89190613d54565b90508360ff1685836133ea9190613e11565b901c91506d54f1cf12bd04e516b6da88000000826134089190613e11565b816134139190613d54565b90508360ff1685836134259190613e11565b901c91506d0a9e39e257a09ca2d6db51000000826134439190613e11565b8161344e9190613d54565b90508360ff1685836134609190613e11565b901c91506d012e066e7b839fa050c3090000008261347e9190613e11565b816134899190613d54565b90508360ff16858361349b9190613e11565b901c91506c1e33d7d926c329a1ad1a800000826134b89190613e11565b816134c39190613d54565b90508360ff1685836134d59190613e11565b901c91506c02bee513bdb4a6b19b5f800000826134f29190613e11565b816134fd9190613d54565b90508360ff16858361350f9190613e11565b901c91506b3a9316fa79b88eccf2a000008261352b9190613e11565b816135369190613d54565b90508360ff1685836135489190613e11565b901c91506b048177ebe1fa812375200000826135649190613e11565b8161356f9190613d54565b90508360ff1685836135819190613e11565b901c91506a5263fe90242dcbacf000008261359c9190613e11565b816135a79190613d54565b90508360ff1685836135b99190613e11565b901c91506a057e22099c030d94100000826135d49190613e11565b816135df9190613d54565b90508360ff1685836135f19190613e11565b901c91506957e22099c030d94100008261360b9190613e11565b816136169190613d54565b90508360ff1685836136289190613e11565b901c915069052b6b54569976310000826136429190613e11565b8161364d9190613d54565b90508360ff16858361365f9190613e11565b901c9150684985f67696bf748000826136789190613e11565b816136839190613d54565b90508360ff1685836136959190613e11565b901c91506803dea12ea99e498000826136ae9190613e11565b816136b99190613d54565b90508360ff1685836136cb9190613e11565b901c91506731880f2214b6e000826136e39190613e11565b816136ee9190613d54565b90508360ff1685836137009190613e11565b901c915067025bcff56eb36000826137189190613e11565b816137239190613d54565b90508360ff1685836137359190613e11565b901c9150661b722e10ab10008261374c9190613e11565b816137579190613d54565b90508360ff1685836137699190613e11565b901c91506601317c70077000826137809190613e11565b8161378b9190613d54565b90508360ff16858361379d9190613e11565b901c9150650cba84aafa00826137b39190613e11565b816137be9190613d54565b90508360ff1685836137d09190613e11565b901c91506482573a0a00826137e59190613e11565b816137f09190613d54565b90508360ff1685836138029190613e11565b901c91506405035ad900826138179190613e11565b816138229190613d54565b90508360ff1685836138349190613e11565b901c9150632f881b00826138489190613e11565b816138539190613d54565b90508360ff1685836138659190613e11565b901c91506301b29340826138799190613e11565b816138849190613d54565b90508360ff1685836138969190613e11565b901c9150620efc40826138a99190613e11565b816138b49190613d54565b90508360ff1685836138c69190613e11565b901c9150617fe0826138d89190613e11565b816138e39190613d54565b90508360ff1685836138f59190613e11565b901c9150610420826139079190613e11565b816139129190613d54565b90508360ff1685836139249190613e11565b901c91506021826139359190613e11565b816139409190613d54565b90508360ff1685836139529190613e11565b901c91506001826139639190613e11565b8161396e9190613d54565b90508360ff166001901b856f0688589cc0e9505e2f2fee5580000000836139959190613de1565b61399f9190613d54565b6139a99190613d54565b9250505092915050565b5f805f90506101008310156139ec575b60018311156139e757600183901c92506001816139e09190613cf3565b90506139c3565b613a2b565b5f608090505b5f8160ff161115613a29578060ff166001901b8410613a1a578060ff1684901c935080821791505b60018160ff16901c90506139f2565b505b80915050919050565b6040518060c001604052805f60ff1681526020015f60ff1681526020015f60ff1681526020015f60ff1681526020015f60ff1681526020015f81525090565b5f80fd5b5f80fd5b5f819050919050565b613a8d81613a7b565b8114613a97575f80fd5b50565b5f81359050613aa881613a84565b92915050565b5f819050919050565b613ac081613aae565b8114613aca575f80fd5b50565b5f81359050613adb81613ab7565b92915050565b5f8060408385031215613af757613af6613a73565b5b5f613b0485828601613a9a565b9250506020613b1585828601613acd565b9150509250929050565b613b2881613aae565b82525050565b5f602082019050613b415f830184613b1f565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112613b6857613b67613b47565b5b8235905067ffffffffffffffff811115613b8557613b84613b4b565b5b602083019150836020820283011115613ba157613ba0613b4f565b5b9250929050565b5f805f60408486031215613bbf57613bbe613a73565b5b5f613bcc86828701613a9a565b935050602084013567ffffffffffffffff811115613bed57613bec613a77565b5b613bf986828701613b53565b92509250509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60ff82169050919050565b5f613c7582613c5f565b915060ff8203613c8857613c87613c32565b5b600182019050919050565b5f613c9d82613aae565b9150613ca883613aae565b9250828203905081811115613cc057613cbf613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f613cfd82613c5f565b9150613d0883613c5f565b9250828201905060ff811115613d2157613d20613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f613d5e82613aae565b9150613d6983613aae565b9250828201905080821115613d8157613d80613c32565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613deb82613aae565b9150613df683613aae565b925082613e0657613e05613db4565b5b828204905092915050565b5f613e1b82613aae565b9150613e2683613aae565b9250828202613e3481613aae565b91508282048414831517613e4b57613e4a613c32565b5b5092915050565b5f613e5c82613c5f565b9150613e6783613c5f565b9250828203905060ff811115613e8057613e7f613c32565b5b92915050565b5f613e9082613c5f565b91505f8203613ea257613ea1613c32565b5b600182039050919050565b5f613eb782613aae565b9150613ec283613aae565b925082613ed257613ed1613db4565b5b82820690509291505056fea26469706673582212201f1b2f2308eff25ef3e1103b5687084e763b761014a325515204e4f43226777a64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DEC36E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8E501FC7 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x3BA8 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0xA7 DUP4 PUSH0 DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 DUP1 SLOAD SWAP1 POP EQ PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP3 DUP3 SWAP1 POP LT PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x248 JUMPI PUSH0 DUP4 DUP4 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xF5 JUMPI PUSH2 0xF4 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x15 PUSH1 0xFF AND DUP2 LT PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x3A34 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0xFF AND DUP3 SUB PUSH2 0x163 JUMPI DUP5 DUP5 DUP5 PUSH2 0x13C SWAP1 PUSH2 0x3C6B JUMP JUMPDEST SWAP5 POP DUP5 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP DUP1 PUSH2 0x241 SWAP1 PUSH2 0x3C6B JUMP JUMPDEST SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP PUSH0 PUSH2 0x254 DUP5 PUSH0 PUSH2 0x71F JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP2 PUSH1 0xFF AND EQ PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x293 JUMPI PUSH2 0x292 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x2CF JUMPI DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x2E7 JUMPI DUP4 SWAP3 POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x399 JUMPI PUSH0 PUSH2 0x311 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x33B PUSH1 0x2 PUSH2 0x32D PUSH1 0x1 DUP6 PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x38C JUMPI DUP2 SWAP1 POP PUSH2 0x385 PUSH1 0x2 PUSH2 0x377 DUP5 PUSH2 0x369 DUP7 DUP9 PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x342 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH1 0x9 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x545 JUMPI PUSH0 PUSH2 0x3D8 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3F6 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x424 JUMPI PUSH2 0x419 DUP2 DUP4 PUSH2 0x94C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x450 JUMPI PUSH2 0x445 DUP2 DUP4 PUSH2 0x987 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x47C JUMPI PUSH2 0x471 DUP2 DUP4 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x7 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x4A8 JUMPI PUSH2 0x49D DUP2 DUP4 PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x8 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x4F8 JUMPI PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH2 0x4DC DUP6 DUP4 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4C1 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x9 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x53E JUMPI PUSH2 0x533 PUSH8 0xDE0B6B3A7640000 PUSH2 0x525 DUP4 DUP6 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x972 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST POP POP PUSH2 0x714 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x5C1 JUMPI PUSH0 PUSH2 0x56F DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x59C JUMPI PUSH2 0x592 DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH2 0x5B7 DUP8 DUP5 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x640 JUMPI PUSH0 PUSH2 0x5EB DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x609 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x627 DUP10 DUP7 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH2 0x634 DUP4 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0x713 JUMPI PUSH0 PUSH2 0x66A DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x688 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A6 DUP10 DUP7 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6C4 DUP11 DUP8 PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH5 0x100000000 DUP2 LT PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x6E7 DUP6 DUP6 DUP6 PUSH3 0xF4240 PUSH2 0xD62 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0xFF AND PUSH2 0x702 DUP8 DUP5 PUSH2 0x9AD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 SHR SWAP9 POP POP POP POP POP POP POP POP POP PUSH2 0x718 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x749 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x775 DUP3 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x3CC6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP8 SWAP1 POP PUSH0 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x92B JUMPI PUSH0 DUP2 PUSH1 0xFF AND SUB PUSH2 0x811 JUMPI PUSH1 0x1 DUP3 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND SUB PUSH2 0x849 JUMPI PUSH1 0x1 DUP3 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF AND SUB PUSH2 0x881 JUMPI PUSH1 0x1 DUP3 PUSH2 0x861 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x1 DUP3 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP7 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8BD JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8D6 DUP11 PUSH1 0x1 DUP5 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP5 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x8EC JUMPI PUSH2 0x8EB PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x906 JUMPI PUSH2 0x905 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP DUP2 SWAP4 POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x7CC JUMP JUMPDEST POP PUSH0 PUSH2 0x937 DUP6 DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x999 JUMPI PUSH2 0x998 PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SUB PUSH2 0x9BD JUMPI PUSH0 SWAP1 POP PUSH2 0x9E7 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 POP DUP2 DUP4 DUP3 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST EQ PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x3D87 JUMP JUMPDEST JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xA59 JUMPI PUSH2 0xA4F DUP7 DUP4 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH2 0x9ED JUMP JUMPDEST ISZERO SWAP3 POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xA PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI POP PUSH1 0xF PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH0 PUSH2 0xA98 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAB6 DUP9 DUP6 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xAD4 JUMPI DUP1 DUP3 EQ SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xB PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xAF1 JUMPI DUP1 DUP3 EQ ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xC PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB0D JUMPI DUP1 DUP3 LT SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xD PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB29 JUMPI DUP1 DUP3 GT SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xE PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB46 JUMPI DUP1 DUP3 GT ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xF PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xB63 JUMPI DUP1 DUP3 LT ISZERO SWAP5 POP POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST POP POP PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x11 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC3A JUMPI PUSH0 PUSH2 0xBA9 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xBEF JUMPI DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH2 0xBDA DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH0 SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x11 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xC34 JUMPI DUP1 ISZERO PUSH2 0xC0F JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xC2A DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH2 0xC64 DUP8 DUP5 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC87 DUP8 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xCAC DUP8 DUP5 PUSH0 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP8 PUSH2 0x9ED JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xCBC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT ISZERO PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH16 0x80000000000000000000000000000000 DUP7 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 DUP2 LT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD1D DUP2 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xD2D DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP7 DUP4 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH17 0x200000000000000000000000000000000 DUP7 LT PUSH2 0xD80 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0xD8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH16 0x80000000000000000000000000000000 DUP10 PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI PUSH2 0xDD9 DUP2 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xDE9 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x800000000000000000000000000000000 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE34 DUP2 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x7F SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE74 JUMP JUMPDEST PUSH0 PUSH2 0xE4C DUP3 PUSH2 0x2643 JUMP JUMPDEST SWAP1 POP PUSH2 0xE6A DUP2 PUSH1 0x7F PUSH2 0xE5E SWAP2 SWAP1 PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0xFF AND DUP4 SWAP1 SHR DUP3 PUSH2 0x32A6 JUMP JUMPDEST DUP2 SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xE94 JUMPI PUSH0 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEAB JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEC2 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xED9 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND GT PUSH2 0xEF0 JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xEF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT PUSH2 0xF11 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xF72 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xF69 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0xFD2 JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0xFF0 JUMPI POP PUSH1 0x9 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1093 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x101C JUMPI PUSH2 0x101B PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1036 JUMPI PUSH2 0x1035 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x108A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0xA PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x10B1 JUMPI POP PUSH1 0xF PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1154 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1100 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x114B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x10 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI POP PUSH1 0x11 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1213 JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x118A JUMPI PUSH2 0x1189 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x119D JUMPI PUSH2 0x119C PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x11C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x11D3 JUMPI PUSH2 0x11D2 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x120A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x133C JUMPI PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x126A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12AB JUMPI PUSH2 0x12AA PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x12C8 JUMPI PUSH2 0x12C7 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12E2 JUMPI PUSH2 0x12E1 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH2 0x130F PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1319 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x13 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1433 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1394 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BB PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x13DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x142A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x1575 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1455 JUMPI PUSH2 0x1454 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1468 JUMPI PUSH2 0x1467 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x148B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14EA JUMPI PUSH2 0x14E9 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x3C05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x156C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP1 PUSH0 PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 DUP7 LT PUSH2 0x15F6 JUMPI PUSH16 0x40000000000000000000000000000000 DUP5 PUSH2 0x15BA SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 DUP7 LT PUSH2 0x1665 JUMPI PUSH16 0x20000000000000000000000000000000 DUP5 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 DUP7 LT PUSH2 0x16D4 JUMPI PUSH16 0x10000000000000000000000000000000 DUP5 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x16C7 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 DUP7 LT PUSH2 0x1743 JUMPI PUSH16 0x8000000000000000000000000000000 DUP5 PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x84102B00893F64C705E841D5D4064BD3 DUP7 LT PUSH2 0x17B2 JUMPI PUSH16 0x4000000000000000000000000000000 DUP5 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x84102B00893F64C705E841D5D4064BD3 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x17AF SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x8204055AAEF1C8BD5C3259F4822735A2 DUP7 LT PUSH2 0x1821 JUMPI PUSH16 0x2000000000000000000000000000000 DUP5 PUSH2 0x17E5 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x8204055AAEF1C8BD5C3259F4822735A2 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x181E SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x810100AB00222D861931C15E39B44E99 DUP7 LT PUSH2 0x1890 JUMPI PUSH16 0x1000000000000000000000000000000 DUP5 PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x810100AB00222D861931C15E39B44E99 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x808040155AABBBE9451521693554F733 DUP7 LT PUSH2 0x18FE JUMPI PUSH15 0x800000000000000000000000000000 DUP5 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x808040155AABBBE9451521693554F733 PUSH16 0x80000000000000000000000000000000 DUP8 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP7 PUSH2 0x191A SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP4 DUP5 PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 PUSH17 0x100000000000000000000000000000000 PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1982 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1997 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x19B6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x19C0 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A05 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1A2F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A39 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1A7E SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E PUSH2 0x1B5B SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1B66 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1B70 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1B7B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1BA4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B PUSH2 0x1BD4 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1BF4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1C13 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 PUSH2 0x1C4D SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C62 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1C6D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 PUSH2 0x1C8C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST DUP4 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST DUP5 PUSH2 0x1CE6 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP4 POP DUP4 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 LT PUSH2 0x1D64 JUMPI PUSH0 PUSH2 0x1D36 PUSH16 0x80000000000000000000000000000000 DUP6 PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP5 SWAP1 SHR SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 PUSH1 0xFF AND PUSH2 0x1D60 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP4 GT ISZERO PUSH2 0x1E0A JUMPI PUSH0 PUSH1 0x7F SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1E08 JUMPI PUSH16 0x80000000000000000000000000000000 DUP5 DUP6 PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP4 POP PUSH17 0x100000000000000000000000000000000 DUP5 LT PUSH2 0x1DF7 JUMPI PUSH1 0x1 DUP5 SWAP1 SHR SWAP4 POP PUSH1 0x1 DUP2 PUSH2 0x1DE2 SWAP2 SWAP1 PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP3 PUSH2 0x1DF4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x1E01 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D82 JUMP JUMPDEST POP JUMPDEST PUSH16 0x5B9DE1D10BF4103D647B0955897BA80 PUSH16 0x3F80FE03F80FE03F80FE03F80FE03F8 DUP3 PUSH2 0x1E37 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1E41 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 DUP1 PUSH16 0x10000000000000000000000000000000 DUP6 PUSH2 0x1E6C SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1E8E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x10E1B3BE415A0000 DUP2 PUSH2 0x1EAE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1EB9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1EE2 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x5A0913F6B1E0000 DUP2 PUSH2 0x1EF8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F03 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH8 0x168244FDAC78000 DUP2 PUSH2 0x1F42 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F4D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1F6C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0x4807432BC18000 DUP2 PUSH2 0x1F8B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x1FBF SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0xC0135DCA04000 DUP2 PUSH2 0x1FD4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x1FDF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x1FFE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2008 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH7 0x1B707B1CDC000 DUP2 PUSH2 0x201D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2028 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2047 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2051 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH6 0x36E0F639B800 DUP2 PUSH2 0x2065 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2070 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x208F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH6 0x618FEE9F800 DUP2 PUSH2 0x20AD SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x20B8 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x20D7 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0x9C197DCC00 DUP2 PUSH2 0x20F4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x20FF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0xE30DCE400 DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2146 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2165 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x216F SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH5 0x12EBD1300 DUP2 PUSH2 0x2182 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x218D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x21AC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x21B6 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH4 0x17499F00 DUP2 PUSH2 0x21C8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x21D3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x21F2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x21FC SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH4 0x1A9D480 DUP2 PUSH2 0x220E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x2219 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2238 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1C6380 DUP2 PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x225E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x227D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2287 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1C638 DUP2 PUSH2 0x2298 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x22A3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x22C2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x22CC SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB8 DUP2 PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x22E7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x2306 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2310 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C DUP2 PUSH2 0x2320 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x232B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2354 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 PUSH2 0x2363 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x236E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 PUSH2 0x238D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2397 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x23A6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP4 PUSH2 0x23B1 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 PUSH8 0x21C3677C82B40000 DUP6 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x23E3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH2 0x23ED SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP PUSH0 PUSH16 0x10000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2444 JUMPI PUSH17 0x18EBEF9EAC820AE8682B9793AC6D1E776 PUSH17 0x1C3D6A24ED82218787D624D3E5EBA95F9 DUP5 PUSH2 0x2437 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x20000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2499 JUMPI PUSH17 0x1368B2FC6F9609FE7ACEB46AA619BAED4 PUSH17 0x18EBEF9EAC820AE8682B9793AC6D1E778 DUP5 PUSH2 0x248C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2496 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x40000000000000000000000000000000 DUP7 AND EQ PUSH2 0x24ED JUMPI PUSH16 0xBC5AB1B16779BE3575BD8F0520A9F21F PUSH17 0x1368B2FC6F9609FE7ACEB46AA619BAED5 DUP5 PUSH2 0x24E0 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x24EA SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH16 0x80000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2540 JUMPI PUSH16 0x454AAA8EFE072E7F6DDBAB84B40A55C9 PUSH16 0xBC5AB1B16779BE3575BD8F0520A9F21E DUP5 PUSH2 0x2533 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x253D SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2594 JUMPI PUSH16 0x960AADC109E7A3BF4578099615711EA PUSH16 0x454AAA8EFE072E7F6DDBAB84B40A55C5 DUP5 PUSH2 0x2587 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2591 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x200000000000000000000000000000000 DUP7 AND EQ PUSH2 0x25E7 JUMPI PUSH15 0x2BF84208204F5977F9A8CF01FDCE3D PUSH16 0x960AADC109E7A3BF4578099615711D7 DUP5 PUSH2 0x25DA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x25E4 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 PUSH17 0x400000000000000000000000000000000 DUP7 AND EQ PUSH2 0x2638 JUMPI PUSH14 0x3C6AB775DD0B95B4CBEE7E65D11 PUSH15 0x2BF84208204F5977F9A8CF01FDC307 DUP5 PUSH2 0x262B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH2 0x2635 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH17 0x1C35FEDD14FFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2665 JUMPI PUSH1 0x20 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1B0CE43B323FFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2686 JUMPI PUSH1 0x21 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x19F0028EC1FFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26A7 JUMPI PUSH1 0x22 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x18DED91F0E7FFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26C8 JUMPI PUSH1 0x23 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x17D8EC7F0417FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x26E9 JUMPI PUSH1 0x24 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x16DDC6556CDBFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x270A JUMPI PUSH1 0x25 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15ECF52776A1FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x272B JUMPI PUSH1 0x26 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15060C256CB2FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x274C JUMPI PUSH1 0x27 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1428A2F98D72FFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x276D JUMPI PUSH1 0x28 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x13545598E5C23FFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x278E JUMPI PUSH1 0x29 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1288C4161CE1DFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27AF JUMPI PUSH1 0x2A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x11C592761C666FFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27D0 JUMPI PUSH1 0x2B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x110A688680A757FFFFFFFFFFFFFFFFFFFF LT PUSH2 0x27F1 JUMPI PUSH1 0x2C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1056F1B5BEDF77FFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2812 JUMPI PUSH1 0x2D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xFAADCECEEFF8BFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2833 JUMPI PUSH1 0x2E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xF05DC6B27EDADFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2854 JUMPI PUSH1 0x2F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xE67A5A25DA4107FFFFFFFFFFFFFFFFFFF LT PUSH2 0x2875 JUMPI PUSH1 0x30 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xDCFF115B14EEDFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2896 JUMPI PUSH1 0x31 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xD3E7A392431239FFFFFFFFFFFFFFFFFFF LT PUSH2 0x28B7 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xCB2FF529EB71E4FFFFFFFFFFFFFFFFFFF LT PUSH2 0x28D8 JUMPI PUSH1 0x33 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xC2D415C3DB974AFFFFFFFFFFFFFFFFFFF LT PUSH2 0x28F9 JUMPI PUSH1 0x34 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xBAD03E7D883F69BFFFFFFFFFFFFFFFFFF LT PUSH2 0x291A JUMPI PUSH1 0x35 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xB320D03B2C343D5FFFFFFFFFFFFFFFFFF LT PUSH2 0x293B JUMPI PUSH1 0x36 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xABC25204E02828DFFFFFFFFFFFFFFFFFF LT PUSH2 0x295C JUMPI PUSH1 0x37 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0xA4B16F74EE4BB207FFFFFFFFFFFFFFFFF LT PUSH2 0x297D JUMPI PUSH1 0x38 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x9DEAF736AC1F569FFFFFFFFFFFFFFFFFF LT PUSH2 0x299E JUMPI PUSH1 0x39 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x976BD9952C7AA957FFFFFFFFFFFFFFFFF LT PUSH2 0x29BF JUMPI PUSH1 0x3A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x9131271922EAA606FFFFFFFFFFFFFFFFF LT PUSH2 0x29E0 JUMPI PUSH1 0x3B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x8B380F3558668C46FFFFFFFFFFFFFFFFF LT PUSH2 0x2A01 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x857DDF0117EFA215BFFFFFFFFFFFFFFFF LT PUSH2 0x2A22 JUMPI PUSH1 0x3D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2A43 JUMPI PUSH1 0x3E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x7ABBF6F6ABB9D087FFFFFFFFFFFFFFFFF LT PUSH2 0x2A64 JUMPI PUSH1 0x3F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x75AF62CBAC95F7DFA7FFFFFFFFFFFFFFF LT PUSH2 0x2A85 JUMPI PUSH1 0x40 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x70D7FB7452E187AC13FFFFFFFFFFFFFFF LT PUSH2 0x2AA6 JUMPI PUSH1 0x41 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x6C3390ECC8AF379295FFFFFFFFFFFFFFF LT PUSH2 0x2AC7 JUMPI PUSH1 0x42 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x67C00A3B07FFC01FD6FFFFFFFFFFFFFFF LT PUSH2 0x2AE8 JUMPI PUSH1 0x43 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x637B647C39CBB9D3D27FFFFFFFFFFFFFF LT PUSH2 0x2B09 JUMPI PUSH1 0x44 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x5F63B1FC104DBD39587FFFFFFFFFFFFFF LT PUSH2 0x2B2A JUMPI PUSH1 0x45 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x5B771955B36E12F7235FFFFFFFFFFFFFF LT PUSH2 0x2B4B JUMPI PUSH1 0x46 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x57B3D49DDA84556D6F6FFFFFFFFFFFFFF LT PUSH2 0x2B6C JUMPI PUSH1 0x47 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x54183095B2C8ECECF30FFFFFFFFFFFFFF LT PUSH2 0x2B8D JUMPI PUSH1 0x48 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x50A28BE635CA2B888F77FFFFFFFFFFFFF LT PUSH2 0x2BAE JUMPI PUSH1 0x49 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4D5156639708C9DB33C3FFFFFFFFFFFFF LT PUSH2 0x2BCF JUMPI PUSH1 0x4A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4A23105873875BD52DFDFFFFFFFFFFFFF LT PUSH2 0x2BF0 JUMPI PUSH1 0x4B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x471649D87199AA990756FFFFFFFFFFFFF LT PUSH2 0x2C11 JUMPI PUSH1 0x4C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x4429A21A029D4C1457CFBFFFFFFFFFFFF LT PUSH2 0x2C32 JUMPI PUSH1 0x4D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x415BC6D6FB7DD71AF2CB3FFFFFFFFFFFF LT PUSH2 0x2C53 JUMPI PUSH1 0x4E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x3EAB73B3BBFE282243CE1FFFFFFFFFFFF LT PUSH2 0x2C74 JUMPI PUSH1 0x4F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x3C1771AC9FB6B4C18E229FFFFFFFFFFFF LT PUSH2 0x2C95 JUMPI PUSH1 0x50 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x399E96897690418F785257FFFFFFFFFFF LT PUSH2 0x2CB6 JUMPI PUSH1 0x51 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x373FC456C53BB779BF0EA9FFFFFFFFFFF LT PUSH2 0x2CD7 JUMPI PUSH1 0x52 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x34F9E8E490C48E67E6AB8BFFFFFFFFFFF LT PUSH2 0x2CF8 JUMPI PUSH1 0x53 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x32CBFD4A7ADC790560B3337FFFFFFFFFF LT PUSH2 0x2D19 JUMPI PUSH1 0x54 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x30B50570F6E5D2ACCA94613FFFFFFFFFF LT PUSH2 0x2D3A JUMPI PUSH1 0x55 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2EB40F9F620FDA6B56C2861FFFFFFFFFF LT PUSH2 0x2D5B JUMPI PUSH1 0x56 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2CC8340ECB0D0F520A6AF58FFFFFFFFFF LT PUSH2 0x2D7C JUMPI PUSH1 0x57 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x2AF09481380A0A35CF1BA02FFFFFFFFFF LT PUSH2 0x2D9D JUMPI PUSH1 0x58 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x292C5BDD3B92EC810287B1B3FFFFFFFFF LT PUSH2 0x2DBE JUMPI PUSH1 0x59 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x277ABDCDAB07D5A77AC6D6B9FFFFFFFFF LT PUSH2 0x2DDF JUMPI PUSH1 0x5A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x25DAF6654B1EAA55FD64DF5EFFFFFFFFF LT PUSH2 0x2E00 JUMPI PUSH1 0x5B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x244C49C648BAA98192DCE88B7FFFFFFFF LT PUSH2 0x2E21 JUMPI PUSH1 0x5C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x22CE03CD5619A311B2471268BFFFFFFFF LT PUSH2 0x2E42 JUMPI PUSH1 0x5D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x215F77C045FBE885654A44A0FFFFFFFFF LT PUSH2 0x2E63 JUMPI PUSH1 0x5E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT PUSH2 0x2E84 JUMPI PUSH1 0x5F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1EAEFDBDAAEE7421FC4D3EDE5FFFFFFFF LT PUSH2 0x2EA5 JUMPI PUSH1 0x60 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1D6BD8B2EB257DF7E8CA57B09BFFFFFFF LT PUSH2 0x2EC6 JUMPI PUSH1 0x61 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1C35FEDD14B861EB0443F7F133FFFFFFF LT PUSH2 0x2EE7 JUMPI PUSH1 0x62 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1B0CE43B322BCDE4A56E8ADA5AFFFFFFF LT PUSH2 0x2F08 JUMPI PUSH1 0x63 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x19F0028EC1FFF007F5A195A39DFFFFFFF LT PUSH2 0x2F29 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x18DED91F0E72EE74F49B15BA527FFFFFF LT PUSH2 0x2F4A JUMPI PUSH1 0x65 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x17D8EC7F04136F4E5615FD41A63FFFFFF LT PUSH2 0x2F6B JUMPI PUSH1 0x66 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x16DDC6556CDB84BDC8D12D22E6FFFFFFF LT PUSH2 0x2F8C JUMPI PUSH1 0x67 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15ECF52776A1155B5BD8395814F7FFFFF LT PUSH2 0x2FAD JUMPI PUSH1 0x68 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x15060C256CB23B3B3CC3754CF40FFFFFF LT PUSH2 0x2FCE JUMPI PUSH1 0x69 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1428A2F98D728AE223DDAB715BE3FFFFF LT PUSH2 0x2FEF JUMPI PUSH1 0x6A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x13545598E5C23276CCF0EDE68034FFFFF LT PUSH2 0x3010 JUMPI PUSH1 0x6B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1288C4161CE1D6F54B7F61081194FFFFF LT PUSH2 0x3031 JUMPI PUSH1 0x6C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x11C592761C666AA641D5A01A40F17FFFF LT PUSH2 0x3052 JUMPI PUSH1 0x6D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x110A688680A7530515F3E6E6CFDCDFFFF LT PUSH2 0x3073 JUMPI PUSH1 0x6E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH17 0x1056F1B5BEDF75C6BCB2CE8AED428FFFF LT PUSH2 0x3094 JUMPI PUSH1 0x6F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xFAADCECEEFF8A0890F3875F008277FFF LT PUSH2 0x30B4 JUMPI PUSH1 0x70 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xF05DC6B27EDAD306388A600F6BA0BFFF LT PUSH2 0x30D4 JUMPI PUSH1 0x71 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xE67A5A25DA41063DE1495D5B18CDBFFF LT PUSH2 0x30F4 JUMPI PUSH1 0x72 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xDCFF115B14EEDDE6FC3AA5353F2E4FFF LT PUSH2 0x3114 JUMPI PUSH1 0x73 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xD3E7A3924312399F9AAE2E0F868F8FFF LT PUSH2 0x3134 JUMPI PUSH1 0x74 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xCB2FF529EB71E41582CCCD5A1EE26FFF LT PUSH2 0x3154 JUMPI PUSH1 0x75 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xC2D415C3DB974AB32A51840C0B67EDFF LT PUSH2 0x3174 JUMPI PUSH1 0x76 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xBAD03E7D883F69AD5B0A186184E06BFF LT PUSH2 0x3194 JUMPI PUSH1 0x77 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xB320D03B2C343D4829ABD6075F0CC5FF LT PUSH2 0x31B4 JUMPI PUSH1 0x78 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xABC25204E02828D73C6E80BCDB1A95BF LT PUSH2 0x31D4 JUMPI PUSH1 0x79 SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0xA4B16F74EE4BB2040A1EC6C15FBBF2DF LT PUSH2 0x31F4 JUMPI PUSH1 0x7A SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x9DEAF736AC1F569DEB1B5AE3F36C130F LT PUSH2 0x3214 JUMPI PUSH1 0x7B SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x976BD9952C7AA957F5937D790EF65037 LT PUSH2 0x3234 JUMPI PUSH1 0x7C SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x9131271922EAA6064B73A22D0BD4F2BF LT PUSH2 0x3254 JUMPI PUSH1 0x7D SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x8B380F3558668C46C91C49A2F8E967B9 LT PUSH2 0x3274 JUMPI PUSH1 0x7E SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST DUP2 PUSH16 0x857DDF0117EFA215952912839F6473E6 LT PUSH2 0x3294 JUMPI PUSH1 0x7F SWAP1 POP PUSH2 0x32A1 JUMP JUMPDEST PUSH0 PUSH2 0x329D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SWAP1 POP PUSH0 DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x32BC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH16 0x3442C4E6074A82F1797F72AC0000000 DUP3 PUSH2 0x32DC SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x32E7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x32F9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH16 0x116B96F757C380FB287FD0E40000000 DUP3 PUSH2 0x3319 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3324 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3336 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0x45AE5BDD5F0E03ECA1FF4390000000 DUP3 PUSH2 0x3355 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3360 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3372 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0xDEFABF91302CD95B9FFDA50000000 DUP3 PUSH2 0x3391 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x339C SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x33AE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH15 0x2529CA9832B22439EFFF9B8000000 DUP3 PUSH2 0x33CD SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x33D8 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x33EA SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0x54F1CF12BD04E516B6DA88000000 DUP3 PUSH2 0x3408 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3413 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3425 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0xA9E39E257A09CA2D6DB51000000 DUP3 PUSH2 0x3443 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x344E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3460 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH14 0x12E066E7B839FA050C309000000 DUP3 PUSH2 0x347E SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3489 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x349B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH13 0x1E33D7D926C329A1AD1A800000 DUP3 PUSH2 0x34B8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x34C3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x34D5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH13 0x2BEE513BDB4A6B19B5F800000 DUP3 PUSH2 0x34F2 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x34FD SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x350F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH12 0x3A9316FA79B88ECCF2A00000 DUP3 PUSH2 0x352B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3536 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3548 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH12 0x48177EBE1FA812375200000 DUP3 PUSH2 0x3564 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x356F SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3581 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH11 0x5263FE90242DCBACF00000 DUP3 PUSH2 0x359C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x35A7 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x35B9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH11 0x57E22099C030D94100000 DUP3 PUSH2 0x35D4 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x35DF SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x35F1 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH10 0x57E22099C030D9410000 DUP3 PUSH2 0x360B SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3616 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3628 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH10 0x52B6B54569976310000 DUP3 PUSH2 0x3642 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x364D SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x365F SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH9 0x4985F67696BF748000 DUP3 PUSH2 0x3678 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3683 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3695 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH9 0x3DEA12EA99E498000 DUP3 PUSH2 0x36AE SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x36B9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x36CB SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH8 0x31880F2214B6E000 DUP3 PUSH2 0x36E3 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x36EE SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3700 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH8 0x25BCFF56EB36000 DUP3 PUSH2 0x3718 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3723 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3735 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH7 0x1B722E10AB1000 DUP3 PUSH2 0x374C SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3757 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3769 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH7 0x1317C70077000 DUP3 PUSH2 0x3780 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x378B SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH6 0xCBA84AAFA00 DUP3 PUSH2 0x37B3 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x37BE SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x37D0 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH5 0x82573A0A00 DUP3 PUSH2 0x37E5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x37F0 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3802 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH5 0x5035AD900 DUP3 PUSH2 0x3817 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3822 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3834 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH4 0x2F881B00 DUP3 PUSH2 0x3848 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3853 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3865 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH4 0x1B29340 DUP3 PUSH2 0x3879 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3884 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3896 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH3 0xEFC40 DUP3 PUSH2 0x38A9 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x38B4 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x38C6 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH2 0x7FE0 DUP3 PUSH2 0x38D8 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x38E3 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x38F5 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH2 0x420 DUP3 PUSH2 0x3907 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3912 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3924 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH1 0x21 DUP3 PUSH2 0x3935 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x3940 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND DUP6 DUP4 PUSH2 0x3952 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0x3963 SWAP2 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST DUP2 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP6 PUSH16 0x688589CC0E9505E2F2FEE5580000000 DUP4 PUSH2 0x3995 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH2 0x399F SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST PUSH2 0x39A9 SWAP2 SWAP1 PUSH2 0x3D54 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH2 0x100 DUP4 LT ISZERO PUSH2 0x39EC JUMPI JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH2 0x39E7 JUMPI PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x1 DUP2 PUSH2 0x39E0 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x39C3 JUMP JUMPDEST PUSH2 0x3A2B JUMP JUMPDEST PUSH0 PUSH1 0x80 SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x3A29 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP5 LT PUSH2 0x3A1A JUMPI DUP1 PUSH1 0xFF AND DUP5 SWAP1 SHR SWAP4 POP DUP1 DUP3 OR SWAP2 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND SWAP1 SHR SWAP1 POP PUSH2 0x39F2 JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8D DUP2 PUSH2 0x3A7B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AA8 DUP2 PUSH2 0x3A84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC0 DUP2 PUSH2 0x3AAE JUMP JUMPDEST DUP2 EQ PUSH2 0x3ACA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3ADB DUP2 PUSH2 0x3AB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AF7 JUMPI PUSH2 0x3AF6 PUSH2 0x3A73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B04 DUP6 DUP3 DUP7 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B15 DUP6 DUP3 DUP7 ADD PUSH2 0x3ACD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B28 DUP2 PUSH2 0x3AAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B41 PUSH0 DUP4 ADD DUP5 PUSH2 0x3B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3B68 JUMPI PUSH2 0x3B67 PUSH2 0x3B47 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B85 JUMPI PUSH2 0x3B84 PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3BA1 JUMPI PUSH2 0x3BA0 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BBF JUMPI PUSH2 0x3BBE PUSH2 0x3A73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BCC DUP7 DUP3 DUP8 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BED JUMPI PUSH2 0x3BEC PUSH2 0x3A77 JUMP JUMPDEST JUMPDEST PUSH2 0x3BF9 DUP7 DUP3 DUP8 ADD PUSH2 0x3B53 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3C75 DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x3C88 JUMPI PUSH2 0x3C87 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3C9D DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA8 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3CC0 JUMPI PUSH2 0x3CBF PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3CFD DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D08 DUP4 PUSH2 0x3C5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3D21 JUMPI PUSH2 0x3D20 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3D5E DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3D69 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D81 JUMPI PUSH2 0x3D80 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3DEB DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3DF6 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3E06 JUMPI PUSH2 0x3E05 PUSH2 0x3DB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E1B DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3E26 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3E34 DUP2 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3E4B JUMPI PUSH2 0x3E4A PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E5C DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH2 0x3E67 DUP4 PUSH2 0x3C5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3E80 JUMPI PUSH2 0x3E7F PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E90 DUP3 PUSH2 0x3C5F JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x3EA2 JUMPI PUSH2 0x3EA1 PUSH2 0x3C32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3EB7 DUP3 PUSH2 0x3AAE JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC2 DUP4 PUSH2 0x3AAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3ED2 JUMPI PUSH2 0x3ED1 PUSH2 0x3DB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SHL 0x2F 0x23 ADDMOD 0xEF CALLCODE 0x5E RETURN 0xE1 LT EXTCODESIZE JUMP DUP8 ADDMOD 0x4E PUSH23 0x3B761014A325515204E4F43226777A64736F6C63430008 OR STOP CALLER ",
							"sourceMap": "153:13340:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4685:814;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5576:134;5655:7;5678:26;5688:4;5694:1;5697:6;5678:9;:26::i;:::-;5671:33;;5576:134;;;;:::o;4685:814::-;4870:1;4855:4;:11;;;;:16;4847:25;;;;;;4987:3;4965:12;;:19;;:25;4957:34;;;;;;5003:9;4998:395;5024:12;;:19;;5018:3;:25;;;4998:395;;;5061:14;5078:12;;5091:3;5078:17;;;;;;;;;:::i;:::-;;;;;;;;5061:34;;4517:2;5112:23;;:6;:23;5104:32;;;;;;5145:16;;:::i;:::-;5190:6;5170:4;:11;;:27;;;;;;;;;;;3779:1;5285:22;;:6;:22;5281:81;;5333:12;;5346:5;;;;:::i;:::-;;;;5333:19;;;;;;;;;:::i;:::-;;;;;;;;5320:4;:10;;:32;;;;;5281:81;5370:4;5380;5370:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5052:341;;5045:5;;;;:::i;:::-;;;4998:395;;;;5400:19;5424:21;5437:4;5443:1;5424:12;:21::i;:::-;5399:46;;;5491:1;5477:4;:11;;;;:15;;;;:::i;:::-;5460:13;:32;;;5452:41;;;;;;4762:737;4685:814;;;:::o;9318:2547::-;9416:7;9435:17;9455:4;9460:7;9455:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;9435:33;;9475:12;9490:4;:11;;;;;;;;;;;;9475:26;;3779:1;9512:22;;:6;:22;;;9508:2337;;9552:4;:10;;;9545:17;;;;;;9508:2337;3813:1;9580:20;;:6;:20;;;9576:2269;;9618:6;9611:13;;;;;;9576:2269;3848:1;9642:21;;:6;:21;;;9638:2207;;9674:18;9695:36;9705:4;9711;:11;;;;;;;;;;;;9724:6;9695:9;:36::i;:::-;9674:57;;9740:12;9755:24;9777:1;9755:17;9770:1;9755:10;:14;;:17;;;;:::i;:::-;:21;;:24;;;;:::i;:::-;9740:39;;9788:14;9805:10;9788:27;;9824:111;9838:6;9831:4;:13;9824:111;;;9866:4;9857:13;;9888:37;9923:1;9888:30;9913:4;9888:20;9903:4;9888:10;:14;;:20;;;;:::i;:::-;:24;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;9881:44;;9824:111;;;9950:6;9943:13;;;;;;;;;9638:2207;3916:1;9974:20;;:6;:20;;;;:44;;;;;4086:1;9998:20;;:6;:20;;;;9974:44;9970:1875;;;10029:17;10049:36;10059:4;10065;:11;;;;;;;;;;;;10078:6;10049:9;:36::i;:::-;10029:56;;10094:18;10115:36;10125:4;10131;:11;;;;;;;;;;;;10144:6;10115:9;:36::i;:::-;10094:57;;3916:1;10164:20;;:6;:20;;;10160:680;;10204:25;10218:10;10204:9;:13;;:25;;;;:::i;:::-;10197:32;;;;;;;;10160:680;3950:1;10249:20;;:6;:20;;;10245:595;;10289:25;10303:10;10289:9;:13;;:25;;;;:::i;:::-;10282:32;;;;;;;;10245:595;3984:1;10334:20;;:6;:20;;;10330:510;;10374:25;10388:10;10374:9;:13;;:25;;;;:::i;:::-;10367:32;;;;;;;;10330:510;4018:1;10419:20;;:6;:20;;;10415:425;;10459:25;10473:10;10459:9;:13;;:25;;;;:::i;:::-;10452:32;;;;;;;;10415:425;4052:1;10504:20;;:6;:20;;;10500:340;;10537:13;10553:10;10537:26;;10574:17;10594:1;10574:21;;10611:11;10606:103;10634:5;10628:3;:11;10606:103;;;10673:24;10687:9;10673;:13;;:24;;;;:::i;:::-;10661:36;;10641:5;;;;;10606:103;;;;10726:9;10719:16;;;;;;;;;;10500:340;4086:1;10755:20;;:6;:20;;;10751:89;;10795:35;10825:4;10795:25;10809:10;10795:9;:13;;:25;;;;:::i;:::-;:29;;:35;;;;:::i;:::-;10788:42;;;;;;;;10751:89;10020:827;;9970:1875;;;4392:2;10857:19;;:6;:19;;;10853:992;;10887:14;10904:36;10914:4;10920;:11;;;;;;;;;;;;10933:6;10904:9;:36::i;:::-;10887:53;;10953:9;10949:115;;;10971:36;10981:4;10987;:11;;;;;;;;;;;;11000:6;10971:9;:36::i;:::-;10964:43;;;;;;;10949:115;11028:36;11038:4;11044;:11;;;;;;;;;;;;11057:6;11028:9;:36::i;:::-;11021:43;;;;;;;10853:992;4434:2;11082:27;;:6;:27;;;11078:767;;11120:18;11141:36;11151:4;11157;:11;;;;;;;;;;;;11170:6;11141:9;:36::i;:::-;11120:57;;11186:13;11202:36;11212:4;11218;:11;;;;;;;;;;;;11231:6;11202:9;:36::i;:::-;11186:52;;11247:13;11263:36;11273:4;11279;:11;;;;;;;;;;;;11292:6;11263:9;:36::i;:::-;11247:52;;11315:41;11331:10;11343:5;11350;11315:15;:41::i;:::-;11308:48;;;;;;;;;11078:767;4478:2;11374:29;;:6;:29;;;11370:475;;11414:18;11435:36;11445:4;11451;:11;;;;;;;;;;;;11464:6;11435:9;:36::i;:::-;11414:57;;11480:13;11496:36;11506:4;11512;:11;;;;;;;;;;;;11525:6;11496:9;:36::i;:::-;11480:52;;11541:13;11557:36;11567:4;11573;:11;;;;;;;;;;;;11586:6;11557:9;:36::i;:::-;11541:52;;11602:12;11617:36;11627:4;11633;:11;;;;;;;;;;;;11646:6;11617:9;:36::i;:::-;11602:51;;11677:7;11670:4;:14;11662:23;;;;;;11695:17;11714:15;11733:50;11751:5;11758;11772:4;11779:3;11733:17;:50::i;:::-;11694:89;;;;11828:9;11799:38;;:25;11813:10;11799:9;:13;;:25;;;;:::i;:::-;:38;;11792:45;;;;;;;;;;;;11370:475;9970:1875;11851:8;;;9318:2547;;;;;;:::o;8414:896::-;8503:5;8510:8;8557:4;:11;;;;8538:16;:30;;;8530:39;;;;;;8576:17;8596:4;8601:16;8596:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;8576:42;;8625:12;8640:4;:11;;;;;;;;;;;;8625:26;;8658:19;8680:24;8697:6;8680:16;:24::i;:::-;8658:46;;8711:31;8760:13;8745:29;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:63;;8781:17;8801:16;8781:36;;8829:9;8824:381;8850:13;8844:19;;:3;:19;;;8824:381;;;8892:1;8885:3;:8;;;8881:236;;8923:1;8909:11;:15;;;;:::i;:::-;8895:4;:11;;;:29;;;;;;;;;;;;;;;;;;8881:236;;;8949:1;8942:3;:8;;;8938:179;;8980:1;8966:11;:15;;;;:::i;:::-;8952:4;:11;;;:29;;;;;;;;;;;;;;;;;;8938:179;;;9006:1;8999:3;:8;;;8995:122;;9037:1;9023:11;:15;;;;:::i;:::-;9009:4;:11;;;:29;;;;;;;;;;;;;;;;;;8995:122;;;9063:1;9056:3;:8;;;9052:65;;9094:1;9080:11;:15;;;;:::i;:::-;9066:4;:11;;;:29;;;;;;;;;;;;;;;;;;9052:65;;;9109:8;;;9052:65;8995:122;8938:179;8881:236;9162:35;9175:4;9195:1;9181:11;:15;;;;:::i;:::-;9162:12;:35::i;:::-;9140:13;9154:3;9140:18;;;;;;;;;;:::i;:::-;;;;;;;9126:71;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;8865:5;;;;;8824:381;;;;9211:17;9231:36;9245:6;9253:13;9231;:36::i;:::-;9211:56;;9282:11;9295:8;9274:30;;;;;;;;;;8414:896;;;;;:::o;1041:123:2:-;1099:9;1124:1;1120;:5;;;;:::i;:::-;1116:9;;1143:1;1138;:6;;1131:14;;;;:::i;:::-;;1041:123;;;;:::o;485:272::-;543:7;751:1;747;:5;;;;:::i;:::-;740:12;;485:272;;;;:::o;869:110::-;927:7;954:1;949;:6;;942:14;;;;:::i;:::-;;973:1;969;:5;;;;:::i;:::-;962:12;;869:110;;;;:::o;236:167::-;294:9;320:1;315;:6;311:35;;338:1;331:8;;;;311:35;359:1;355;:5;;;;:::i;:::-;351:9;;382:1;377;373;:5;;;;:::i;:::-;:10;366:18;;;;:::i;:::-;;236:167;;;;;:::o;11871:1619:1:-;11969:4;11985:17;12005:4;12010:7;12005:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;11985:33;;12025:12;12040:4;:11;;;;;;;;;;;;12025:26;;3882:1;12062:20;;:6;:20;;;12058:1412;;12101:36;12111:4;12117;:11;;;;;;;;;;;;12130:6;12101:9;:36::i;:::-;12100:37;12093:44;;;;;;12058:1412;4119:2;12155:19;;:6;:19;;;;:42;;;;;4289:2;12178:19;;:6;:19;;;;12155:42;12151:1319;;;12208:17;12228:36;12238:4;12244;:11;;;;;;;;;;;;12257:6;12228:9;:36::i;:::-;12208:56;;12273:18;12294:36;12304:4;12310;:11;;;;;;;;;;;;12323:6;12294:9;:36::i;:::-;12273:57;;4119:2;12343:19;;:6;:19;;;12339:484;;12395:10;12382:9;:23;12375:30;;;;;;;;12339:484;4153:2;12425:19;;:6;:19;;;12421:402;;12477:10;12464:9;:23;;12457:30;;;;;;;;12421:402;4187:2;12507:19;;:6;:19;;;12503:320;;12558:10;12546:9;:22;12539:29;;;;;;;;12503:320;4221:2;12588:19;;:6;:19;;;12584:239;;12639:10;12627:9;:22;12620:29;;;;;;;;12584:239;4255:2;12669:19;;:6;:19;;;12665:158;;12721:10;12708:9;:23;;12701:30;;;;;;;;12665:158;4289:2;12751:19;;:6;:19;;;12747:76;;12803:10;12790:9;:23;;12783:30;;;;;;;;12747:76;12199:631;;12151:1319;;;4324:2;12840:20;;:6;:20;;;;:43;;;;;4358:2;12864:19;;:6;:19;;;;12840:43;12836:634;;;12894:18;12915:36;12925:4;12931;:11;;;;;;;;;;;;12944:6;12915:9;:36::i;:::-;12894:57;;4324:2;12964:20;;:6;:20;;;12960:278;;13001:13;12997:90;;;13023:36;13033:4;13039;:11;;;;;;;;;;;;13052:6;13023:9;:36::i;:::-;13016:43;;;;;;;12997:90;13082:5;13075:12;;;;;;;12960:278;4358:2;13107:19;;:6;:19;;;13103:135;;13143:13;13139:89;;;13165:4;13158:11;;;;;;;13139:89;13192:36;13202:4;13208;:11;;;;;;;;;;;;13221:6;13192:9;:36::i;:::-;13185:43;;;;;;;13103:135;12885:360;12836:634;;;4392:2;13255:19;;:6;:19;;;13251:219;;13285:14;13302:36;13312:4;13318;:11;;;;;;;;;;;;13331:6;13302:9;:36::i;:::-;13285:53;;13351:9;13347:115;;;13369:36;13379:4;13385;:11;;;;;;;;;;;;13398:6;13369:9;:36::i;:::-;13362:43;;;;;;;13347:115;13426:36;13436:4;13442;:11;;;;;;;;;;;;13455:6;13426:9;:36::i;:::-;13419:43;;;;;;;13251:219;12836:634;12151:1319;13476:8;;;11871:1619;;;;;;:::o;4130:444:0:-;4210:7;4286:6;4276;:16;;4268:25;;;;;;4306:15;4332:12;4366:6;1106:35;4347:6;:16;;;;:::i;:::-;:25;;;;:::i;:::-;4332:40;;1695:35;4387:4;:22;4383:140;;;4436:16;4447:4;4436:10;:16::i;:::-;4426:26;;4383:140;;;4495:16;4506:4;4495:10;:16::i;:::-;4485:26;;4383:140;1106:35;4553:2;4543:7;:12;;;;:::i;:::-;4542:24;;;;:::i;:::-;4535:31;;;;4130:444;;;;;:::o;3250:827::-;3348:7;3357:5;1260:35;3383:6;:16;3375:25;;;;;;3429:6;3419;:16;;3411:25;;;;;;3449:15;3475:12;3509:6;1106:35;3490:6;:16;;;;:::i;:::-;:25;;;;:::i;:::-;3475:40;;1695:35;3530:4;:22;3526:149;;;3579:16;3590:4;3579:10;:16::i;:::-;3569:26;;3526:149;;;3647:16;3658:4;3647:10;:16::i;:::-;3637:26;;3526:149;3687:23;3731:5;3713:23;;3723:5;3713:15;;:7;:15;;;;:::i;:::-;:23;;;;:::i;:::-;3687:49;;1780:35;3751:15;:33;3747:323;;;3809:27;3820:15;3809:10;:27::i;:::-;986:3;3801:51;;;;;;;;;3747:323;3894:15;3912:42;3938:15;3912:25;:42::i;:::-;3894:60;;3977:69;4024:9;986:3;4008:25;;;;:::i;:::-;3988:46;;:15;:46;;4036:9;3977:10;:69::i;:::-;4048:9;3969:89;;;;;;;;3250:827;;;;;;;;:::o;5780:390:1:-;5842:5;3813:1;5860:20;;:6;:20;;;5856:294;;5898:1;5891:8;;;;5856:294;3882:1;5917:20;;:6;:20;;;5913:237;;5955:1;5948:8;;;;5913:237;4358:2;5974:19;;:6;:19;;;5970:180;;6011:1;6004:8;;;;5970:180;4434:2;6030:27;;:6;:27;;;6026:124;;6075:1;6068:8;;;;6026:124;4478:2;6094:29;;:6;:29;;;6090:60;;6141:1;6134:8;;;;6090:60;6156:8;;;5780:390;;;;:::o;6269:1617::-;6358:8;3813:1;6382:20;;:6;:20;;;6378:1488;;6420:13;6413:20;;;;6378:1488;3848:1;6451:21;;:6;:21;;;6447:1419;;6503:13;6491:25;;;;;;;;:::i;:::-;;:5;6497:1;6491:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;6483:34;;;;;;6533:13;6526:20;;;;6447:1419;3882:1;6564:20;;:6;:20;;;6560:1306;;6615:16;6603:28;;;;;;;;:::i;:::-;;:5;6609:1;6603:8;;;;;;;;:::i;:::-;;;;;;;;:28;;;;;;;;:::i;:::-;;;6595:37;;;;;;6648:16;6641:23;;;;6560:1306;3916:1;6682:20;;:6;:20;;;;:44;;;;;4086:1;6706:20;;:6;:20;;;;6682:44;6678:1188;;;6757:13;6745:25;;;;;;;;:::i;:::-;;:5;6751:1;6745:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;6737:34;;;;;;6800:13;6788:25;;;;;;;;:::i;:::-;;:5;6794:1;6788:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;6780:34;;;;;;6830:13;6823:20;;;;6678:1188;4119:2;6861:19;;:6;:19;;;;:42;;;;;4289:2;6884:19;;:6;:19;;;;6861:42;6857:1009;;;6934:13;6922:25;;;;;;;;:::i;:::-;;:5;6928:1;6922:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;6914:34;;;;;;6977:13;6965:25;;;;;;;;:::i;:::-;;:5;6971:1;6965:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;6957:34;;;;;;7007:16;7000:23;;;;6857:1009;4324:2;7041:20;;:6;:20;;;;:43;;;;;4358:2;7065:19;;:6;:19;;;;7041:43;7037:829;;;7115:16;7103:28;;;;;;;;:::i;:::-;;:5;7109:1;7103:8;;;;;;;;:::i;:::-;;;;;;;;:28;;;;;;;;:::i;:::-;;;7095:37;;;;;;7161:16;7149:28;;;;;;;;:::i;:::-;;:5;7155:1;7149:8;;;;;;;;:::i;:::-;;;;;;;;:28;;;;;;;;:::i;:::-;;;7141:37;;;;;;7194:16;7187:23;;;;7037:829;4392:2;7228:19;;:6;:19;;;7224:642;;7278:16;7266:28;;;;;;;;:::i;:::-;;:5;7272:1;7266:8;;;;;;;;:::i;:::-;;;;;;;;:28;;;;;;;;:::i;:::-;;;7258:37;;;;;;7324:16;7312:28;;;;;;;;:::i;:::-;;:5;7318:1;7312:8;;;;;;;;:::i;:::-;;;;;;;;:28;;;;;;;;:::i;:::-;;;7304:37;;;;;;7370:5;7376:1;7370:8;;;;;;;;:::i;:::-;;;;;;;;7358:20;;;;;;;;:::i;:::-;;:5;7364:1;7358:8;;;;;;;;:::i;:::-;;;;;;;;:20;;;;;;;;:::i;:::-;;;7350:29;;;;;;7395:5;7401:1;7395:8;;;;;;;;:::i;:::-;;;;;;;;7388:15;;;;7224:642;4434:2;7421:27;;:6;:27;;;7417:449;;7479:13;7467:25;;;;;;;;:::i;:::-;;:5;7473:1;7467:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7459:34;;;;;;7522:13;7510:25;;;;;;;;:::i;:::-;;:5;7516:1;7510:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7502:34;;;;;;7565:13;7553:25;;;;;;;;:::i;:::-;;:5;7559:1;7553:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7545:34;;;;;;7595:13;7588:20;;;;7417:449;4478:2;7626:29;;:6;:29;;;7622:244;;7686:13;7674:25;;;;;;;;:::i;:::-;;:5;7680:1;7674:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7666:34;;;;;;7729:13;7717:25;;;;;;;;:::i;:::-;;:5;7723:1;7717:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7709:34;;;;;;7772:13;7760:25;;;;;;;;:::i;:::-;;:5;7766:1;7760:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7752:34;;;;;;7815:13;7803:25;;;;;;;;:::i;:::-;;:5;7809:1;7803:8;;;;;;;;:::i;:::-;;;;;;;;:25;;;;;;;;:::i;:::-;;;7795:34;;;;;;7845:13;7838:20;;;;7622:244;7872:8;;;6269:1617;;;;;:::o;18519:2798:0:-;18573:7;18593:11;18607:1;18593:15;;18621:9;18641;18661;18692:34;18687:1;:39;18683:143;;18736:34;18729:41;;;;;:::i;:::-;;;18790:34;1106:35;18776:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;18772:52;;18683:143;18860:34;18855:1;:39;18851:143;;18904:34;18897:41;;;;;:::i;:::-;;;18958:34;1106:35;18944:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;18940:52;;18851:143;19028:34;19023:1;:39;19019:143;;19072:34;19065:41;;;;;:::i;:::-;;;19126:34;1106:35;19112:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19108:52;;19019:143;19196:34;19191:1;:39;19187:143;;19240:34;19233:41;;;;;:::i;:::-;;;19294:34;1106:35;19280:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19276:52;;19187:143;19364:34;19359:1;:39;19355:143;;19408:34;19401:41;;;;;:::i;:::-;;;19462:34;1106:35;19448:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19444:52;;19355:143;19532:34;19527:1;:39;19523:143;;19576:34;19569:41;;;;;:::i;:::-;;;19630:34;1106:35;19616:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19612:52;;19523:143;19700:34;19695:1;:39;19691:143;;19744:34;19737:41;;;;;:::i;:::-;;;19798:34;1106:35;19784:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19780:52;;19691:143;19868:34;19863:1;:39;19859:143;;19912:34;19905:41;;;;;:::i;:::-;;;19966:34;1106:35;19952:1;:11;;;;:::i;:::-;:48;;;;:::i;:::-;19948:52;;19859:143;1106:35;20037:1;:11;;;;:::i;:::-;20033:15;;;20029:19;;1106:35;20067:1;20063;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20059:19;;20144:35;20139:1;20101:35;:39;;;;:::i;:::-;20096:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20089:90;;;;;:::i;:::-;;;1106:35;20189:1;20185;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20181:19;;20295:35;20290:1;20252:35;:39;;;;:::i;:::-;20247:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20240:90;;;;;:::i;:::-;;;1106:35;20340:1;20336;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20332:19;;20446:35;20441:1;20403:35;:39;;;;:::i;:::-;20398:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20391:90;;;;;:::i;:::-;;;1106:35;20491:1;20487;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20483:19;;20597:35;20592:1;20554:35;:39;;;;:::i;:::-;20549:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20542:90;;;;;:::i;:::-;;;1106:35;20642:1;20638;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20634:19;;20748:35;20743:1;20705:35;:39;;;;:::i;:::-;20700:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20693:90;;;;;:::i;:::-;;;1106:35;20793:1;20789;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20785:19;;20899:35;20894:1;20856:35;:39;;;;:::i;:::-;20851:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20844:90;;;;;:::i;:::-;;;1106:35;20944:1;20940;:5;;;;:::i;:::-;:15;;;;:::i;:::-;20936:19;;21050:35;21045:1;21007:35;:39;;;;:::i;:::-;21002:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;20995:90;;;;;:::i;:::-;;;1106:35;21095:1;21091;:5;;;;:::i;:::-;:15;;;;:::i;:::-;21087:19;;21201:35;21196:1;21158:35;:39;;;;:::i;:::-;21153:1;:45;;;;:::i;:::-;:83;;;;:::i;:::-;21146:90;;;;;:::i;:::-;;;21306:3;21299:10;;;;;;18519:2798;;;:::o;4745:823::-;4799:7;4819:11;4833:1;4819:15;;1183:35;4943:1;:12;4939:156;;4972:11;4986:22;1106:35;4996:1;:11;;;;:::i;:::-;4986:9;:22::i;:::-;4972:36;;5029:5;5023:11;;;;;;;1106:35;5068:5;:15;;;;;;:::i;:::-;5062:21;;4957:138;4939:156;1106:35;5203:1;:11;5199:305;;;5236:7;986:3;5236:23;;5231:262;5265:1;5261;:5;;;5231:262;;;1106:35;5301:1;5297;:5;;;;:::i;:::-;5296:17;;;;:::i;:::-;5292:21;;1183:35;5353:1;:12;5349:129;;5396:1;5390:7;;;;;5456:1;5452;:5;;;;:::i;:::-;5444:14;;840:1;5444:14;;5437:21;;;;;:::i;:::-;;;5349:129;5268:3;;;;:::i;:::-;;;5231:262;;;;5199:305;1503:33;1420;5523:3;:19;;;;:::i;:::-;:37;;;;:::i;:::-;5516:44;;;4745:823;;;:::o;22007:3216::-;22061:7;22081:11;22095:1;22081:15;;22109:9;22129;22163:34;22159:1;:38;;;;:::i;:::-;22155:42;;;22151:46;;1106:35;22247:1;22243;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22239:19;;22271:18;22267:1;:22;;;;:::i;:::-;22260:29;;;;;:::i;:::-;;;1106:35;22334:1;22330;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22326:19;;22358:18;22354:1;:22;;;;:::i;:::-;22347:29;;;;;:::i;:::-;;;1106:35;22421:1;22417;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22413:19;;22445:18;22441:1;:22;;;;:::i;:::-;22434:29;;;;;:::i;:::-;;;1106:35;22508:1;22504;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22500:19;;22532:18;22528:1;:22;;;;:::i;:::-;22521:29;;;;;:::i;:::-;;;1106:35;22595:1;22591;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22587:19;;22619:18;22615:1;:22;;;;:::i;:::-;22608:29;;;;;:::i;:::-;;;1106:35;22682:1;22678;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22674:19;;22706:18;22702:1;:22;;;;:::i;:::-;22695:29;;;;;:::i;:::-;;;1106:35;22769:1;22765;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22761:19;;22793:18;22789:1;:22;;;;:::i;:::-;22782:29;;;;;:::i;:::-;;;1106:35;22856:1;22852;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22848:19;;22880:18;22876:1;:22;;;;:::i;:::-;22869:29;;;;;:::i;:::-;;;1106:35;22943:1;22939;:5;;;;:::i;:::-;:15;;;;:::i;:::-;22935:19;;22967:18;22963:1;:22;;;;:::i;:::-;22956:29;;;;;:::i;:::-;;;1106:35;23030:1;23026;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23022:19;;23054:18;23050:1;:22;;;;:::i;:::-;23043:29;;;;;:::i;:::-;;;1106:35;23117:1;23113;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23109:19;;23141:18;23137:1;:22;;;;:::i;:::-;23130:29;;;;;:::i;:::-;;;1106:35;23204:1;23200;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23196:19;;23228:18;23224:1;:22;;;;:::i;:::-;23217:29;;;;;:::i;:::-;;;1106:35;23291:1;23287;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23283:19;;23315:18;23311:1;:22;;;;:::i;:::-;23304:29;;;;;:::i;:::-;;;1106:35;23378:1;23374;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23370:19;;23402:18;23398:1;:22;;;;:::i;:::-;23391:29;;;;;:::i;:::-;;;1106:35;23465:1;23461;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23457:19;;23489:18;23485:1;:22;;;;:::i;:::-;23478:29;;;;;:::i;:::-;;;1106:35;23552:1;23548;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23544:19;;23576:18;23572:1;:22;;;;:::i;:::-;23565:29;;;;;:::i;:::-;;;1106:35;23639:1;23635;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23631:19;;23663:18;23659:1;:22;;;;:::i;:::-;23652:29;;;;;:::i;:::-;;;1106:35;23726:1;23722;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23718:19;;23750:18;23746:1;:22;;;;:::i;:::-;23739:29;;;;;:::i;:::-;;;1106:35;23813:1;23809;:5;;;;:::i;:::-;:15;;;;:::i;:::-;23805:19;;23837:18;23833:1;:22;;;;:::i;:::-;23826:29;;;;;:::i;:::-;;;1106:35;23925:1;23904:18;23898:3;:24;;;;:::i;:::-;:28;;;;:::i;:::-;:38;;;;:::i;:::-;23892:44;;24048:1;24008:35;24004:1;:39;24003:46;23999:137;;24101:35;24063;24057:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24051:85;;23999:137;24220:1;24180:35;24176:1;:39;24175:46;24171:137;;24273:35;24235;24229:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24223:85;;24171:137;24392:1;24352:35;24348:1;:39;24347:46;24343:137;;24445:35;24407;24401:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24395:85;;24343:137;24564:1;24524:35;24520:1;:39;24519:46;24515:137;;24617:35;24579;24573:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24567:85;;24515:137;24736:1;24696:35;24692:1;:39;24691:46;24687:137;;24789:35;24751;24745:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24739:85;;24687:137;24908:1;24868:35;24864:1;:39;24863:46;24859:137;;24961:35;24923;24917:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;24911:85;;24859:137;25080:1;25040:35;25036:1;:39;25035:46;25031:137;;25133:35;25095;25089:3;:41;;;;:::i;:::-;:79;;;;:::i;:::-;25083:85;;25031:137;25212:3;25205:10;;;;;22007:3216;;;:::o;6600:6753::-;6670:5;6732:2;6692:36;:42;6688:58;;6744:2;6736:10;;;;6688:58;6801:2;6761:36;:42;6757:58;;6813:2;6805:10;;;;6757:58;6870:2;6830:36;:42;6826:58;;6882:2;6874:10;;;;6826:58;6939:2;6899:36;:42;6895:58;;6951:2;6943:10;;;;6895:58;7008:2;6968:36;:42;6964:58;;7020:2;7012:10;;;;6964:58;7077:2;7037:36;:42;7033:58;;7089:2;7081:10;;;;7033:58;7146:2;7106:36;:42;7102:58;;7158:2;7150:10;;;;7102:58;7215:2;7175:36;:42;7171:58;;7227:2;7219:10;;;;7171:58;7284:2;7244:36;:42;7240:58;;7296:2;7288:10;;;;7240:58;7353:2;7313:36;:42;7309:58;;7365:2;7357:10;;;;7309:58;7422:2;7382:36;:42;7378:58;;7434:2;7426:10;;;;7378:58;7491:2;7451:36;:42;7447:58;;7503:2;7495:10;;;;7447:58;7560:2;7520:36;:42;7516:58;;7572:2;7564:10;;;;7516:58;7629:2;7589:36;:42;7585:58;;7641:2;7633:10;;;;7585:58;7698:2;7658:36;:42;7654:58;;7710:2;7702:10;;;;7654:58;7767:2;7727:36;:42;7723:58;;7779:2;7771:10;;;;7723:58;7836:2;7796:36;:42;7792:58;;7848:2;7840:10;;;;7792:58;7905:2;7865:36;:42;7861:58;;7917:2;7909:10;;;;7861:58;7974:2;7934:36;:42;7930:58;;7986:2;7978:10;;;;7930:58;8043:2;8003:36;:42;7999:58;;8055:2;8047:10;;;;7999:58;8112:2;8072:36;:42;8068:58;;8124:2;8116:10;;;;8068:58;8181:2;8141:36;:42;8137:58;;8193:2;8185:10;;;;8137:58;8250:2;8210:36;:42;8206:58;;8262:2;8254:10;;;;8206:58;8319:2;8279:36;:42;8275:58;;8331:2;8323:10;;;;8275:58;8388:2;8348:36;:42;8344:58;;8400:2;8392:10;;;;8344:58;8457:2;8417:36;:42;8413:58;;8469:2;8461:10;;;;8413:58;8526:2;8486:36;:42;8482:58;;8538:2;8530:10;;;;8482:58;8595:2;8555:36;:42;8551:58;;8607:2;8599:10;;;;8551:58;8664:2;8624:36;:42;8620:58;;8676:2;8668:10;;;;8620:58;8733:2;8693:36;:42;8689:58;;8745:2;8737:10;;;;8689:58;8802:2;8762:36;:42;8758:58;;8814:2;8806:10;;;;8758:58;8871:2;8831:36;:42;8827:58;;8883:2;8875:10;;;;8827:58;8940:2;8900:36;:42;8896:58;;8952:2;8944:10;;;;8896:58;9009:2;8969:36;:42;8965:58;;9021:2;9013:10;;;;8965:58;9078:2;9038:36;:42;9034:58;;9090:2;9082:10;;;;9034:58;9147:2;9107:36;:42;9103:58;;9159:2;9151:10;;;;9103:58;9216:2;9176:36;:42;9172:58;;9228:2;9220:10;;;;9172:58;9285:2;9245:36;:42;9241:58;;9297:2;9289:10;;;;9241:58;9354:2;9314:36;:42;9310:58;;9366:2;9358:10;;;;9310:58;9423:2;9383:36;:42;9379:58;;9435:2;9427:10;;;;9379:58;9492:2;9452:36;:42;9448:58;;9504:2;9496:10;;;;9448:58;9561:2;9521:36;:42;9517:58;;9573:2;9565:10;;;;9517:58;9630:2;9590:36;:42;9586:58;;9642:2;9634:10;;;;9586:58;9699:2;9659:36;:42;9655:58;;9711:2;9703:10;;;;9655:58;9768:2;9728:36;:42;9724:58;;9780:2;9772:10;;;;9724:58;9837:2;9797:36;:42;9793:58;;9849:2;9841:10;;;;9793:58;9906:2;9866:36;:42;9862:58;;9918:2;9910:10;;;;9862:58;9975:2;9935:36;:42;9931:58;;9987:2;9979:10;;;;9931:58;10044:2;10004:36;:42;10000:58;;10056:2;10048:10;;;;10000:58;10113:2;10073:36;:42;10069:58;;10125:2;10117:10;;;;10069:58;10182:2;10142:36;:42;10138:58;;10194:2;10186:10;;;;10138:58;10251:2;10211:36;:42;10207:58;;10263:2;10255:10;;;;10207:58;10320:2;10280:36;:42;10276:58;;10332:2;10324:10;;;;10276:58;10389:2;10349:36;:42;10345:58;;10401:2;10393:10;;;;10345:58;10458:2;10418:36;:42;10414:58;;10470:2;10462:10;;;;10414:58;10527:2;10487:36;:42;10483:58;;10539:2;10531:10;;;;10483:58;10596:2;10556:36;:42;10552:58;;10608:2;10600:10;;;;10552:58;10665:2;10625:36;:42;10621:58;;10677:2;10669:10;;;;10621:58;10734:2;10694:36;:42;10690:58;;10746:2;10738:10;;;;10690:58;10803:2;10763:36;:42;10759:58;;10815:2;10807:10;;;;10759:58;10872:2;10832:36;:42;10828:58;;10884:2;10876:10;;;;10828:58;10941:2;10901:36;:42;10897:58;;10953:2;10945:10;;;;10897:58;11010:2;10970:36;:42;10966:58;;11022:2;11014:10;;;;10966:58;11079:2;11039:36;:42;11035:58;;11091:2;11083:10;;;;11035:58;11148:2;11108:36;:42;11104:58;;11160:2;11152:10;;;;11104:58;11217:2;11177:36;:42;11173:58;;11229:2;11221:10;;;;11173:58;11286:2;11246:36;:42;11242:58;;11298:2;11290:10;;;;11242:58;11355:2;11315:36;:42;11311:58;;11367:2;11359:10;;;;11311:58;11424:2;11384:36;:42;11380:58;;11435:3;11428:10;;;;11380:58;11493:2;11453:36;:42;11449:58;;11504:3;11497:10;;;;11449:58;11562:2;11522:36;:42;11518:58;;11573:3;11566:10;;;;11518:58;11631:2;11591:36;:42;11587:58;;11642:3;11635:10;;;;11587:58;11700:2;11660:36;:42;11656:58;;11711:3;11704:10;;;;11656:58;11769:2;11729:36;:42;11725:58;;11780:3;11773:10;;;;11725:58;11838:2;11798:36;:42;11794:58;;11849:3;11842:10;;;;11794:58;11907:2;11867:36;:42;11863:58;;11918:3;11911:10;;;;11863:58;11976:2;11936:36;:42;11932:58;;11987:3;11980:10;;;;11932:58;12045:2;12005:36;:42;12001:58;;12056:3;12049:10;;;;12001:58;12114:2;12074:36;:42;12070:58;;12125:3;12118:10;;;;12070:58;12183:2;12143:36;:42;12139:58;;12194:3;12187:10;;;;12139:58;12252:2;12212:36;:42;12208:58;;12263:3;12256:10;;;;12208:58;12321:2;12281:36;:42;12277:58;;12332:3;12325:10;;;;12277:58;12390:2;12350:36;:42;12346:58;;12401:3;12394:10;;;;12346:58;12459:2;12419:36;:42;12415:58;;12470:3;12463:10;;;;12415:58;12528:2;12488:36;:42;12484:58;;12539:3;12532:10;;;;12484:58;12597:2;12557:36;:42;12553:58;;12608:3;12601:10;;;;12553:58;12666:2;12626:36;:42;12622:58;;12677:3;12670:10;;;;12622:58;12735:2;12695:36;:42;12691:58;;12746:3;12739:10;;;;12691:58;12804:2;12764:36;:42;12760:58;;12815:3;12808:10;;;;12760:58;12873:2;12833:36;:42;12829:58;;12884:3;12877:10;;;;12829:58;12942:2;12902:36;:42;12898:58;;12953:3;12946:10;;;;12898:58;13011:2;12971:36;:42;12967:58;;13022:3;13015:10;;;;12967:58;13080:2;13040:36;:42;13036:58;;13091:3;13084:10;;;;13036:58;13149:2;13109:36;:42;13105:58;;13160:3;13153:10;;;;13105:58;13218:2;13178:36;:42;13174:58;;13229:3;13222:10;;;;13174:58;13287:2;13247:36;:42;13243:58;;13298:3;13291:10;;;;13243:58;13320:5;13312:14;;;;;;13344:1;13337:8;;6600:6753;;;;:::o;13920:3864::-;13993:7;14013:10;14026:2;14013:15;;14039:11;14085:10;14072:23;;14078:2;14073;:7;;;;:::i;:::-;14072:23;;14067:28;;14109:33;14104:2;:38;;;;:::i;:::-;14097:45;;;;;:::i;:::-;;;14197:10;14184:23;;14190:2;14185;:7;;;;:::i;:::-;14184:23;;14179:28;;14221:33;14216:2;:38;;;;:::i;:::-;14209:45;;;;;:::i;:::-;;;14309:10;14296:23;;14302:2;14297;:7;;;;:::i;:::-;14296:23;;14291:28;;14333:33;14328:2;:38;;;;:::i;:::-;14321:45;;;;;:::i;:::-;;;14421:10;14408:23;;14414:2;14409;:7;;;;:::i;:::-;14408:23;;14403:28;;14445:33;14440:2;:38;;;;:::i;:::-;14433:45;;;;;:::i;:::-;;;14533:10;14520:23;;14526:2;14521;:7;;;;:::i;:::-;14520:23;;14515:28;;14557:33;14552:2;:38;;;;:::i;:::-;14545:45;;;;;:::i;:::-;;;14645:10;14632:23;;14638:2;14633;:7;;;;:::i;:::-;14632:23;;14627:28;;14669:33;14664:2;:38;;;;:::i;:::-;14657:45;;;;;:::i;:::-;;;14757:10;14744:23;;14750:2;14745;:7;;;;:::i;:::-;14744:23;;14739:28;;14781:33;14776:2;:38;;;;:::i;:::-;14769:45;;;;;:::i;:::-;;;14869:10;14856:23;;14862:2;14857;:7;;;;:::i;:::-;14856:23;;14851:28;;14893:33;14888:2;:38;;;;:::i;:::-;14881:45;;;;;:::i;:::-;;;14981:10;14968:23;;14974:2;14969;:7;;;;:::i;:::-;14968:23;;14963:28;;15005:33;15000:2;:38;;;;:::i;:::-;14993:45;;;;;:::i;:::-;;;15093:10;15080:23;;15086:2;15081;:7;;;;:::i;:::-;15080:23;;15075:28;;15117:33;15112:2;:38;;;;:::i;:::-;15105:45;;;;;:::i;:::-;;;15205:10;15192:23;;15198:2;15193;:7;;;;:::i;:::-;15192:23;;15187:28;;15229:33;15224:2;:38;;;;:::i;:::-;15217:45;;;;;:::i;:::-;;;15317:10;15304:23;;15310:2;15305;:7;;;;:::i;:::-;15304:23;;15299:28;;15341:33;15336:2;:38;;;;:::i;:::-;15329:45;;;;;:::i;:::-;;;15429:10;15416:23;;15422:2;15417;:7;;;;:::i;:::-;15416:23;;15411:28;;15453:33;15448:2;:38;;;;:::i;:::-;15441:45;;;;;:::i;:::-;;;15541:10;15528:23;;15534:2;15529;:7;;;;:::i;:::-;15528:23;;15523:28;;15565:33;15560:2;:38;;;;:::i;:::-;15553:45;;;;;:::i;:::-;;;15653:10;15640:23;;15646:2;15641;:7;;;;:::i;:::-;15640:23;;15635:28;;15677:33;15672:2;:38;;;;:::i;:::-;15665:45;;;;;:::i;:::-;;;15765:10;15752:23;;15758:2;15753;:7;;;;:::i;:::-;15752:23;;15747:28;;15789:33;15784:2;:38;;;;:::i;:::-;15777:45;;;;;:::i;:::-;;;15877:10;15864:23;;15870:2;15865;:7;;;;:::i;:::-;15864:23;;15859:28;;15901:33;15896:2;:38;;;;:::i;:::-;15889:45;;;;;:::i;:::-;;;15989:10;15976:23;;15982:2;15977;:7;;;;:::i;:::-;15976:23;;15971:28;;16013:33;16008:2;:38;;;;:::i;:::-;16001:45;;;;;:::i;:::-;;;16101:10;16088:23;;16094:2;16089;:7;;;;:::i;:::-;16088:23;;16083:28;;16125:33;16120:2;:38;;;;:::i;:::-;16113:45;;;;;:::i;:::-;;;16213:10;16200:23;;16206:2;16201;:7;;;;:::i;:::-;16200:23;;16195:28;;16237:33;16232:2;:38;;;;:::i;:::-;16225:45;;;;;:::i;:::-;;;16325:10;16312:23;;16318:2;16313;:7;;;;:::i;:::-;16312:23;;16307:28;;16349:33;16344:2;:38;;;;:::i;:::-;16337:45;;;;;:::i;:::-;;;16437:10;16424:23;;16430:2;16425;:7;;;;:::i;:::-;16424:23;;16419:28;;16461:33;16456:2;:38;;;;:::i;:::-;16449:45;;;;;:::i;:::-;;;16549:10;16536:23;;16542:2;16537;:7;;;;:::i;:::-;16536:23;;16531:28;;16573:33;16568:2;:38;;;;:::i;:::-;16561:45;;;;;:::i;:::-;;;16661:10;16648:23;;16654:2;16649;:7;;;;:::i;:::-;16648:23;;16643:28;;16685:33;16680:2;:38;;;;:::i;:::-;16673:45;;;;;:::i;:::-;;;16773:10;16760:23;;16766:2;16761;:7;;;;:::i;:::-;16760:23;;16755:28;;16797:33;16792:2;:38;;;;:::i;:::-;16785:45;;;;;:::i;:::-;;;16885:10;16872:23;;16878:2;16873;:7;;;;:::i;:::-;16872:23;;16867:28;;16909:33;16904:2;:38;;;;:::i;:::-;16897:45;;;;;:::i;:::-;;;16997:10;16984:23;;16990:2;16985;:7;;;;:::i;:::-;16984:23;;16979:28;;17021:33;17016:2;:38;;;;:::i;:::-;17009:45;;;;;:::i;:::-;;;17109:10;17096:23;;17102:2;17097;:7;;;;:::i;:::-;17096:23;;17091:28;;17133:33;17128:2;:38;;;;:::i;:::-;17121:45;;;;;:::i;:::-;;;17221:10;17208:23;;17214:2;17209;:7;;;;:::i;:::-;17208:23;;17203:28;;17245:33;17240:2;:38;;;;:::i;:::-;17233:45;;;;;:::i;:::-;;;17333:10;17320:23;;17326:2;17321;:7;;;;:::i;:::-;17320:23;;17315:28;;17357:33;17352:2;:38;;;;:::i;:::-;17345:45;;;;;:::i;:::-;;;17445:10;17432:23;;17438:2;17433;:7;;;;:::i;:::-;17432:23;;17427:28;;17469:33;17464:2;:38;;;;:::i;:::-;17457:45;;;;;:::i;:::-;;;17557:10;17544:23;;17550:2;17545;:7;;;;:::i;:::-;17544:23;;17539:28;;17581:33;17576:2;:38;;;;:::i;:::-;17569:45;;;;;:::i;:::-;;;17715:10;17708:17;;840:1;17708:17;;17702:2;17666:33;17660:3;:39;;;;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;17653:73;;;;13920:3864;;;;:::o;5690:542::-;5744:5;5762:9;5774:1;5762:13;;5797:3;5792:2;:8;5788:414;;;5854:85;5866:1;5861:2;:6;5854:85;;;5895:1;5888:8;;;;;5922:1;5915:8;;;;;:::i;:::-;;;5854:85;;;5788:414;;;6022:7;6032:3;6022:13;;6017:174;6041:1;6037;:5;;;6017:174;;;6090:1;6083:8;;840:1;6083:8;;6076:2;:16;6072:104;;6124:1;6117:8;;;;;;;6155:1;6148:8;;;;6072:104;6050:1;6044:7;;;;;;;6017:174;;;;5788:414;6221:3;6214:10;;;5690:542;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:122;416:7;445:5;434:16;;334:122;;;:::o;462:212::-;580:69;643:5;580:69;:::i;:::-;573:5;570:80;560:108;;664:1;661;654:12;560:108;462:212;:::o;680:229::-;771:5;809:6;796:20;787:29;;825:78;897:5;825:78;:::i;:::-;680:229;;;;:::o;915:77::-;952:7;981:5;970:16;;915:77;;;:::o;998:122::-;1071:24;1089:5;1071:24;:::i;:::-;1064:5;1061:35;1051:63;;1110:1;1107;1100:12;1051:63;998:122;:::o;1126:139::-;1172:5;1210:6;1197:20;1188:29;;1226:33;1253:5;1226:33;:::i;:::-;1126:139;;;;:::o;1271:564::-;1384:6;1392;1441:2;1429:9;1420:7;1416:23;1412:32;1409:119;;;1447:79;;:::i;:::-;1409:119;1567:1;1592:98;1682:7;1673:6;1662:9;1658:22;1592:98;:::i;:::-;1582:108;;1538:162;1739:2;1765:53;1810:7;1801:6;1790:9;1786:22;1765:53;:::i;:::-;1755:63;;1710:118;1271:564;;;;;:::o;1841:126::-;1936:24;1954:5;1936:24;:::i;:::-;1931:3;1924:37;1841:126;;:::o;1973:238::-;2074:4;2112:2;2101:9;2097:18;2089:26;;2125:79;2201:1;2190:9;2186:17;2177:6;2125:79;:::i;:::-;1973:238;;;;:::o;2217:117::-;2326:1;2323;2316:12;2340:117;2449:1;2446;2439:12;2463:117;2572:1;2569;2562:12;2603:568;2676:8;2686:6;2736:3;2729:4;2721:6;2717:17;2713:27;2703:122;;2744:79;;:::i;:::-;2703:122;2857:6;2844:20;2834:30;;2887:18;2879:6;2876:30;2873:117;;;2909:79;;:::i;:::-;2873:117;3023:4;3015:6;3011:17;2999:29;;3077:3;3069:4;3061:6;3057:17;3047:8;3043:32;3040:41;3037:128;;;3084:79;;:::i;:::-;3037:128;2603:568;;;;;:::o;3177:794::-;3317:6;3325;3333;3382:2;3370:9;3361:7;3357:23;3353:32;3350:119;;;3388:79;;:::i;:::-;3350:119;3508:1;3533:98;3623:7;3614:6;3603:9;3599:22;3533:98;:::i;:::-;3523:108;;3479:162;3708:2;3697:9;3693:18;3680:32;3739:18;3731:6;3728:30;3725:117;;;3761:79;;:::i;:::-;3725:117;3874:80;3946:7;3937:6;3926:9;3922:22;3874:80;:::i;:::-;3856:98;;;;3651:313;3177:794;;;;;:::o;3977:180::-;4025:77;4022:1;4015:88;4122:4;4119:1;4112:15;4146:4;4143:1;4136:15;4163:180;4211:77;4208:1;4201:88;4308:4;4305:1;4298:15;4332:4;4329:1;4322:15;4349:86;4384:7;4424:4;4417:5;4413:16;4402:27;;4349:86;;;:::o;4441:167::-;4478:3;4501:22;4517:5;4501:22;:::i;:::-;4492:31;;4545:4;4538:5;4535:15;4532:41;;4553:18;;:::i;:::-;4532:41;4600:1;4593:5;4589:13;4582:20;;4441:167;;;:::o;4614:194::-;4654:4;4674:20;4692:1;4674:20;:::i;:::-;4669:25;;4708:20;4726:1;4708:20;:::i;:::-;4703:25;;4752:1;4749;4745:9;4737:17;;4776:1;4770:4;4767:11;4764:37;;;4781:18;;:::i;:::-;4764:37;4614:194;;;;:::o;4814:180::-;4862:77;4859:1;4852:88;4959:4;4956:1;4949:15;4983:4;4980:1;4973:15;5000:188;5038:3;5057:18;5073:1;5057:18;:::i;:::-;5052:23;;5089:18;5105:1;5089:18;:::i;:::-;5084:23;;5130:1;5127;5123:9;5116:16;;5153:4;5148:3;5145:13;5142:39;;;5161:18;;:::i;:::-;5142:39;5000:188;;;;:::o;5194:180::-;5242:77;5239:1;5232:88;5339:4;5336:1;5329:15;5363:4;5360:1;5353:15;5380:191;5420:3;5439:20;5457:1;5439:20;:::i;:::-;5434:25;;5473:20;5491:1;5473:20;:::i;:::-;5468:25;;5516:1;5513;5509:9;5502:16;;5537:3;5534:1;5531:10;5528:36;;;5544:18;;:::i;:::-;5528:36;5380:191;;;;:::o;5577:180::-;5625:77;5622:1;5615:88;5722:4;5719:1;5712:15;5746:4;5743:1;5736:15;5763:180;5811:77;5808:1;5801:88;5908:4;5905:1;5898:15;5932:4;5929:1;5922:15;5949:185;5989:1;6006:20;6024:1;6006:20;:::i;:::-;6001:25;;6040:20;6058:1;6040:20;:::i;:::-;6035:25;;6079:1;6069:35;;6084:18;;:::i;:::-;6069:35;6126:1;6123;6119:9;6114:14;;5949:185;;;;:::o;6140:410::-;6180:7;6203:20;6221:1;6203:20;:::i;:::-;6198:25;;6237:20;6255:1;6237:20;:::i;:::-;6232:25;;6292:1;6289;6285:9;6314:30;6332:11;6314:30;:::i;:::-;6303:41;;6493:1;6484:7;6480:15;6477:1;6474:22;6454:1;6447:9;6427:83;6404:139;;6523:18;;:::i;:::-;6404:139;6188:362;6140:410;;;;:::o;6556:191::-;6594:4;6614:18;6630:1;6614:18;:::i;:::-;6609:23;;6646:18;6662:1;6646:18;:::i;:::-;6641:23;;6688:1;6685;6681:9;6673:17;;6712:4;6706;6703:14;6700:40;;;6720:18;;:::i;:::-;6700:40;6556:191;;;;:::o;6753:167::-;6790:3;6813:22;6829:5;6813:22;:::i;:::-;6804:31;;6857:4;6850:5;6847:15;6844:41;;6865:18;;:::i;:::-;6844:41;6912:1;6905:5;6901:13;6894:20;;6753:167;;;:::o;6926:176::-;6958:1;6975:20;6993:1;6975:20;:::i;:::-;6970:25;;7009:20;7027:1;7009:20;:::i;:::-;7004:25;;7048:1;7038:35;;7053:18;;:::i;:::-;7038:35;7094:1;7091;7087:9;7082:14;;6926:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3229400",
								"executionCost": "3602",
								"totalCost": "3233002"
							},
							"external": {
								"calculate(Equation.Node[] storage,uint256)": "infinite",
								"init(Equation.Node[] storage,uint256[])": "infinite"
							},
							"internal": {
								"checkExprType(uint8,enum Equation.ExprType[] memory)": "infinite",
								"getChildrenCount(uint8)": "213",
								"populateTree(struct Equation.Node storage ref[] storage pointer,uint8)": "infinite",
								"solveBool(struct Equation.Node storage ref[] storage pointer,uint8,uint256)": "infinite",
								"solveMath(struct Equation.Node storage ref[] storage pointer,uint8,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 153,
									"end": 13493,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f1b2f2308eff25ef3e1103b5687084e763b761014a325515204e4f43226777a64736f6c63430008170033",
									".code": [
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "4DEC36E3"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "8E501FC7"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 13493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5576,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5576,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5576,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4685,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4685,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5678,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5704,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5678,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4866,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4990,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5043,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5018,
											"end": 5043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5043,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5078,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5112,
											"end": 5135,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5112,
											"end": 5135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5135,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5145,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5145,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5161,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5145,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5281,
											"end": 5362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5345,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5346,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5333,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5352,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5330,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5320,
											"end": 5330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5362,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5281,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5045,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5424,
											"end": 5445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5445,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5424,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5460,
											"end": 5492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5492,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5452,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 5499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9416,
											"end": 9423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9455,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9490,
											"end": 9494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9490,
											"end": 9501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 9508,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 9508,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9580,
											"end": 9600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9580,
											"end": 9600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9580,
											"end": 9600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9600,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 9576,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9611,
											"end": 9624,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 9576,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9638,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9695,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9731,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9695,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9777,
											"end": 9778,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9770,
											"end": 9771,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9755,
											"end": 9765,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 9755,
											"end": 9769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9755,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9923,
											"end": 9924,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9903,
											"end": 9907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9888,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 9888,
											"end": 9912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 9888,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9888,
											"end": 9922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9888,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 9925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 9925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9824,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9943,
											"end": 9956,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9638,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9974,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10059,
											"end": 10063,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10049,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10085,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10049,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10135,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10131,
											"end": 10142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10150,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10115,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10115,
											"end": 10151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10115,
											"end": 10151,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10115,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10160,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10218,
											"end": 10228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10204,
											"end": 10217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10204,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10197,
											"end": 10229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10160,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10245,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10245,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 10303,
											"end": 10313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10289,
											"end": 10302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 10289,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10282,
											"end": 10314,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10245,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10245,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10340,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10330,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10388,
											"end": 10398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10374,
											"end": 10387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10367,
											"end": 10399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10330,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 10419,
											"end": 10439,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10419,
											"end": 10439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10439,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10419,
											"end": 10439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10439,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10415,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10473,
											"end": 10483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10459,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10452,
											"end": 10484,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10415,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10500,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10500,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10553,
											"end": 10563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10574,
											"end": 10595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10639,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10687,
											"end": 10696,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10682,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10673,
											"end": 10686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10673,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10726,
											"end": 10735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10500,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10500,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10751,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10825,
											"end": 10829,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10809,
											"end": 10819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10795,
											"end": 10808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10795,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10795,
											"end": 10824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10795,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10788,
											"end": 10830,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10751,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10020,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10020,
											"end": 10847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10853,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10853,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10914,
											"end": 10918,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10920,
											"end": 10931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10904,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10940,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10904,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 11064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10949,
											"end": 11064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10981,
											"end": 10985,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10991,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10987,
											"end": 10998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11000,
											"end": 11006,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10971,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 11007,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10971,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10964,
											"end": 11007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 11064,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10949,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11038,
											"end": 11042,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11048,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11028,
											"end": 11064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11021,
											"end": 11064,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10853,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10853,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 11082,
											"end": 11109,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11082,
											"end": 11109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11109,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11082,
											"end": 11109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11078,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11157,
											"end": 11168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11176,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11141,
											"end": 11150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11141,
											"end": 11177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11141,
											"end": 11177,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11141,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11202,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11222,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11218,
											"end": 11229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11231,
											"end": 11237,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11202,
											"end": 11238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11238,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11202,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11273,
											"end": 11277,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11283,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11292,
											"end": 11298,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11263,
											"end": 11299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11299,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11263,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11315,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11331,
											"end": 11341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11343,
											"end": 11348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11315,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11315,
											"end": 11356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11315,
											"end": 11356,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11315,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11308,
											"end": 11356,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11078,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11374,
											"end": 11403,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11374,
											"end": 11403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11403,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11374,
											"end": 11403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11403,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11370,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11445,
											"end": 11449,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11455,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11464,
											"end": 11470,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11435,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11435,
											"end": 11471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11435,
											"end": 11471,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11435,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11506,
											"end": 11510,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11531,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11496,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11532,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11496,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11541,
											"end": 11554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11567,
											"end": 11571,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11573,
											"end": 11584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11592,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11557,
											"end": 11593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11593,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11557,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11541,
											"end": 11593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11541,
											"end": 11593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11617,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11627,
											"end": 11631,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11633,
											"end": 11644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11652,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11617,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11617,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11617,
											"end": 11653,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11617,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11677,
											"end": 11684,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 11670,
											"end": 11674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 11662,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11751,
											"end": 11756,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11763,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11776,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11779,
											"end": 11782,
											"name": "PUSH",
											"source": 1,
											"value": "F4240"
										},
										{
											"begin": 11733,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 11733,
											"end": 11783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11783,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11733,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11828,
											"end": 11837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11837,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11799,
											"end": 11837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11813,
											"end": 11823,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11808,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 11799,
											"end": 11812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11799,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11837,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11792,
											"end": 11837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11370,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9970,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11851,
											"end": 11859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11859,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 11865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8568,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8538,
											"end": 8568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8568,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8596,
											"end": 8618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8680,
											"end": 8704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8704,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8680,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8745,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8817,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8893,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8885,
											"end": 8893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8893,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8909,
											"end": 8920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8909,
											"end": 8924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8899,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 8950,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8942,
											"end": 8945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8942,
											"end": 8950,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8942,
											"end": 8950,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8942,
											"end": 8950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8966,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8966,
											"end": 8981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8956,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9006,
											"end": 9007,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8999,
											"end": 9002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9007,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8999,
											"end": 9007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9023,
											"end": 9034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9023,
											"end": 9038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9023,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9013,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9020,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9056,
											"end": 9059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9056,
											"end": 9064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9095,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9080,
											"end": 9091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9080,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9070,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9052,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8995,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8938,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8881,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9196,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9181,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9181,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 9162,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9153,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9140,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 9126,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 9126,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 9205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9245,
											"end": 9251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9231,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9231,
											"end": 9267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9231,
											"end": 9267,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9231,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1120,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1131,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 485,
											"end": 757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 543,
											"end": 550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 748,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 747,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 747,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 747,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 740,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 869,
											"end": 979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 927,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 949,
											"end": 955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 949,
											"end": 955,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 942,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 942,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 942,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 969,
											"end": 970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 969,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 969,
											"end": 974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 969,
											"end": 974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 969,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 969,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 969,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 962,
											"end": 974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 962,
											"end": 974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 236,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 294,
											"end": 303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 315,
											"end": 321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 311,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 311,
											"end": 346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 338,
											"end": 339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 331,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 331,
											"end": 339,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 311,
											"end": 346,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 311,
											"end": 346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 355,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 355,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 355,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 382,
											"end": 383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 377,
											"end": 378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 373,
											"end": 374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 373,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 373,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 373,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 373,
											"end": 378,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 383,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 366,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 236,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 236,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11969,
											"end": 11973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11985,
											"end": 12002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12009,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12005,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12040,
											"end": 12051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 12058,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 12111,
											"end": 12115,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12117,
											"end": 12128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12130,
											"end": 12136,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12101,
											"end": 12137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12137,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 12101,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12093,
											"end": 12137,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12058,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 12058,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12155,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12208,
											"end": 12225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12244,
											"end": 12255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12257,
											"end": 12263,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 12228,
											"end": 12264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12264,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12228,
											"end": 12264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12208,
											"end": 12264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12208,
											"end": 12264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12304,
											"end": 12308,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12310,
											"end": 12321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 12294,
											"end": 12330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12294,
											"end": 12330,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12294,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12343,
											"end": 12349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12343,
											"end": 12362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12339,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12339,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12405,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12405,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12375,
											"end": 12405,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12339,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12339,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 12425,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12425,
											"end": 12444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12425,
											"end": 12431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12425,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12425,
											"end": 12444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12425,
											"end": 12444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12421,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12477,
											"end": 12487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12457,
											"end": 12487,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12421,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12507,
											"end": 12526,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12507,
											"end": 12526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12526,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12507,
											"end": 12526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12503,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12558,
											"end": 12568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12546,
											"end": 12555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12546,
											"end": 12568,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12539,
											"end": 12568,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12503,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 12588,
											"end": 12607,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12588,
											"end": 12607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12607,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12588,
											"end": 12607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12584,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12584,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12649,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12620,
											"end": 12649,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12584,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12584,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12665,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12665,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12721,
											"end": 12731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12731,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12701,
											"end": 12731,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12665,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12665,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 12751,
											"end": 12770,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12751,
											"end": 12770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12770,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12751,
											"end": 12770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12747,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12747,
											"end": 12823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12803,
											"end": 12813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12813,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12783,
											"end": 12813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12747,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12747,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12840,
											"end": 12883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12931,
											"end": 12942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12950,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12915,
											"end": 12951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12951,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12915,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12964,
											"end": 12970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12960,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12960,
											"end": 13238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 12997,
											"end": 13087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13023,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 13033,
											"end": 13037,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13039,
											"end": 13050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13023,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13023,
											"end": 13059,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 13023,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13016,
											"end": 13059,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 13087,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 12997,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13075,
											"end": 13087,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12960,
											"end": 13238,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12960,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13103,
											"end": 13238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13143,
											"end": 13156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13139,
											"end": 13228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13169,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13228,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13139,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13208,
											"end": 13219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13192,
											"end": 13228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13228,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 13192,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13185,
											"end": 13228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13238,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13103,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12885,
											"end": 13245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 13255,
											"end": 13274,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13255,
											"end": 13274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13255,
											"end": 13261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13255,
											"end": 13274,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13255,
											"end": 13274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13255,
											"end": 13274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 13251,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13302,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 13312,
											"end": 13316,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13337,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13302,
											"end": 13338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13338,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 13302,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13351,
											"end": 13360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 13347,
											"end": 13462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 13379,
											"end": 13383,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13385,
											"end": 13396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13369,
											"end": 13405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13405,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 13369,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13362,
											"end": 13405,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13462,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 13347,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13426,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 13436,
											"end": 13440,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13442,
											"end": 13453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13461,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13426,
											"end": 13435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13426,
											"end": 13462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13426,
											"end": 13462,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 13426,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13419,
											"end": 13462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 13251,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12836,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12151,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13476,
											"end": 13484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13476,
											"end": 13484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13476,
											"end": 13484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 13490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 4347,
											"end": 4353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4347,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4347,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4347,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "15BF0A8B1457695355FB8AC404E7A79E3"
										},
										{
											"begin": 4387,
											"end": 4391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4447,
											"end": 4451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4436,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4495,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4511,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4495,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4383,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4543,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4542,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4130,
											"end": 4574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1295,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000"
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3425,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3411,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3490,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3490,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3490,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "15BF0A8B1457695355FB8AC404E7A79E3"
										},
										{
											"begin": 3530,
											"end": 3534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3552,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3579,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3595,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3579,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3658,
											"end": 3662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3647,
											"end": 3663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3663,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3647,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3526,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3728,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3713,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3713,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "800000000000000000000000000000000"
										},
										{
											"begin": 3751,
											"end": 3766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 4070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3747,
											"end": 4070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3820,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3809,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3836,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3809,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 986,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3801,
											"end": 3852,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 4070,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3747,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3912,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3912,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 986,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4008,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 4008,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4034,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3988,
											"end": 4034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4034,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3977,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3977,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 4077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5856,
											"end": 6150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5891,
											"end": 5899,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5856,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5913,
											"end": 6150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5948,
											"end": 5956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5948,
											"end": 5956,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5913,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5974,
											"end": 5993,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5974,
											"end": 5993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5993,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5974,
											"end": 5993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5993,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5970,
											"end": 6150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5970,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6026,
											"end": 6150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6076,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6068,
											"end": 6076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6068,
											"end": 6076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6026,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6090,
											"end": 6150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6134,
											"end": 6142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6134,
											"end": 6142,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6090,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 6170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 6170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6378,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6413,
											"end": 6433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6413,
											"end": 6433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6378,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6447,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6491,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6491,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6491,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6516,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6447,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6560,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6603,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6603,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6603,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6595,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6560,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6682,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 7866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6678,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6745,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6745,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6745,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6770,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6737,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6813,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6788,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6788,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6788,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6823,
											"end": 6843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6823,
											"end": 6843,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6678,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6861,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 7866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6857,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6922,
											"end": 6947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6922,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6922,
											"end": 6947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6947,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6914,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6965,
											"end": 6990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6972,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6965,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6965,
											"end": 6990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6957,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7000,
											"end": 7023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7000,
											"end": 7023,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6857,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7041,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7037,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7103,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7103,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7103,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7131,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7095,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7177,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7149,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7149,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7149,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7177,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7141,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7187,
											"end": 7210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7187,
											"end": 7210,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7037,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7224,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7266,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7266,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7266,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7258,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7312,
											"end": 7340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7319,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7312,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7312,
											"end": 7340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7377,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7370,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7358,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7358,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7358,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7378,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7350,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7395,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7224,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7421,
											"end": 7448,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7421,
											"end": 7448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7448,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7421,
											"end": 7448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7448,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7417,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7467,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7467,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7467,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7492,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7510,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7510,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7510,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7553,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7553,
											"end": 7561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7553,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 7608,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7417,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7622,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7686,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7674,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7674,
											"end": 7682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7674,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7699,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7666,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7729,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7717,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7717,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7717,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7760,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7760,
											"end": 7768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7768,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7760,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 7752,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7803,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7803,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7803,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 7795,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7858,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7622,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 7886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18519,
											"end": 21317,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 18519,
											"end": 21317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18593,
											"end": 18604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18607,
											"end": 18608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18593,
											"end": 18608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18593,
											"end": 18608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18621,
											"end": 18630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18641,
											"end": 18650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18661,
											"end": 18670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18726,
											"name": "PUSH",
											"source": 0,
											"value": "D3094C70F034DE4B96FF7D5B6F99FCD8"
										},
										{
											"begin": 18687,
											"end": 18688,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18687,
											"end": 18726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 18683,
											"end": 18826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18770,
											"name": "PUSH",
											"source": 0,
											"value": "40000000000000000000000000000000"
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18729,
											"end": 18770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18729,
											"end": 18770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18790,
											"end": 18824,
											"name": "PUSH",
											"source": 0,
											"value": "D3094C70F034DE4B96FF7D5B6F99FCD8"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 18776,
											"end": 18777,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18776,
											"end": 18787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 18776,
											"end": 18787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 18776,
											"end": 18824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 18776,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18772,
											"end": 18824,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18772,
											"end": 18824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18826,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 18683,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18860,
											"end": 18894,
											"name": "PUSH",
											"source": 0,
											"value": "A45AF1E1F40C333B3DE1DB4DD55F29A7"
										},
										{
											"begin": 18855,
											"end": 18856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18855,
											"end": 18894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18851,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 18851,
											"end": 18994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18904,
											"end": 18938,
											"name": "PUSH",
											"source": 0,
											"value": "20000000000000000000000000000000"
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18897,
											"end": 18938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18897,
											"end": 18938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18992,
											"name": "PUSH",
											"source": 0,
											"value": "A45AF1E1F40C333B3DE1DB4DD55F29A7"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 18944,
											"end": 18945,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18944,
											"end": 18955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 18944,
											"end": 18992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 18944,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18940,
											"end": 18992,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18940,
											"end": 18992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18851,
											"end": 18994,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 18851,
											"end": 18994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19028,
											"end": 19062,
											"name": "PUSH",
											"source": 0,
											"value": "910B022DB7AE67CE76B441C27035C6A1"
										},
										{
											"begin": 19023,
											"end": 19024,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19023,
											"end": 19062,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19019,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 19019,
											"end": 19162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19106,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000"
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19065,
											"end": 19106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19065,
											"end": 19106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19160,
											"name": "PUSH",
											"source": 0,
											"value": "910B022DB7AE67CE76B441C27035C6A1"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19112,
											"end": 19113,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19112,
											"end": 19123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 19112,
											"end": 19123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19112,
											"end": 19160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 19112,
											"end": 19160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19160,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19019,
											"end": 19162,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 19019,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19230,
											"name": "PUSH",
											"source": 0,
											"value": "88415ABBE9A76BEAD8D00CF112E4D4A8"
										},
										{
											"begin": 19191,
											"end": 19192,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19191,
											"end": 19230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 19187,
											"end": 19330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19240,
											"end": 19274,
											"name": "PUSH",
											"source": 0,
											"value": "8000000000000000000000000000000"
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19233,
											"end": 19274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19328,
											"name": "PUSH",
											"source": 0,
											"value": "88415ABBE9A76BEAD8D00CF112E4D4A8"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19280,
											"end": 19281,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19280,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 19280,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19280,
											"end": 19328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 19280,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19276,
											"end": 19328,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19276,
											"end": 19328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 19187,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19364,
											"end": 19398,
											"name": "PUSH",
											"source": 0,
											"value": "84102B00893F64C705E841D5D4064BD3"
										},
										{
											"begin": 19359,
											"end": 19360,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19359,
											"end": 19398,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19355,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 19355,
											"end": 19498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19408,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "4000000000000000000000000000000"
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19401,
											"end": 19442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19462,
											"end": 19496,
											"name": "PUSH",
											"source": 0,
											"value": "84102B00893F64C705E841D5D4064BD3"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19448,
											"end": 19449,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19448,
											"end": 19459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 19448,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19448,
											"end": 19496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 19448,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19444,
											"end": 19496,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19444,
											"end": 19496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19355,
											"end": 19498,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 19355,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19566,
											"name": "PUSH",
											"source": 0,
											"value": "8204055AAEF1C8BD5C3259F4822735A2"
										},
										{
											"begin": 19527,
											"end": 19528,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19527,
											"end": 19566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19523,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 19523,
											"end": 19666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19610,
											"name": "PUSH",
											"source": 0,
											"value": "2000000000000000000000000000000"
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19569,
											"end": 19610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19630,
											"end": 19664,
											"name": "PUSH",
											"source": 0,
											"value": "8204055AAEF1C8BD5C3259F4822735A2"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19616,
											"end": 19617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19616,
											"end": 19627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 19616,
											"end": 19627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19616,
											"end": 19664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 19616,
											"end": 19664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19664,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19523,
											"end": 19666,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 19523,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19734,
											"name": "PUSH",
											"source": 0,
											"value": "810100AB00222D861931C15E39B44E99"
										},
										{
											"begin": 19695,
											"end": 19696,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19695,
											"end": 19734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 19691,
											"end": 19834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19744,
											"end": 19778,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19737,
											"end": 19778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19737,
											"end": 19778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 19832,
											"name": "PUSH",
											"source": 0,
											"value": "810100AB00222D861931C15E39B44E99"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19784,
											"end": 19785,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19784,
											"end": 19795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 19784,
											"end": 19795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19784,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 19784,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19780,
											"end": 19832,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19780,
											"end": 19832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19834,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 19691,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "808040155AABBBE9451521693554F733"
										},
										{
											"begin": 19863,
											"end": 19864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19863,
											"end": 19902,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19859,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19859,
											"end": 20002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19912,
											"end": 19946,
											"name": "PUSH",
											"source": 0,
											"value": "800000000000000000000000000000"
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19905,
											"end": 19946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19966,
											"end": 20000,
											"name": "PUSH",
											"source": 0,
											"value": "808040155AABBBE9451521693554F733"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 19952,
											"end": 19953,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19952,
											"end": 19963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 19952,
											"end": 19963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19952,
											"end": 20000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19952,
											"end": 20000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20000,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19859,
											"end": 20002,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19859,
											"end": 20002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20037,
											"end": 20038,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20037,
											"end": 20048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 20037,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20029,
											"end": 20048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20029,
											"end": 20048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20067,
											"end": 20068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20063,
											"end": 20068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20063,
											"end": 20078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 20063,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20059,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20059,
											"end": 20078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20179,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 20139,
											"end": 20140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20136,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20101,
											"end": 20140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 20101,
											"end": 20140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20096,
											"end": 20141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 20096,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20096,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 20096,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20089,
											"end": 20179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20089,
											"end": 20179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20189,
											"end": 20190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20185,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20185,
											"end": 20200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 20185,
											"end": 20200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20181,
											"end": 20200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20181,
											"end": 20200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20330,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000"
										},
										{
											"begin": 20290,
											"end": 20291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20252,
											"end": 20291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 20252,
											"end": 20291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20247,
											"end": 20292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 20247,
											"end": 20292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20247,
											"end": 20330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 20247,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20240,
											"end": 20330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20340,
											"end": 20341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20336,
											"end": 20341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 20336,
											"end": 20341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20336,
											"end": 20351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 20336,
											"end": 20351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20332,
											"end": 20351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20446,
											"end": 20481,
											"name": "PUSH",
											"source": 0,
											"value": "300000000000000000000000000000000"
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20403,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "99999999999999999999999999999999"
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20403,
											"end": 20442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 20403,
											"end": 20442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20398,
											"end": 20443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 20398,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20398,
											"end": 20481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 20398,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20391,
											"end": 20481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20391,
											"end": 20481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20491,
											"end": 20492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20487,
											"end": 20492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 20487,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20487,
											"end": 20502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 20487,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20483,
											"end": 20502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20483,
											"end": 20502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 20632,
											"name": "PUSH",
											"source": 0,
											"value": "400000000000000000000000000000000"
										},
										{
											"begin": 20592,
											"end": 20593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20554,
											"end": 20589,
											"name": "PUSH",
											"source": 0,
											"value": "92492492492492492492492492492492"
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20554,
											"end": 20593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 20554,
											"end": 20593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20549,
											"end": 20594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 20549,
											"end": 20594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20549,
											"end": 20632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 20549,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20542,
											"end": 20632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20642,
											"end": 20643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20638,
											"end": 20643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 20638,
											"end": 20643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20638,
											"end": 20653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20634,
											"end": 20653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20634,
											"end": 20653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20783,
											"name": "PUSH",
											"source": 0,
											"value": "500000000000000000000000000000000"
										},
										{
											"begin": 20743,
											"end": 20744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20740,
											"name": "PUSH",
											"source": 0,
											"value": "8E38E38E38E38E38E38E38E38E38E38E"
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20705,
											"end": 20744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 20705,
											"end": 20744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20700,
											"end": 20745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 20700,
											"end": 20745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20700,
											"end": 20783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 20700,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20693,
											"end": 20783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20793,
											"end": 20794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20789,
											"end": 20794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 20789,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20789,
											"end": 20804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 20789,
											"end": 20804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20899,
											"end": 20934,
											"name": "PUSH",
											"source": 0,
											"value": "600000000000000000000000000000000"
										},
										{
											"begin": 20894,
											"end": 20895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "PUSH",
											"source": 0,
											"value": "8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B"
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 20856,
											"end": 20895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20851,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 20851,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20851,
											"end": 20934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 20851,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20844,
											"end": 20934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 20944,
											"end": 20945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20940,
											"end": 20945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 20940,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20940,
											"end": 20955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 20940,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21050,
											"end": 21085,
											"name": "PUSH",
											"source": 0,
											"value": "700000000000000000000000000000000"
										},
										{
											"begin": 21045,
											"end": 21046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "89D89D89D89D89D89D89D89D89D89D89"
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21007,
											"end": 21046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 21007,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21002,
											"end": 21047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 21002,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21002,
											"end": 21085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 21002,
											"end": 21085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20995,
											"end": 21085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21091,
											"end": 21096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 21091,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21091,
											"end": 21106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 21091,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21087,
											"end": 21106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21087,
											"end": 21106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "800000000000000000000000000000000"
										},
										{
											"begin": 21196,
											"end": 21197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21158,
											"end": 21193,
											"name": "PUSH",
											"source": 0,
											"value": "88888888888888888888888888888888"
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21158,
											"end": 21197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 21158,
											"end": 21197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21153,
											"end": 21198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 21153,
											"end": 21198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21153,
											"end": 21236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 21153,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21146,
											"end": 21236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21306,
											"end": 21309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18519,
											"end": 21317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18519,
											"end": 21317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18519,
											"end": 21317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18519,
											"end": 21317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5568,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4745,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4943,
											"end": 4955,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 4939,
											"end": 5095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4996,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 4986,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5008,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 4986,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 5008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 5008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5068,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 5095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 5095,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 4939,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 5199,
											"end": 5504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 5236,
											"end": 5259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5297,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5296,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 5353,
											"end": 5354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5349,
											"end": 5478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 5452,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5437,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5349,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 5268,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5504,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 5199,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "5B9DE1D10BF4103D647B0955897BA80"
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "3F80FE03F80FE03F80FE03F80FE03F8"
										},
										{
											"begin": 5523,
											"end": 5526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5523,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5523,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 5523,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 25223,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 22007,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22081,
											"end": 22096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22109,
											"end": 22118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22129,
											"end": 22138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22163,
											"end": 22197,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000"
										},
										{
											"begin": 22159,
											"end": 22160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 22159,
											"end": 22197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 22159,
											"end": 22197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22155,
											"end": 22197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22155,
											"end": 22197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22155,
											"end": 22197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22151,
											"end": 22197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22151,
											"end": 22197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22247,
											"end": 22248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22243,
											"end": 22248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22243,
											"end": 22258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 22243,
											"end": 22258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22239,
											"end": 22258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22239,
											"end": 22258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22271,
											"end": 22289,
											"name": "PUSH",
											"source": 0,
											"value": "10E1B3BE415A0000"
										},
										{
											"begin": 22267,
											"end": 22268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22267,
											"end": 22289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 22267,
											"end": 22289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22260,
											"end": 22289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22334,
											"end": 22335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22330,
											"end": 22335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 22330,
											"end": 22335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22330,
											"end": 22345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 22330,
											"end": 22345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22358,
											"end": 22376,
											"name": "PUSH",
											"source": 0,
											"value": "5A0913F6B1E0000"
										},
										{
											"begin": 22354,
											"end": 22355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22354,
											"end": 22376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 22354,
											"end": 22376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22347,
											"end": 22376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22421,
											"end": 22422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22417,
											"end": 22422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 22417,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22417,
											"end": 22432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 22417,
											"end": 22432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22413,
											"end": 22432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22413,
											"end": 22432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22445,
											"end": 22463,
											"name": "PUSH",
											"source": 0,
											"value": "168244FDAC78000"
										},
										{
											"begin": 22441,
											"end": 22442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22441,
											"end": 22463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 22441,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22434,
											"end": 22463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22434,
											"end": 22463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22508,
											"end": 22509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22504,
											"end": 22509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 22504,
											"end": 22509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22504,
											"end": 22519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22500,
											"end": 22519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22500,
											"end": 22519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22532,
											"end": 22550,
											"name": "PUSH",
											"source": 0,
											"value": "4807432BC18000"
										},
										{
											"begin": 22528,
											"end": 22529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22528,
											"end": 22550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 22528,
											"end": 22550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22521,
											"end": 22550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22521,
											"end": 22550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22595,
											"end": 22596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22591,
											"end": 22596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 22591,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22591,
											"end": 22606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 22637,
											"name": "PUSH",
											"source": 0,
											"value": "C0135DCA04000"
										},
										{
											"begin": 22615,
											"end": 22616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22615,
											"end": 22637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 22615,
											"end": 22637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22608,
											"end": 22637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22682,
											"end": 22683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22678,
											"end": 22683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 22678,
											"end": 22683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22678,
											"end": 22693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22674,
											"end": 22693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22674,
											"end": 22693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22706,
											"end": 22724,
											"name": "PUSH",
											"source": 0,
											"value": "1B707B1CDC000"
										},
										{
											"begin": 22702,
											"end": 22703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22702,
											"end": 22724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 22702,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22695,
											"end": 22724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 22724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22769,
											"end": 22770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22765,
											"end": 22770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22765,
											"end": 22780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 22765,
											"end": 22780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22761,
											"end": 22780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22761,
											"end": 22780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22793,
											"end": 22811,
											"name": "PUSH",
											"source": 0,
											"value": "36E0F639B800"
										},
										{
											"begin": 22789,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22789,
											"end": 22811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 22789,
											"end": 22811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22782,
											"end": 22811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22782,
											"end": 22811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22856,
											"end": 22857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22852,
											"end": 22857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 22852,
											"end": 22857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22852,
											"end": 22867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 22852,
											"end": 22867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22848,
											"end": 22867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22848,
											"end": 22867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22880,
											"end": 22898,
											"name": "PUSH",
											"source": 0,
											"value": "618FEE9F800"
										},
										{
											"begin": 22876,
											"end": 22877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22876,
											"end": 22898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 22876,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22869,
											"end": 22898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 22943,
											"end": 22944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22939,
											"end": 22944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 22939,
											"end": 22944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22939,
											"end": 22954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 22939,
											"end": 22954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22935,
											"end": 22954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22935,
											"end": 22954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22967,
											"end": 22985,
											"name": "PUSH",
											"source": 0,
											"value": "9C197DCC00"
										},
										{
											"begin": 22963,
											"end": 22964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22963,
											"end": 22985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 22963,
											"end": 22985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22956,
											"end": 22985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22956,
											"end": 22985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23030,
											"end": 23031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23026,
											"end": 23031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23026,
											"end": 23041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 23026,
											"end": 23041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23054,
											"end": 23072,
											"name": "PUSH",
											"source": 0,
											"value": "E30DCE400"
										},
										{
											"begin": 23050,
											"end": 23051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23050,
											"end": 23072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 23050,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23043,
											"end": 23072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23117,
											"end": 23118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23113,
											"end": 23118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 23113,
											"end": 23118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23113,
											"end": 23128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 23113,
											"end": 23128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23109,
											"end": 23128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23109,
											"end": 23128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "PUSH",
											"source": 0,
											"value": "12EBD1300"
										},
										{
											"begin": 23137,
											"end": 23138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23137,
											"end": 23159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 23137,
											"end": 23159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23130,
											"end": 23159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23130,
											"end": 23159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23204,
											"end": 23205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23200,
											"end": 23205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 23200,
											"end": 23205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23200,
											"end": 23215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23196,
											"end": 23215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23196,
											"end": 23215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23228,
											"end": 23246,
											"name": "PUSH",
											"source": 0,
											"value": "17499F00"
										},
										{
											"begin": 23224,
											"end": 23225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23224,
											"end": 23246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 23224,
											"end": 23246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23217,
											"end": 23246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23217,
											"end": 23246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23291,
											"end": 23292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23287,
											"end": 23292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23287,
											"end": 23302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 23287,
											"end": 23302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23315,
											"end": 23333,
											"name": "PUSH",
											"source": 0,
											"value": "1A9D480"
										},
										{
											"begin": 23311,
											"end": 23312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23311,
											"end": 23333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 23311,
											"end": 23333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23304,
											"end": 23333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23378,
											"end": 23379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23374,
											"end": 23379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 23374,
											"end": 23379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23374,
											"end": 23389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 23374,
											"end": 23389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23420,
											"name": "PUSH",
											"source": 0,
											"value": "1C6380"
										},
										{
											"begin": 23398,
											"end": 23399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23398,
											"end": 23420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 23398,
											"end": 23420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23391,
											"end": 23420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23391,
											"end": 23420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23465,
											"end": 23466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23461,
											"end": 23466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23461,
											"end": 23476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 23461,
											"end": 23476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23457,
											"end": 23476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23457,
											"end": 23476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23489,
											"end": 23507,
											"name": "PUSH",
											"source": 0,
											"value": "1C638"
										},
										{
											"begin": 23485,
											"end": 23486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23485,
											"end": 23507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 23485,
											"end": 23507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23478,
											"end": 23507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23552,
											"end": 23553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23548,
											"end": 23553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23548,
											"end": 23563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 23548,
											"end": 23563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23594,
											"name": "PUSH",
											"source": 0,
											"value": "1AB8"
										},
										{
											"begin": 23572,
											"end": 23573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23572,
											"end": 23594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 23572,
											"end": 23594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23565,
											"end": 23594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "tag",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23565,
											"end": 23594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23639,
											"end": 23640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23635,
											"end": 23640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 23635,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23635,
											"end": 23650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 23635,
											"end": 23650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23631,
											"end": 23650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23631,
											"end": 23650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23663,
											"end": 23681,
											"name": "PUSH",
											"source": 0,
											"value": "17C"
										},
										{
											"begin": 23659,
											"end": 23660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23659,
											"end": 23681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "tag",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 23659,
											"end": 23681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23652,
											"end": 23681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23652,
											"end": 23681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23726,
											"end": 23727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23722,
											"end": 23727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 23722,
											"end": 23727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23722,
											"end": 23737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 23722,
											"end": 23737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23750,
											"end": 23768,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23746,
											"end": 23747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23746,
											"end": 23768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 23746,
											"end": 23768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23739,
											"end": 23768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23813,
											"end": 23814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23809,
											"end": 23814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23809,
											"end": 23824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 23809,
											"end": 23824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23805,
											"end": 23824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23805,
											"end": 23824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23837,
											"end": 23855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23833,
											"end": 23834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23833,
											"end": 23855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23826,
											"end": 23855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 23925,
											"end": 23926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23904,
											"end": 23922,
											"name": "PUSH",
											"source": 0,
											"value": "21C3677C82B40000"
										},
										{
											"begin": 23898,
											"end": 23901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23898,
											"end": 23922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 23898,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23898,
											"end": 23926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 23898,
											"end": 23926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23898,
											"end": 23936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 23898,
											"end": 23936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24048,
											"end": 24049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24008,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000000000000000000"
										},
										{
											"begin": 24004,
											"end": 24005,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24004,
											"end": 24043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24049,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23999,
											"end": 24136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 23999,
											"end": 24136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24136,
											"name": "PUSH",
											"source": 0,
											"value": "18EBEF9EAC820AE8682B9793AC6D1E776"
										},
										{
											"begin": 24063,
											"end": 24098,
											"name": "PUSH",
											"source": 0,
											"value": "1C3D6A24ED82218787D624D3E5EBA95F9"
										},
										{
											"begin": 24057,
											"end": 24060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24057,
											"end": 24098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24057,
											"end": 24136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 24057,
											"end": 24136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24051,
											"end": 24136,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24051,
											"end": 24136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23999,
											"end": 24136,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 23999,
											"end": 24136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24180,
											"end": 24215,
											"name": "PUSH",
											"source": 0,
											"value": "20000000000000000000000000000000"
										},
										{
											"begin": 24176,
											"end": 24177,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24176,
											"end": 24215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24175,
											"end": 24221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24171,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 24171,
											"end": 24308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24273,
											"end": 24308,
											"name": "PUSH",
											"source": 0,
											"value": "1368B2FC6F9609FE7ACEB46AA619BAED4"
										},
										{
											"begin": 24235,
											"end": 24270,
											"name": "PUSH",
											"source": 0,
											"value": "18EBEF9EAC820AE8682B9793AC6D1E778"
										},
										{
											"begin": 24229,
											"end": 24232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24229,
											"end": 24270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 24229,
											"end": 24270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24229,
											"end": 24308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 24229,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24223,
											"end": 24308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24171,
											"end": 24308,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 24171,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24387,
											"name": "PUSH",
											"source": 0,
											"value": "40000000000000000000000000000000"
										},
										{
											"begin": 24348,
											"end": 24349,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24343,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 24343,
											"end": 24480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24445,
											"end": 24480,
											"name": "PUSH",
											"source": 0,
											"value": "BC5AB1B16779BE3575BD8F0520A9F21F"
										},
										{
											"begin": 24407,
											"end": 24442,
											"name": "PUSH",
											"source": 0,
											"value": "1368B2FC6F9609FE7ACEB46AA619BAED5"
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24401,
											"end": 24442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 24401,
											"end": 24442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24401,
											"end": 24480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 24401,
											"end": 24480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24395,
											"end": 24480,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24395,
											"end": 24480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24343,
											"end": 24480,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 24343,
											"end": 24480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24564,
											"end": 24565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24524,
											"end": 24559,
											"name": "PUSH",
											"source": 0,
											"value": "80000000000000000000000000000000"
										},
										{
											"begin": 24520,
											"end": 24521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24520,
											"end": 24559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24519,
											"end": 24565,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24515,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 24515,
											"end": 24652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24652,
											"name": "PUSH",
											"source": 0,
											"value": "454AAA8EFE072E7F6DDBAB84B40A55C9"
										},
										{
											"begin": 24579,
											"end": 24614,
											"name": "PUSH",
											"source": 0,
											"value": "BC5AB1B16779BE3575BD8F0520A9F21E"
										},
										{
											"begin": 24573,
											"end": 24576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24573,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 24573,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24573,
											"end": 24652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 24573,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24515,
											"end": 24652,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 24515,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24736,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24696,
											"end": 24731,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 24692,
											"end": 24693,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24692,
											"end": 24731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24691,
											"end": 24737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24687,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 24687,
											"end": 24824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24789,
											"end": 24824,
											"name": "PUSH",
											"source": 0,
											"value": "960AADC109E7A3BF4578099615711EA"
										},
										{
											"begin": 24751,
											"end": 24786,
											"name": "PUSH",
											"source": 0,
											"value": "454AAA8EFE072E7F6DDBAB84B40A55C5"
										},
										{
											"begin": 24745,
											"end": 24748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24745,
											"end": 24786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 24745,
											"end": 24786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24745,
											"end": 24824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 24745,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24739,
											"end": 24824,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24739,
											"end": 24824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24687,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 24687,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24908,
											"end": 24909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24868,
											"end": 24903,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000"
										},
										{
											"begin": 24864,
											"end": 24865,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24864,
											"end": 24903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24863,
											"end": 24909,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24859,
											"end": 24996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 24859,
											"end": 24996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 24996,
											"name": "PUSH",
											"source": 0,
											"value": "2BF84208204F5977F9A8CF01FDCE3D"
										},
										{
											"begin": 24923,
											"end": 24958,
											"name": "PUSH",
											"source": 0,
											"value": "960AADC109E7A3BF4578099615711D7"
										},
										{
											"begin": 24917,
											"end": 24920,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24917,
											"end": 24958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 24917,
											"end": 24958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24917,
											"end": 24996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "tag",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 24917,
											"end": 24996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24996,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24859,
											"end": 24996,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 24859,
											"end": 24996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25080,
											"end": 25081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25040,
											"end": 25075,
											"name": "PUSH",
											"source": 0,
											"value": "400000000000000000000000000000000"
										},
										{
											"begin": 25036,
											"end": 25037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25036,
											"end": 25075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25035,
											"end": 25081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 25031,
											"end": 25168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25133,
											"end": 25168,
											"name": "PUSH",
											"source": 0,
											"value": "3C6AB775DD0B95B4CBEE7E65D11"
										},
										{
											"begin": 25095,
											"end": 25130,
											"name": "PUSH",
											"source": 0,
											"value": "2BF84208204F5977F9A8CF01FDC307"
										},
										{
											"begin": 25089,
											"end": 25092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 25089,
											"end": 25130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 25089,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25089,
											"end": 25168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "tag",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 25089,
											"end": 25168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25083,
											"end": 25168,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25083,
											"end": 25168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25168,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 25031,
											"end": 25168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25215,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 25223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 25223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 25223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6692,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "1C35FEDD14FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6692,
											"end": 6734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6797,
											"name": "PUSH",
											"source": 0,
											"value": "1B0CE43B323FFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6761,
											"end": 6803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 6757,
											"end": 6815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6815,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 6757,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6866,
											"name": "PUSH",
											"source": 0,
											"value": "19F0028EC1FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 6826,
											"end": 6884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6874,
											"end": 6884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 6874,
											"end": 6884,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6884,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 6826,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6939,
											"end": 6941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "PUSH",
											"source": 0,
											"value": "18DED91F0E7FFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6899,
											"end": 6941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 6895,
											"end": 6953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6943,
											"end": 6953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 6943,
											"end": 6953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6953,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 6895,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 7004,
											"name": "PUSH",
											"source": 0,
											"value": "17D8EC7F0417FFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6968,
											"end": 7010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 6964,
											"end": 7022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 7022,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 6964,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7073,
											"name": "PUSH",
											"source": 0,
											"value": "16DDC6556CDBFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7037,
											"end": 7079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 7033,
											"end": 7091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7081,
											"end": 7091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7081,
											"end": 7091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7081,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7081,
											"end": 7091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7091,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 7033,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "PUSH",
											"source": 0,
											"value": "15ECF52776A1FFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 7102,
											"end": 7160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7150,
											"end": 7160,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7160,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 7102,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7211,
											"name": "PUSH",
											"source": 0,
											"value": "15060C256CB2FFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7175,
											"end": 7217,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7171,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 7171,
											"end": 7229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7171,
											"end": 7229,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 7171,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7280,
											"name": "PUSH",
											"source": 0,
											"value": "1428A2F98D72FFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7244,
											"end": 7286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 7240,
											"end": 7298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7288,
											"end": 7298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7288,
											"end": 7298,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7298,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 7240,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7353,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "13545598E5C23FFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7313,
											"end": 7355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 7309,
											"end": 7367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7357,
											"end": 7367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7357,
											"end": 7367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7357,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7357,
											"end": 7367,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 7309,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7418,
											"name": "PUSH",
											"source": 0,
											"value": "1288C4161CE1DFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7382,
											"end": 7424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 7378,
											"end": 7436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7434,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 7426,
											"end": 7436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7426,
											"end": 7436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7426,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7426,
											"end": 7436,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7436,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 7378,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "11C592761C666FFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7451,
											"end": 7493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "PUSH",
											"source": 0,
											"value": "110A688680A757FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7520,
											"end": 7562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 7516,
											"end": 7574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7574,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 7516,
											"end": 7574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7589,
											"end": 7625,
											"name": "PUSH",
											"source": 0,
											"value": "1056F1B5BEDF77FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7589,
											"end": 7631,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 7585,
											"end": 7643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "PUSH",
											"source": 0,
											"value": "2D"
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7643,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 7585,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7658,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "FAADCECEEFF8BFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7658,
											"end": 7700,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 7654,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7712,
											"name": "tag",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 7654,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7727,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "F05DC6B27EDADFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7727,
											"end": 7769,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 7723,
											"end": 7781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 7771,
											"end": 7781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7771,
											"end": 7781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7771,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7771,
											"end": 7781,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7781,
											"name": "tag",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 7723,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7796,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "E67A5A25DA4107FFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7796,
											"end": 7838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 7792,
											"end": 7850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 7792,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "DCFF115B14EEDFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7865,
											"end": 7907,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 7861,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7909,
											"end": 7919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7909,
											"end": 7919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7909,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7909,
											"end": 7919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 7861,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7934,
											"end": 7970,
											"name": "PUSH",
											"source": 0,
											"value": "D3E7A392431239FFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 7930,
											"end": 7988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7988,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 7930,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8043,
											"end": 8045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8003,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "CB2FF529EB71E4FFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8003,
											"end": 8045,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 7999,
											"end": 8057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8057,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8057,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 7999,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "PUSH",
											"source": 0,
											"value": "C2D415C3DB974AFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8072,
											"end": 8114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 8068,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8124,
											"end": 8126,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 8068,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "BAD03E7D883F69BFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8141,
											"end": 8183,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 8137,
											"end": 8195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8195,
											"name": "tag",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 8137,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8246,
											"name": "PUSH",
											"source": 0,
											"value": "B320D03B2C343D5FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 8206,
											"end": 8264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 8206,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8279,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "ABC25204E02828DFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8279,
											"end": 8321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 8275,
											"end": 8333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8323,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8323,
											"end": 8333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8323,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8323,
											"end": 8333,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8333,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 8275,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8348,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "A4B16F74EE4BB207FFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8348,
											"end": 8390,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 8344,
											"end": 8402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8344,
											"end": 8402,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 8344,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8453,
											"name": "PUSH",
											"source": 0,
											"value": "9DEAF736AC1F569FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8417,
											"end": 8459,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 8413,
											"end": 8471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8461,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8461,
											"end": 8471,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 8413,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8486,
											"end": 8522,
											"name": "PUSH",
											"source": 0,
											"value": "976BD9952C7AA957FFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8486,
											"end": 8528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8482,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 8482,
											"end": 8540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 0,
											"value": "3A"
										},
										{
											"begin": 8530,
											"end": 8540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8530,
											"end": 8540,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8482,
											"end": 8540,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 8482,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8591,
											"name": "PUSH",
											"source": 0,
											"value": "9131271922EAA606FFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8555,
											"end": 8597,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 8551,
											"end": 8609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "3B"
										},
										{
											"begin": 8599,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8599,
											"end": 8609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8609,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 8551,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8624,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "8B380F3558668C46FFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8624,
											"end": 8666,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 8620,
											"end": 8678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8678,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 8620,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8729,
											"name": "PUSH",
											"source": 0,
											"value": "857DDF0117EFA215BFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8693,
											"end": 8735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8689,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 8689,
											"end": 8747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8689,
											"end": 8747,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 8689,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8798,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8762,
											"end": 8804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8758,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 8758,
											"end": 8816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 0,
											"value": "3E"
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8806,
											"end": 8816,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8758,
											"end": 8816,
											"name": "tag",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 8758,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8867,
											"name": "PUSH",
											"source": 0,
											"value": "7ABBF6F6ABB9D087FFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8831,
											"end": 8873,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8827,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 8827,
											"end": 8885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 8875,
											"end": 8885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 8885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8875,
											"end": 8885,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8827,
											"end": 8885,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 8827,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8900,
											"end": 8936,
											"name": "PUSH",
											"source": 0,
											"value": "75AF62CBAC95F7DFA7FFFFFFFFFFFFFFF"
										},
										{
											"begin": 8900,
											"end": 8942,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8896,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 8896,
											"end": 8954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8896,
											"end": 8954,
											"name": "tag",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 8896,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "70D7FB7452E187AC13FFFFFFFFFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 9011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8965,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 8965,
											"end": 9023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9023,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8965,
											"end": 9023,
											"name": "tag",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 8965,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9074,
											"name": "PUSH",
											"source": 0,
											"value": "6C3390ECC8AF379295FFFFFFFFFFFFFFF"
										},
										{
											"begin": 9038,
											"end": 9080,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 9034,
											"end": 9092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9092,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9082,
											"end": 9092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9082,
											"end": 9092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9092,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 9034,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9107,
											"end": 9143,
											"name": "PUSH",
											"source": 0,
											"value": "67C00A3B07FFC01FD6FFFFFFFFFFFFFFF"
										},
										{
											"begin": 9107,
											"end": 9149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 9103,
											"end": 9161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9151,
											"end": 9161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9151,
											"end": 9161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9151,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9151,
											"end": 9161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9161,
											"name": "tag",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 9103,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9176,
											"end": 9212,
											"name": "PUSH",
											"source": 0,
											"value": "637B647C39CBB9D3D27FFFFFFFFFFFFFF"
										},
										{
											"begin": 9176,
											"end": 9218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9172,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 9172,
											"end": 9230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9220,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9220,
											"end": 9230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9172,
											"end": 9230,
											"name": "tag",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 9172,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9281,
											"name": "PUSH",
											"source": 0,
											"value": "5F63B1FC104DBD39587FFFFFFFFFFFFFF"
										},
										{
											"begin": 9245,
											"end": 9287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 9241,
											"end": 9299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9297,
											"end": 9299,
											"name": "PUSH",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9289,
											"end": 9299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9289,
											"end": 9299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9299,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 9241,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "PUSH",
											"source": 0,
											"value": "5B771955B36E12F7235FFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 9310,
											"end": 9368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9358,
											"end": 9368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9358,
											"end": 9368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9310,
											"end": 9368,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 9310,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9419,
											"name": "PUSH",
											"source": 0,
											"value": "57B3D49DDA84556D6F6FFFFFFFFFFFFFF"
										},
										{
											"begin": 9383,
											"end": 9425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9379,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 9379,
											"end": 9437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9437,
											"name": "PUSH",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9427,
											"end": 9437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9427,
											"end": 9437,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9379,
											"end": 9437,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 9379,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9488,
											"name": "PUSH",
											"source": 0,
											"value": "54183095B2C8ECECF30FFFFFFFFFFFFFF"
										},
										{
											"begin": 9452,
											"end": 9494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 9448,
											"end": 9506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9506,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9496,
											"end": 9506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9496,
											"end": 9506,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9506,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 9448,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9557,
											"name": "PUSH",
											"source": 0,
											"value": "50A28BE635CA2B888F77FFFFFFFFFFFFF"
										},
										{
											"begin": 9521,
											"end": 9563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 9517,
											"end": 9575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9575,
											"name": "tag",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 9517,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9626,
											"name": "PUSH",
											"source": 0,
											"value": "4D5156639708C9DB33C3FFFFFFFFFFFFF"
										},
										{
											"begin": 9590,
											"end": 9632,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 9586,
											"end": 9644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9642,
											"end": 9644,
											"name": "PUSH",
											"source": 0,
											"value": "4A"
										},
										{
											"begin": 9634,
											"end": 9644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9634,
											"end": 9644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9644,
											"name": "tag",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 9586,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9695,
											"name": "PUSH",
											"source": 0,
											"value": "4A23105873875BD52DFDFFFFFFFFFFFFF"
										},
										{
											"begin": 9659,
											"end": 9701,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 9655,
											"end": 9713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "4B"
										},
										{
											"begin": 9703,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9703,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9703,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9703,
											"end": 9713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 9655,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "471649D87199AA990756FFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9724,
											"end": 9782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "657"
										},
										{
											"begin": 9724,
											"end": 9782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "4C"
										},
										{
											"begin": 9772,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9772,
											"end": 9782,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9724,
											"end": 9782,
											"name": "tag",
											"source": 0,
											"value": "657"
										},
										{
											"begin": 9724,
											"end": 9782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9833,
											"name": "PUSH",
											"source": 0,
											"value": "4429A21A029D4C1457CFBFFFFFFFFFFFF"
										},
										{
											"begin": 9797,
											"end": 9839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9793,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 9793,
											"end": 9851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9849,
											"end": 9851,
											"name": "PUSH",
											"source": 0,
											"value": "4D"
										},
										{
											"begin": 9841,
											"end": 9851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9841,
											"end": 9851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9841,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9841,
											"end": 9851,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9793,
											"end": 9851,
											"name": "tag",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 9793,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9902,
											"name": "PUSH",
											"source": 0,
											"value": "415BC6D6FB7DD71AF2CB3FFFFFFFFFFFF"
										},
										{
											"begin": 9866,
											"end": 9908,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 9862,
											"end": 9920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9918,
											"end": 9920,
											"name": "PUSH",
											"source": 0,
											"value": "4E"
										},
										{
											"begin": 9910,
											"end": 9920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9910,
											"end": 9920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9910,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9910,
											"end": 9920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9920,
											"name": "tag",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 9862,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 9977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9971,
											"name": "PUSH",
											"source": 0,
											"value": "3EAB73B3BBFE282243CE1FFFFFFFFFFFF"
										},
										{
											"begin": 9935,
											"end": 9977,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 9931,
											"end": 9989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9989,
											"name": "PUSH",
											"source": 0,
											"value": "4F"
										},
										{
											"begin": 9979,
											"end": 9989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9979,
											"end": 9989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9979,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 9979,
											"end": 9989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9989,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 9931,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10044,
											"end": 10046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10040,
											"name": "PUSH",
											"source": 0,
											"value": "3C1771AC9FB6B4C18E229FFFFFFFFFFFF"
										},
										{
											"begin": 10004,
											"end": 10046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 10000,
											"end": 10058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10056,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10048,
											"end": 10058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10048,
											"end": 10058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10058,
											"name": "tag",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 10000,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "399E96897690418F785257FFFFFFFFFFF"
										},
										{
											"begin": 10073,
											"end": 10115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 10069,
											"end": 10127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10117,
											"end": 10127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10117,
											"end": 10127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10117,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10117,
											"end": 10127,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10127,
											"name": "tag",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 10069,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10142,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "373FC456C53BB779BF0EA9FFFFFFFFFFF"
										},
										{
											"begin": 10142,
											"end": 10184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 10138,
											"end": 10196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10186,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10186,
											"end": 10196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10196,
											"name": "tag",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 10138,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10251,
											"end": 10253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10211,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "34F9E8E490C48E67E6AB8BFFFFFFFFFFF"
										},
										{
											"begin": 10211,
											"end": 10253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 10207,
											"end": 10265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10263,
											"end": 10265,
											"name": "PUSH",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 10255,
											"end": 10265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10255,
											"end": 10265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10255,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10255,
											"end": 10265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10265,
											"name": "tag",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 10207,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10316,
											"name": "PUSH",
											"source": 0,
											"value": "32CBFD4A7ADC790560B3337FFFFFFFFFF"
										},
										{
											"begin": 10280,
											"end": 10322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 10276,
											"end": 10334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10334,
											"name": "PUSH",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10324,
											"end": 10334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10324,
											"end": 10334,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10334,
											"name": "tag",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 10276,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10349,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "30B50570F6E5D2ACCA94613FFFFFFFFFF"
										},
										{
											"begin": 10349,
											"end": 10391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10345,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 10345,
											"end": 10403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10393,
											"end": 10403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10393,
											"end": 10403,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10345,
											"end": 10403,
											"name": "tag",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 10345,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10418,
											"end": 10454,
											"name": "PUSH",
											"source": 0,
											"value": "2EB40F9F620FDA6B56C2861FFFFFFFFFF"
										},
										{
											"begin": 10418,
											"end": 10460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 10414,
											"end": 10472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10470,
											"end": 10472,
											"name": "PUSH",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10462,
											"end": 10472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10462,
											"end": 10472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10472,
											"name": "tag",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 10414,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10523,
											"name": "PUSH",
											"source": 0,
											"value": "2CC8340ECB0D0F520A6AF58FFFFFFFFFF"
										},
										{
											"begin": 10487,
											"end": 10529,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10483,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 10483,
											"end": 10541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10539,
											"end": 10541,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10483,
											"end": 10541,
											"name": "tag",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 10483,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10556,
											"end": 10592,
											"name": "PUSH",
											"source": 0,
											"value": "2AF09481380A0A35CF1BA02FFFFFFFFFF"
										},
										{
											"begin": 10556,
											"end": 10598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10600,
											"end": 10610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10600,
											"end": 10610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10600,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10600,
											"end": 10610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "tag",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 10552,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10661,
											"name": "PUSH",
											"source": 0,
											"value": "292C5BDD3B92EC810287B1B3FFFFFFFFF"
										},
										{
											"begin": 10625,
											"end": 10667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 10621,
											"end": 10679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10669,
											"end": 10679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10669,
											"end": 10679,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10679,
											"name": "tag",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 10621,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10694,
											"end": 10730,
											"name": "PUSH",
											"source": 0,
											"value": "277ABDCDAB07D5A77AC6D6B9FFFFFFFFF"
										},
										{
											"begin": 10694,
											"end": 10736,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10690,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 10690,
											"end": 10748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10748,
											"name": "PUSH",
											"source": 0,
											"value": "5A"
										},
										{
											"begin": 10738,
											"end": 10748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10738,
											"end": 10748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10690,
											"end": 10748,
											"name": "tag",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 10690,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10803,
											"end": 10805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10799,
											"name": "PUSH",
											"source": 0,
											"value": "25DAF6654B1EAA55FD64DF5EFFFFFFFFF"
										},
										{
											"begin": 10763,
											"end": 10805,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10759,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 10759,
											"end": 10817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10815,
											"end": 10817,
											"name": "PUSH",
											"source": 0,
											"value": "5B"
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10759,
											"end": 10817,
											"name": "tag",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 10759,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10872,
											"end": 10874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10868,
											"name": "PUSH",
											"source": 0,
											"value": "244C49C648BAA98192DCE88B7FFFFFFFF"
										},
										{
											"begin": 10832,
											"end": 10874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 10828,
											"end": 10886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10884,
											"end": 10886,
											"name": "PUSH",
											"source": 0,
											"value": "5C"
										},
										{
											"begin": 10876,
											"end": 10886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10876,
											"end": 10886,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10886,
											"name": "tag",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 10828,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 10943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10901,
											"end": 10937,
											"name": "PUSH",
											"source": 0,
											"value": "22CE03CD5619A311B2471268BFFFFFFFF"
										},
										{
											"begin": 10901,
											"end": 10943,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 10897,
											"end": 10955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 10955,
											"name": "PUSH",
											"source": 0,
											"value": "5D"
										},
										{
											"begin": 10945,
											"end": 10955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10945,
											"end": 10955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10945,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 10945,
											"end": 10955,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 10955,
											"name": "tag",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 10897,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10970,
											"end": 11006,
											"name": "PUSH",
											"source": 0,
											"value": "215F77C045FBE885654A44A0FFFFFFFFF"
										},
										{
											"begin": 10970,
											"end": 11012,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 10966,
											"end": 11024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11022,
											"end": 11024,
											"name": "PUSH",
											"source": 0,
											"value": "5E"
										},
										{
											"begin": 11014,
											"end": 11024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11014,
											"end": 11024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11014,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11014,
											"end": 11024,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11024,
											"name": "tag",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 10966,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11039,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11039,
											"end": 11081,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11035,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 11035,
											"end": 11093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 0,
											"value": "5F"
										},
										{
											"begin": 11083,
											"end": 11093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11083,
											"end": 11093,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11035,
											"end": 11093,
											"name": "tag",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 11035,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11148,
											"end": 11150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11108,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "1EAEFDBDAAEE7421FC4D3EDE5FFFFFFFF"
										},
										{
											"begin": 11108,
											"end": 11150,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 11104,
											"end": 11162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11162,
											"name": "tag",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 11104,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11213,
											"name": "PUSH",
											"source": 0,
											"value": "1D6BD8B2EB257DF7E8CA57B09BFFFFFFF"
										},
										{
											"begin": 11177,
											"end": 11219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 11173,
											"end": 11231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11221,
											"end": 11231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11221,
											"end": 11231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11221,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11221,
											"end": 11231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11231,
											"name": "tag",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 11173,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11282,
											"name": "PUSH",
											"source": 0,
											"value": "1C35FEDD14B861EB0443F7F133FFFFFFF"
										},
										{
											"begin": 11246,
											"end": 11288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11242,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 11242,
											"end": 11300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11298,
											"end": 11300,
											"name": "PUSH",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11290,
											"end": 11300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11290,
											"end": 11300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11242,
											"end": 11300,
											"name": "tag",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 11242,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11355,
											"end": 11357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11315,
											"end": 11351,
											"name": "PUSH",
											"source": 0,
											"value": "1B0CE43B322BCDE4A56E8ADA5AFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11357,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11311,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 11311,
											"end": 11369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11369,
											"name": "PUSH",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11311,
											"end": 11369,
											"name": "tag",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 11311,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11424,
											"end": 11426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11420,
											"name": "PUSH",
											"source": 0,
											"value": "19F0028EC1FFF007F5A195A39DFFFFFFF"
										},
										{
											"begin": 11384,
											"end": 11426,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 11380,
											"end": 11438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11438,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11428,
											"end": 11438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11428,
											"end": 11438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11428,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11428,
											"end": 11438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11380,
											"end": 11438,
											"name": "tag",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 11380,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11493,
											"end": 11495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11453,
											"end": 11489,
											"name": "PUSH",
											"source": 0,
											"value": "18DED91F0E72EE74F49B15BA527FFFFFF"
										},
										{
											"begin": 11453,
											"end": 11495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "682"
										},
										{
											"begin": 11449,
											"end": 11507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11507,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11497,
											"end": 11507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11497,
											"end": 11507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11497,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11497,
											"end": 11507,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "682"
										},
										{
											"begin": 11449,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11562,
											"end": 11564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11522,
											"end": 11558,
											"name": "PUSH",
											"source": 0,
											"value": "17D8EC7F04136F4E5615FD41A63FFFFFF"
										},
										{
											"begin": 11522,
											"end": 11564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 11518,
											"end": 11576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11566,
											"end": 11576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11566,
											"end": 11576,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11576,
											"name": "tag",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 11518,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11591,
											"end": 11627,
											"name": "PUSH",
											"source": 0,
											"value": "16DDC6556CDB84BDC8D12D22E6FFFFFFF"
										},
										{
											"begin": 11591,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "684"
										},
										{
											"begin": 11587,
											"end": 11645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11635,
											"end": 11645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11635,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11635,
											"end": 11645,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11645,
											"name": "tag",
											"source": 0,
											"value": "684"
										},
										{
											"begin": 11587,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 11702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "PUSH",
											"source": 0,
											"value": "15ECF52776A1155B5BD8395814F7FFFFF"
										},
										{
											"begin": 11660,
											"end": 11702,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11656,
											"end": 11714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 11656,
											"end": 11714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11714,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11704,
											"end": 11714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11704,
											"end": 11714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11704,
											"end": 11714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11704,
											"end": 11714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11656,
											"end": 11714,
											"name": "tag",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 11656,
											"end": 11714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11769,
											"end": 11771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11729,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "15060C256CB23B3B3CC3754CF40FFFFFF"
										},
										{
											"begin": 11729,
											"end": 11771,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11725,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 11725,
											"end": 11783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 11773,
											"end": 11783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11773,
											"end": 11783,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11725,
											"end": 11783,
											"name": "tag",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 11725,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11838,
											"end": 11840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "1428A2F98D728AE223DDAB715BE3FFFFF"
										},
										{
											"begin": 11798,
											"end": 11840,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11794,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 11794,
											"end": 11852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11852,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11794,
											"end": 11852,
											"name": "tag",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 11794,
											"end": 11852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11907,
											"end": 11909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11867,
											"end": 11903,
											"name": "PUSH",
											"source": 0,
											"value": "13545598E5C23276CCF0EDE68034FFFFF"
										},
										{
											"begin": 11867,
											"end": 11909,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11863,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 11863,
											"end": 11921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11918,
											"end": 11921,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11863,
											"end": 11921,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 11863,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11976,
											"end": 11978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11936,
											"end": 11972,
											"name": "PUSH",
											"source": 0,
											"value": "1288C4161CE1D6F54B7F61081194FFFFF"
										},
										{
											"begin": 11936,
											"end": 11978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 11932,
											"end": 11990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11987,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 11980,
											"end": 11990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11980,
											"end": 11990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11980,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 11980,
											"end": 11990,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 11990,
											"name": "tag",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 11932,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 12047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12005,
											"end": 12041,
											"name": "PUSH",
											"source": 0,
											"value": "11C592761C666AA641D5A01A40F17FFFF"
										},
										{
											"begin": 12005,
											"end": 12047,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12001,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 12001,
											"end": 12059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 12049,
											"end": 12059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12049,
											"end": 12059,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12001,
											"end": 12059,
											"name": "tag",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 12001,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12114,
											"end": 12116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "110A688680A7530515F3E6E6CFDCDFFFF"
										},
										{
											"begin": 12074,
											"end": 12116,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12070,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 12070,
											"end": 12128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12128,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 12118,
											"end": 12128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12118,
											"end": 12128,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12070,
											"end": 12128,
											"name": "tag",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 12070,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12183,
											"end": 12185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12143,
											"end": 12179,
											"name": "PUSH",
											"source": 0,
											"value": "1056F1B5BEDF75C6BCB2CE8AED428FFFF"
										},
										{
											"begin": 12143,
											"end": 12185,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 12139,
											"end": 12197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12194,
											"end": 12197,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 12187,
											"end": 12197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12187,
											"end": 12197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12187,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12187,
											"end": 12197,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12197,
											"name": "tag",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 12139,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12212,
											"end": 12248,
											"name": "PUSH",
											"source": 0,
											"value": "FAADCECEEFF8A0890F3875F008277FFF"
										},
										{
											"begin": 12212,
											"end": 12254,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12208,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 12208,
											"end": 12266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12263,
											"end": 12266,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12256,
											"end": 12266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12256,
											"end": 12266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12208,
											"end": 12266,
											"name": "tag",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 12208,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 12323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12281,
											"end": 12317,
											"name": "PUSH",
											"source": 0,
											"value": "F05DC6B27EDAD306388A600F6BA0BFFF"
										},
										{
											"begin": 12281,
											"end": 12323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 12277,
											"end": 12335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12325,
											"end": 12335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12325,
											"end": 12335,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12335,
											"name": "tag",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 12277,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12350,
											"end": 12386,
											"name": "PUSH",
											"source": 0,
											"value": "E67A5A25DA41063DE1495D5B18CDBFFF"
										},
										{
											"begin": 12350,
											"end": 12392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12346,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 12346,
											"end": 12404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12401,
											"end": 12404,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12394,
											"end": 12404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12394,
											"end": 12404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12394,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12394,
											"end": 12404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12346,
											"end": 12404,
											"name": "tag",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 12346,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12459,
											"end": 12461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12419,
											"end": 12455,
											"name": "PUSH",
											"source": 0,
											"value": "DCFF115B14EEDDE6FC3AA5353F2E4FFF"
										},
										{
											"begin": 12419,
											"end": 12461,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 12415,
											"end": 12473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12470,
											"end": 12473,
											"name": "PUSH",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12463,
											"end": 12473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12463,
											"end": 12473,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12473,
											"name": "tag",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 12415,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12528,
											"end": 12530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12488,
											"end": 12524,
											"name": "PUSH",
											"source": 0,
											"value": "D3E7A3924312399F9AAE2E0F868F8FFF"
										},
										{
											"begin": 12488,
											"end": 12530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 12484,
											"end": 12542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12542,
											"name": "PUSH",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12532,
											"end": 12542,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12542,
											"name": "tag",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 12484,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12597,
											"end": 12599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12593,
											"name": "PUSH",
											"source": 0,
											"value": "CB2FF529EB71E41582CCCD5A1EE26FFF"
										},
										{
											"begin": 12557,
											"end": 12599,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12553,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 12553,
											"end": 12611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12608,
											"end": 12611,
											"name": "PUSH",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12601,
											"end": 12611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12601,
											"end": 12611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12601,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12601,
											"end": 12611,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12553,
											"end": 12611,
											"name": "tag",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 12553,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12666,
											"end": 12668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12626,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "C2D415C3DB974AB32A51840C0B67EDFF"
										},
										{
											"begin": 12626,
											"end": 12668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "699"
										},
										{
											"begin": 12622,
											"end": 12680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "PUSH",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12670,
											"end": 12680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12670,
											"end": 12680,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12680,
											"name": "tag",
											"source": 0,
											"value": "699"
										},
										{
											"begin": 12622,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12735,
											"end": 12737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12695,
											"end": 12731,
											"name": "PUSH",
											"source": 0,
											"value": "BAD03E7D883F69AD5B0A186184E06BFF"
										},
										{
											"begin": 12695,
											"end": 12737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 12691,
											"end": 12749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "PUSH",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12739,
											"end": 12749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12749,
											"name": "tag",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 12691,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12764,
											"end": 12800,
											"name": "PUSH",
											"source": 0,
											"value": "B320D03B2C343D4829ABD6075F0CC5FF"
										},
										{
											"begin": 12764,
											"end": 12806,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12760,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "701"
										},
										{
											"begin": 12760,
											"end": 12818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12815,
											"end": 12818,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12808,
											"end": 12818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12808,
											"end": 12818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12808,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12808,
											"end": 12818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12760,
											"end": 12818,
											"name": "tag",
											"source": 0,
											"value": "701"
										},
										{
											"begin": 12760,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12873,
											"end": 12875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12869,
											"name": "PUSH",
											"source": 0,
											"value": "ABC25204E02828D73C6E80BCDB1A95BF"
										},
										{
											"begin": 12833,
											"end": 12875,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12829,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "702"
										},
										{
											"begin": 12829,
											"end": 12887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12884,
											"end": 12887,
											"name": "PUSH",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12877,
											"end": 12887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12877,
											"end": 12887,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12829,
											"end": 12887,
											"name": "tag",
											"source": 0,
											"value": "702"
										},
										{
											"begin": 12829,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12942,
											"end": 12944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "A4B16F74EE4BB2040A1EC6C15FBBF2DF"
										},
										{
											"begin": 12902,
											"end": 12944,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12898,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "703"
										},
										{
											"begin": 12898,
											"end": 12956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12956,
											"name": "PUSH",
											"source": 0,
											"value": "7A"
										},
										{
											"begin": 12946,
											"end": 12956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12946,
											"end": 12956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12946,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 12946,
											"end": 12956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12898,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "703"
										},
										{
											"begin": 12898,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13007,
											"name": "PUSH",
											"source": 0,
											"value": "9DEAF736AC1F569DEB1B5AE3F36C130F"
										},
										{
											"begin": 12971,
											"end": 13013,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12967,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 12967,
											"end": 13025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13025,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 13015,
											"end": 13025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13015,
											"end": 13025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13015,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 13015,
											"end": 13025,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12967,
											"end": 13025,
											"name": "tag",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 12967,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13076,
											"name": "PUSH",
											"source": 0,
											"value": "976BD9952C7AA957F5937D790EF65037"
										},
										{
											"begin": 13040,
											"end": 13082,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13094,
											"name": "PUSH",
											"source": 0,
											"value": "7C"
										},
										{
											"begin": 13084,
											"end": 13094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 13084,
											"end": 13094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "tag",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13149,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13109,
											"end": 13145,
											"name": "PUSH",
											"source": 0,
											"value": "9131271922EAA6064B73A22D0BD4F2BF"
										},
										{
											"begin": 13109,
											"end": 13151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 13105,
											"end": 13163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13163,
											"name": "PUSH",
											"source": 0,
											"value": "7D"
										},
										{
											"begin": 13153,
											"end": 13163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 13153,
											"end": 13163,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13163,
											"name": "tag",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 13105,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13178,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "8B380F3558668C46C91C49A2F8E967B9"
										},
										{
											"begin": 13178,
											"end": 13220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13229,
											"end": 13232,
											"name": "PUSH",
											"source": 0,
											"value": "7E"
										},
										{
											"begin": 13222,
											"end": 13232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13222,
											"end": 13232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13222,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 13222,
											"end": 13232,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "tag",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13287,
											"end": 13289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13247,
											"end": 13283,
											"name": "PUSH",
											"source": 0,
											"value": "857DDF0117EFA215952912839F6473E6"
										},
										{
											"begin": 13247,
											"end": 13289,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13243,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 13243,
											"end": 13301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13298,
											"end": 13301,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13243,
											"end": 13301,
											"name": "tag",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 13243,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13320,
											"end": 13325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "tag",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 13312,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13344,
											"end": 13345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13337,
											"end": 13345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 13353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14013,
											"end": 14023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14085,
											"end": 14095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14072,
											"end": 14095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14073,
											"end": 14080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "tag",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14095,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14067,
											"end": 14095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14067,
											"end": 14095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14109,
											"end": 14142,
											"name": "PUSH",
											"source": 0,
											"value": "3442C4E6074A82F1797F72AC0000000"
										},
										{
											"begin": 14104,
											"end": 14106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14104,
											"end": 14142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "tag",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 14104,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "713"
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14097,
											"end": 14142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "tag",
											"source": 0,
											"value": "713"
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14207,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14184,
											"end": 14207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14185,
											"end": 14192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "tag",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 14185,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14207,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14254,
											"name": "PUSH",
											"source": 0,
											"value": "116B96F757C380FB287FD0E40000000"
										},
										{
											"begin": 14216,
											"end": 14218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "715"
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14216,
											"end": 14254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "tag",
											"source": 0,
											"value": "715"
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14209,
											"end": 14254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "tag",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14319,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14296,
											"end": 14319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "717"
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14297,
											"end": 14304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "tag",
											"source": 0,
											"value": "717"
										},
										{
											"begin": 14297,
											"end": 14304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14296,
											"end": 14319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14333,
											"end": 14366,
											"name": "PUSH",
											"source": 0,
											"value": "45AE5BDD5F0E03ECA1FF4390000000"
										},
										{
											"begin": 14328,
											"end": 14330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14328,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "tag",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 14328,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "719"
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14321,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "tag",
											"source": 0,
											"value": "719"
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14408,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14408,
											"end": 14431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14414,
											"end": 14416,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14409,
											"end": 14416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "tag",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 14409,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14408,
											"end": 14431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14408,
											"end": 14431,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14478,
											"name": "PUSH",
											"source": 0,
											"value": "DEFABF91302CD95B9FFDA50000000"
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14440,
											"end": 14478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "tag",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 14440,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "722"
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14433,
											"end": 14478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "tag",
											"source": 0,
											"value": "722"
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14533,
											"end": 14543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14520,
											"end": 14543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "723"
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14521,
											"end": 14528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "tag",
											"source": 0,
											"value": "723"
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14543,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14515,
											"end": 14543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14515,
											"end": 14543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14590,
											"name": "PUSH",
											"source": 0,
											"value": "2529CA9832B22439EFFF9B8000000"
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14552,
											"end": 14590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "tag",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 14552,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14545,
											"end": 14590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "tag",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14655,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14632,
											"end": 14655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14633,
											"end": 14640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "tag",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 14633,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14655,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14702,
											"name": "PUSH",
											"source": 0,
											"value": "54F1CF12BD04E516B6DA88000000"
										},
										{
											"begin": 14664,
											"end": 14666,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "727"
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14664,
											"end": 14702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "tag",
											"source": 0,
											"value": "727"
										},
										{
											"begin": 14664,
											"end": 14702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14657,
											"end": 14702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "tag",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14757,
											"end": 14767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14750,
											"end": 14752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14745,
											"end": 14752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "tag",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 14745,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14739,
											"end": 14767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "A9E39E257A09CA2D6DB51000000"
										},
										{
											"begin": 14776,
											"end": 14778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14776,
											"end": 14814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "tag",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 14776,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14769,
											"end": 14814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "tag",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14769,
											"end": 14814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14869,
											"end": 14879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14856,
											"end": 14879,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14856,
											"end": 14879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14862,
											"end": 14864,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14857,
											"end": 14864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "tag",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 14857,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14856,
											"end": 14879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14856,
											"end": 14879,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 14879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 14879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14893,
											"end": 14926,
											"name": "PUSH",
											"source": 0,
											"value": "12E066E7B839FA050C309000000"
										},
										{
											"begin": 14888,
											"end": 14890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "733"
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14888,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "tag",
											"source": 0,
											"value": "733"
										},
										{
											"begin": 14888,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "734"
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14881,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "tag",
											"source": 0,
											"value": "734"
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 14991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14991,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14968,
											"end": 14991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14974,
											"end": 14976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "735"
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14969,
											"end": 14976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "tag",
											"source": 0,
											"value": "735"
										},
										{
											"begin": 14969,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14968,
											"end": 14991,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14963,
											"end": 14991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14963,
											"end": 14991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15005,
											"end": 15038,
											"name": "PUSH",
											"source": 0,
											"value": "1E33D7D926C329A1AD1A800000"
										},
										{
											"begin": 15000,
											"end": 15002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15000,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "tag",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 15000,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14993,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "tag",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14993,
											"end": 15038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15093,
											"end": 15103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "738"
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15081,
											"end": 15088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "tag",
											"source": 0,
											"value": "738"
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15103,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15075,
											"end": 15103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15075,
											"end": 15103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15117,
											"end": 15150,
											"name": "PUSH",
											"source": 0,
											"value": "2BEE513BDB4A6B19B5F800000"
										},
										{
											"begin": 15112,
											"end": 15114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15112,
											"end": 15150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "tag",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 15112,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15105,
											"end": 15150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "tag",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15205,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15192,
											"end": 15215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "741"
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15193,
											"end": 15200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "tag",
											"source": 0,
											"value": "741"
										},
										{
											"begin": 15193,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15215,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15229,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "3A9316FA79B88ECCF2A00000"
										},
										{
											"begin": 15224,
											"end": 15226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "742"
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15224,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "tag",
											"source": 0,
											"value": "742"
										},
										{
											"begin": 15224,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15217,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "tag",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15217,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15317,
											"end": 15327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15304,
											"end": 15327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15305,
											"end": 15312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "tag",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 15305,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15304,
											"end": 15327,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15341,
											"end": 15374,
											"name": "PUSH",
											"source": 0,
											"value": "48177EBE1FA812375200000"
										},
										{
											"begin": 15336,
											"end": 15338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15336,
											"end": 15374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 15336,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "746"
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15329,
											"end": 15374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "746"
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15429,
											"end": 15439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15439,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15416,
											"end": 15439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15424,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15417,
											"end": 15419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "747"
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15417,
											"end": 15424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "tag",
											"source": 0,
											"value": "747"
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15439,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15411,
											"end": 15439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15411,
											"end": 15439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15453,
											"end": 15486,
											"name": "PUSH",
											"source": 0,
											"value": "5263FE90242DCBACF00000"
										},
										{
											"begin": 15448,
											"end": 15450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "748"
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15448,
											"end": 15486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "tag",
											"source": 0,
											"value": "748"
										},
										{
											"begin": 15448,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "749"
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15441,
											"end": 15486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "tag",
											"source": 0,
											"value": "749"
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15528,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15528,
											"end": 15551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15536,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15529,
											"end": 15536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "tag",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15528,
											"end": 15551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15528,
											"end": 15551,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15523,
											"end": 15551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15523,
											"end": 15551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15565,
											"end": 15598,
											"name": "PUSH",
											"source": 0,
											"value": "57E22099C030D94100000"
										},
										{
											"begin": 15560,
											"end": 15562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "751"
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15560,
											"end": 15598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "tag",
											"source": 0,
											"value": "751"
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15553,
											"end": 15598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "tag",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15553,
											"end": 15598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15653,
											"end": 15663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15663,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15640,
											"end": 15663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15648,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15641,
											"end": 15648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "tag",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 15641,
											"end": 15648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15663,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "57E22099C030D9410000"
										},
										{
											"begin": 15672,
											"end": 15674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "754"
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15672,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "754"
										},
										{
											"begin": 15672,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "755"
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15665,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "755"
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15665,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15765,
											"end": 15775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15752,
											"end": 15775,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15752,
											"end": 15775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15758,
											"end": 15760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "756"
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15753,
											"end": 15760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "tag",
											"source": 0,
											"value": "756"
										},
										{
											"begin": 15753,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15752,
											"end": 15775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15752,
											"end": 15775,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15789,
											"end": 15822,
											"name": "PUSH",
											"source": 0,
											"value": "52B6B54569976310000"
										},
										{
											"begin": 15784,
											"end": 15786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15784,
											"end": 15822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "tag",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 15784,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "758"
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15777,
											"end": 15822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "tag",
											"source": 0,
											"value": "758"
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15887,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15864,
											"end": 15887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15872,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "759"
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15865,
											"end": 15872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "tag",
											"source": 0,
											"value": "759"
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15887,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15859,
											"end": 15887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15859,
											"end": 15887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15901,
											"end": 15934,
											"name": "PUSH",
											"source": 0,
											"value": "4985F67696BF748000"
										},
										{
											"begin": 15896,
											"end": 15898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15896,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "tag",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "761"
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15889,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "tag",
											"source": 0,
											"value": "761"
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15889,
											"end": 15934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15989,
											"end": 15999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15976,
											"end": 15999,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15976,
											"end": 15999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15982,
											"end": 15984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15977,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 15977,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15976,
											"end": 15999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15976,
											"end": 15999,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 16046,
											"name": "PUSH",
											"source": 0,
											"value": "3DEA12EA99E498000"
										},
										{
											"begin": 16008,
											"end": 16010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16008,
											"end": 16046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "tag",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 16008,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16001,
											"end": 16046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "tag",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16088,
											"end": 16111,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16088,
											"end": 16111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16096,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16089,
											"end": 16091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "765"
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16089,
											"end": 16096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "tag",
											"source": 0,
											"value": "765"
										},
										{
											"begin": 16089,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16088,
											"end": 16111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16088,
											"end": 16111,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16083,
											"end": 16111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16125,
											"end": 16158,
											"name": "PUSH",
											"source": 0,
											"value": "31880F2214B6E000"
										},
										{
											"begin": 16120,
											"end": 16122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16120,
											"end": 16158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "tag",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 16120,
											"end": 16158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "767"
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16113,
											"end": 16158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "tag",
											"source": 0,
											"value": "767"
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16223,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16200,
											"end": 16223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16208,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16201,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "tag",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16223,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16195,
											"end": 16223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16195,
											"end": 16223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16237,
											"end": 16270,
											"name": "PUSH",
											"source": 0,
											"value": "25BCFF56EB36000"
										},
										{
											"begin": 16232,
											"end": 16234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "769"
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16232,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "tag",
											"source": 0,
											"value": "769"
										},
										{
											"begin": 16232,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16225,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "tag",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16312,
											"end": 16335,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16312,
											"end": 16335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "771"
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16313,
											"end": 16320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "tag",
											"source": 0,
											"value": "771"
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16312,
											"end": 16335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16312,
											"end": 16335,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16307,
											"end": 16335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16307,
											"end": 16335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16349,
											"end": 16382,
											"name": "PUSH",
											"source": 0,
											"value": "1B722E10AB1000"
										},
										{
											"begin": 16344,
											"end": 16346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "772"
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16344,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "tag",
											"source": 0,
											"value": "772"
										},
										{
											"begin": 16344,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16337,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "tag",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16437,
											"end": 16447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16424,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16424,
											"end": 16447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16430,
											"end": 16432,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16425,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "tag",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16424,
											"end": 16447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16424,
											"end": 16447,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16494,
											"name": "PUSH",
											"source": 0,
											"value": "1317C70077000"
										},
										{
											"begin": 16456,
											"end": 16458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16456,
											"end": 16494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "tag",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 16456,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16449,
											"end": 16494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "tag",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16536,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16542,
											"end": 16544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "777"
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16537,
											"end": 16544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "tag",
											"source": 0,
											"value": "777"
										},
										{
											"begin": 16537,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16559,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 16559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16573,
											"end": 16606,
											"name": "PUSH",
											"source": 0,
											"value": "CBA84AAFA00"
										},
										{
											"begin": 16568,
											"end": 16570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "778"
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16568,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "tag",
											"source": 0,
											"value": "778"
										},
										{
											"begin": 16568,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16561,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "tag",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16561,
											"end": 16606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16648,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16648,
											"end": 16671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16654,
											"end": 16656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "780"
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16649,
											"end": 16656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "tag",
											"source": 0,
											"value": "780"
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16648,
											"end": 16671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16648,
											"end": 16671,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16685,
											"end": 16718,
											"name": "PUSH",
											"source": 0,
											"value": "82573A0A00"
										},
										{
											"begin": 16680,
											"end": 16682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "781"
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16680,
											"end": 16718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "tag",
											"source": 0,
											"value": "781"
										},
										{
											"begin": 16680,
											"end": 16718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16673,
											"end": 16718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "tag",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16673,
											"end": 16718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16773,
											"end": 16783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16760,
											"end": 16783,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16760,
											"end": 16783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16766,
											"end": 16768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "783"
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16761,
											"end": 16768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "tag",
											"source": 0,
											"value": "783"
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16760,
											"end": 16783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16760,
											"end": 16783,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16755,
											"end": 16783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16755,
											"end": 16783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16797,
											"end": 16830,
											"name": "PUSH",
											"source": 0,
											"value": "5035AD900"
										},
										{
											"begin": 16792,
											"end": 16794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16792,
											"end": 16830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "tag",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 16792,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "785"
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16785,
											"end": 16830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "tag",
											"source": 0,
											"value": "785"
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16785,
											"end": 16830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16895,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16872,
											"end": 16895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16878,
											"end": 16880,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "786"
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16873,
											"end": 16880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "tag",
											"source": 0,
											"value": "786"
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16895,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16942,
											"name": "PUSH",
											"source": 0,
											"value": "2F881B00"
										},
										{
											"begin": 16904,
											"end": 16906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "787"
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16904,
											"end": 16942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "787"
										},
										{
											"begin": 16904,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "788"
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16897,
											"end": 16942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "tag",
											"source": 0,
											"value": "788"
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 16942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16984,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16984,
											"end": 17007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16990,
											"end": 16992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16985,
											"end": 16987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "789"
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 16985,
											"end": 16992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "tag",
											"source": 0,
											"value": "789"
										},
										{
											"begin": 16985,
											"end": 16992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16984,
											"end": 17007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16984,
											"end": 17007,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 17007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 17007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17054,
											"name": "PUSH",
											"source": 0,
											"value": "1B29340"
										},
										{
											"begin": 17016,
											"end": 17018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "790"
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17016,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "tag",
											"source": 0,
											"value": "790"
										},
										{
											"begin": 17016,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17009,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "tag",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17009,
											"end": 17054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17102,
											"end": 17104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "792"
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17097,
											"end": 17104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "tag",
											"source": 0,
											"value": "792"
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17096,
											"end": 17119,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17166,
											"name": "PUSH",
											"source": 0,
											"value": "EFC40"
										},
										{
											"begin": 17128,
											"end": 17130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17128,
											"end": 17166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "tag",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 17128,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17121,
											"end": 17166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "tag",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17231,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17208,
											"end": 17231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17216,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17209,
											"end": 17216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "tag",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 17209,
											"end": 17216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17208,
											"end": 17231,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17278,
											"name": "PUSH",
											"source": 0,
											"value": "7FE0"
										},
										{
											"begin": 17240,
											"end": 17242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "796"
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17240,
											"end": 17278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "tag",
											"source": 0,
											"value": "796"
										},
										{
											"begin": 17240,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17233,
											"end": 17278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "tag",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17333,
											"end": 17343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17320,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17320,
											"end": 17343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17326,
											"end": 17328,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "798"
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17321,
											"end": 17328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "tag",
											"source": 0,
											"value": "798"
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17320,
											"end": 17343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17320,
											"end": 17343,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 17352,
											"end": 17354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17352,
											"end": 17390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "tag",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 17352,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "800"
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17345,
											"end": 17390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "tag",
											"source": 0,
											"value": "800"
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17445,
											"end": 17455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17438,
											"end": 17440,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "801"
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17433,
											"end": 17440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "tag",
											"source": 0,
											"value": "801"
										},
										{
											"begin": 17433,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17432,
											"end": 17455,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17469,
											"end": 17502,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17464,
											"end": 17466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "802"
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17464,
											"end": 17502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "802"
										},
										{
											"begin": 17464,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17457,
											"end": 17502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17557,
											"end": 17567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17567,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17544,
											"end": 17567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17550,
											"end": 17552,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "804"
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17545,
											"end": 17552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "tag",
											"source": 0,
											"value": "804"
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17544,
											"end": 17567,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17581,
											"end": 17614,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17576,
											"end": 17578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "805"
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17576,
											"end": 17614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "tag",
											"source": 0,
											"value": "805"
										},
										{
											"begin": 17576,
											"end": 17614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17569,
											"end": 17614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "tag",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17715,
											"end": 17725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17708,
											"end": 17725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17708,
											"end": 17725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17666,
											"end": 17699,
											"name": "PUSH",
											"source": 0,
											"value": "688589CC0E9505E2F2FEE5580000000"
										},
										{
											"begin": 17660,
											"end": 17663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17660,
											"end": 17699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "tag",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 17660,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "808"
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17660,
											"end": 17704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "tag",
											"source": 0,
											"value": "808"
										},
										{
											"begin": 17660,
											"end": 17704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "809"
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17660,
											"end": 17726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "tag",
											"source": 0,
											"value": "809"
										},
										{
											"begin": 17660,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 17726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 17726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 17726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 17726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13920,
											"end": 17784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 6232,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 5690,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5792,
											"end": 5794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "tag",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5866,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "813"
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "814"
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5915,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "tag",
											"source": 0,
											"value": "814"
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "tag",
											"source": 0,
											"value": "813"
										},
										{
											"begin": 5854,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "815"
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "tag",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6022,
											"end": 6035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "tag",
											"source": 0,
											"value": "816"
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6042,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6037,
											"end": 6042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6083,
											"end": 6091,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6083,
											"end": 6091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6083,
											"end": 6091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6083,
											"end": 6091,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6092,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "819"
										},
										{
											"begin": 6072,
											"end": 6176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6156,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6176,
											"name": "tag",
											"source": 0,
											"value": "819"
										},
										{
											"begin": 6072,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "816"
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "tag",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "tag",
											"source": 0,
											"value": "815"
										},
										{
											"begin": 5788,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 6232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 6232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 6232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "821"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "822"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "823"
										},
										{
											"begin": 334,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 434,
											"end": 450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 434,
											"end": 450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 462,
											"end": 674,
											"name": "tag",
											"source": 3,
											"value": "824"
										},
										{
											"begin": 462,
											"end": 674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "843"
										},
										{
											"begin": 643,
											"end": 648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 580,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "823"
										},
										{
											"begin": 580,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 580,
											"end": 649,
											"name": "tag",
											"source": 3,
											"value": "843"
										},
										{
											"begin": 580,
											"end": 649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 573,
											"end": 578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 570,
											"end": 650,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 560,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "844"
										},
										{
											"begin": 560,
											"end": 668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 560,
											"end": 668,
											"name": "tag",
											"source": 3,
											"value": "844"
										},
										{
											"begin": 560,
											"end": 668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 462,
											"end": 674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 462,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "825"
										},
										{
											"begin": 680,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 771,
											"end": 776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 816,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 787,
											"end": 816,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 787,
											"end": 816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 825,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "846"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 825,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "824"
										},
										{
											"begin": 825,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 825,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "846"
										},
										{
											"begin": 825,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 915,
											"end": 992,
											"name": "tag",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 915,
											"end": 992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 970,
											"end": 986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 915,
											"end": 992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 915,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 915,
											"end": 992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 915,
											"end": 992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1120,
											"name": "tag",
											"source": 3,
											"value": "827"
										},
										{
											"begin": 998,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "849"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 1071,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "tag",
											"source": 3,
											"value": "849"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "850"
										},
										{
											"begin": 1051,
											"end": 1114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "850"
										},
										{
											"begin": 1051,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "tag",
											"source": 3,
											"value": "828"
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "852"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "827"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "852"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1427,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1439,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1444,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1528,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "854"
										},
										{
											"begin": 1409,
											"end": 1528,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "855"
										},
										{
											"begin": 1447,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "821"
										},
										{
											"begin": 1447,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "855"
										},
										{
											"begin": 1447,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1528,
											"name": "tag",
											"source": 3,
											"value": "854"
										},
										{
											"begin": 1409,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "856"
										},
										{
											"begin": 1682,
											"end": 1689,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "825"
										},
										{
											"begin": 1592,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1690,
											"name": "tag",
											"source": 3,
											"value": "856"
										},
										{
											"begin": 1592,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1690,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "857"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "828"
										},
										{
											"begin": 1765,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "tag",
											"source": 3,
											"value": "857"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1967,
											"name": "tag",
											"source": 3,
											"value": "829"
										},
										{
											"begin": 1841,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "859"
										},
										{
											"begin": 1954,
											"end": 1959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 1936,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "tag",
											"source": 3,
											"value": "859"
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "861"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "829"
										},
										{
											"begin": 2125,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2204,
											"name": "tag",
											"source": 3,
											"value": "861"
										},
										{
											"begin": 2125,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2334,
											"name": "tag",
											"source": 3,
											"value": "830"
										},
										{
											"begin": 2217,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2457,
											"name": "tag",
											"source": 3,
											"value": "831"
										},
										{
											"begin": 2340,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2580,
											"name": "tag",
											"source": 3,
											"value": "832"
										},
										{
											"begin": 2463,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "tag",
											"source": 3,
											"value": "833"
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2740,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "866"
										},
										{
											"begin": 2703,
											"end": 2825,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "867"
										},
										{
											"begin": 2744,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "830"
										},
										{
											"begin": 2744,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2823,
											"name": "tag",
											"source": 3,
											"value": "867"
										},
										{
											"begin": 2744,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2825,
											"name": "tag",
											"source": 3,
											"value": "866"
										},
										{
											"begin": 2703,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2864,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2906,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "868"
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "869"
										},
										{
											"begin": 2909,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "831"
										},
										{
											"begin": 2909,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2988,
											"name": "tag",
											"source": 3,
											"value": "869"
										},
										{
											"begin": 2909,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "868"
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3027,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3080,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3073,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3074,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3075,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3081,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "870"
										},
										{
											"begin": 3037,
											"end": 3165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "871"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "832"
										},
										{
											"begin": 3084,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "tag",
											"source": 3,
											"value": "871"
										},
										{
											"begin": 3084,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3165,
											"name": "tag",
											"source": 3,
											"value": "870"
										},
										{
											"begin": 3037,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 3171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3357,
											"end": 3380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3385,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "873"
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "874"
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "821"
										},
										{
											"begin": 3388,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "tag",
											"source": 3,
											"value": "874"
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "tag",
											"source": 3,
											"value": "873"
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "875"
										},
										{
											"begin": 3623,
											"end": 3630,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "825"
										},
										{
											"begin": 3533,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3631,
											"name": "tag",
											"source": 3,
											"value": "875"
										},
										{
											"begin": 3533,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3631,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3479,
											"end": 3641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3758,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "876"
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "877"
										},
										{
											"begin": 3761,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "822"
										},
										{
											"begin": 3761,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3840,
											"name": "tag",
											"source": 3,
											"value": "877"
										},
										{
											"begin": 3761,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "876"
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3874,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "878"
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3937,
											"end": 3943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3922,
											"end": 3944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3874,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "833"
										},
										{
											"begin": 3874,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3874,
											"end": 3954,
											"name": "tag",
											"source": 3,
											"value": "878"
										},
										{
											"begin": 3874,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3954,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3954,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 4157,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3977,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4102,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4103,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4151,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 4163,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4211,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4208,
											"end": 4209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4337,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4435,
											"name": "tag",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 4349,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4417,
											"end": 4422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4429,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4402,
											"end": 4429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4402,
											"end": 4429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4441,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "883"
										},
										{
											"begin": 4517,
											"end": 4522,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 4501,
											"end": 4523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "tag",
											"source": 3,
											"value": "883"
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4549,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4538,
											"end": 4543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "884"
										},
										{
											"begin": 4532,
											"end": 4573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "885"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 4553,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "tag",
											"source": 3,
											"value": "885"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4573,
											"name": "tag",
											"source": 3,
											"value": "884"
										},
										{
											"begin": 4532,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4593,
											"end": 4598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4582,
											"end": 4602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4582,
											"end": 4602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "887"
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 4674,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "887"
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4669,
											"end": 4694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4669,
											"end": 4694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "888"
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 4708,
											"end": 4728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "tag",
											"source": 3,
											"value": "888"
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4778,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4801,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "889"
										},
										{
											"begin": 4764,
											"end": 4801,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "890"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 4781,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "tag",
											"source": 3,
											"value": "890"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4801,
											"name": "tag",
											"source": 3,
											"value": "889"
										},
										{
											"begin": 4764,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4994,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4814,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4939,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 4964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4988,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "893"
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 5057,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "tag",
											"source": 3,
											"value": "893"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "894"
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 5089,
											"end": 5107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "tag",
											"source": 3,
											"value": "894"
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5107,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5148,
											"end": 5151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5158,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "895"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "896"
										},
										{
											"begin": 5161,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 5161,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5179,
											"name": "tag",
											"source": 3,
											"value": "896"
										},
										{
											"begin": 5161,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "tag",
											"source": 3,
											"value": "895"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5194,
											"end": 5374,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5194,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 5319,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5339,
											"end": 5343,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5336,
											"end": 5337,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5329,
											"end": 5344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5367,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5368,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "899"
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 5439,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5459,
											"name": "tag",
											"source": 3,
											"value": "899"
										},
										{
											"begin": 5439,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "900"
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 5473,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "900"
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5540,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5531,
											"end": 5541,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5564,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "901"
										},
										{
											"begin": 5528,
											"end": 5564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "902"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 5544,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "tag",
											"source": 3,
											"value": "902"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5564,
											"name": "tag",
											"source": 3,
											"value": "901"
										},
										{
											"begin": 5528,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5757,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5577,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 5702,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5726,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5743,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5751,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5763,
											"end": 5943,
											"name": "tag",
											"source": 3,
											"value": "836"
										},
										{
											"begin": 5763,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5888,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5929,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5937,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 5990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "906"
										},
										{
											"begin": 6024,
											"end": 6025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6006,
											"end": 6026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "tag",
											"source": 3,
											"value": "906"
										},
										{
											"begin": 6006,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6026,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "907"
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6040,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6060,
											"name": "tag",
											"source": 3,
											"value": "907"
										},
										{
											"begin": 6040,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6060,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "908"
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "909"
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "836"
										},
										{
											"begin": 6084,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "tag",
											"source": 3,
											"value": "909"
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "tag",
											"source": 3,
											"value": "908"
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6123,
											"end": 6124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6128,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6114,
											"end": 6128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6114,
											"end": 6128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 6134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6180,
											"end": 6187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "911"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6203,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6203,
											"end": 6223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6203,
											"end": 6223,
											"name": "tag",
											"source": 3,
											"value": "911"
										},
										{
											"begin": 6203,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6223,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "912"
										},
										{
											"begin": 6255,
											"end": 6256,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6237,
											"end": 6257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6257,
											"name": "tag",
											"source": 3,
											"value": "912"
										},
										{
											"begin": 6237,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6257,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6289,
											"end": 6290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6294,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "913"
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 3,
											"value": "913"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6484,
											"end": 6491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6496,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6510,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "914"
										},
										{
											"begin": 6404,
											"end": 6543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "915"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 6523,
											"end": 6541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "tag",
											"source": 3,
											"value": "915"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6543,
											"name": "tag",
											"source": 3,
											"value": "914"
										},
										{
											"begin": 6404,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "917"
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 6614,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "tag",
											"source": 3,
											"value": "917"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "918"
										},
										{
											"begin": 6662,
											"end": 6663,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 6646,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "tag",
											"source": 3,
											"value": "918"
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6716,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6717,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6740,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "919"
										},
										{
											"begin": 6700,
											"end": 6740,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "920"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 3,
											"value": "920"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6740,
											"name": "tag",
											"source": 3,
											"value": "919"
										},
										{
											"begin": 6700,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6920,
											"name": "tag",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 6753,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6790,
											"end": 6793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "922"
										},
										{
											"begin": 6829,
											"end": 6834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "835"
										},
										{
											"begin": 6813,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6835,
											"name": "tag",
											"source": 3,
											"value": "922"
										},
										{
											"begin": 6813,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6857,
											"end": 6861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "923"
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "924"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "834"
										},
										{
											"begin": 6865,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "tag",
											"source": 3,
											"value": "924"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "tag",
											"source": 3,
											"value": "923"
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6905,
											"end": 6910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6901,
											"end": 6914,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6894,
											"end": 6914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6894,
											"end": 6914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "926"
										},
										{
											"begin": 6993,
											"end": 6994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 6975,
											"end": 6995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6995,
											"name": "tag",
											"source": 3,
											"value": "926"
										},
										{
											"begin": 6975,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "927"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "826"
										},
										{
											"begin": 7009,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "tag",
											"source": 3,
											"value": "927"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "928"
										},
										{
											"begin": 7038,
											"end": 7073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "929"
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "836"
										},
										{
											"begin": 7053,
											"end": 7071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "tag",
											"source": 3,
											"value": "929"
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7073,
											"name": "tag",
											"source": 3,
											"value": "928"
										},
										{
											"begin": 7038,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"BancorPower.sol",
								"Equation.sol",
								"openzeppelin-solidity/contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculate(Equation.Node[] storage,uint256)": "4dec36e3",
							"init(Equation.Node[] storage,uint256[])": "8e501fc7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(Equation.Node[] storage,uint256[])\":{\"details\":\"Initialize equation by array of opcodes/values in prefix order. Array is read as if it is the *pre-order* traversal of the expression tree.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculate(Equation.Node[] storage,uint256)\":{\"notice\":\"Calculate the Y position from the X position for this equation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Equation.sol\":\"Equation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BancorPower.sol\":{\"keccak256\":\"0x57af7d4dbd6838243123a74ab2ffb1547105204c64d2f24d0352ea184c41db38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1de09b93e7d26869162c0ecc0bb08997a0efa35d41d3296bb8cfc96b70bd6fa\",\"dweb:/ipfs/QmYSYmwummE7v3GA3ukHrkEwSjLnafXQzj5CN8QP7HZNoc\"]},\"Equation.sol\":{\"keccak256\":\"0x2f863c44d5ce98a73406f2097b39de6262a15f4226b3e1c192aeacd47c981975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48a424f425dfb61ebc373af4e421b21614e236f4c4aef8bb8c389c5dc6287ccd\",\"dweb:/ipfs/QmRapP5GtPmRr88KJHLD9iWL81qmQCPxpUVXH2uqZ6inks\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x0c1300c35c12691b679fb7084ffa234e0b02067a3bdeb0731c406df87144df9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60b3868bf8e52d578558e064a0456c0e22d23afa64d8d3e12edd6329a2b7a302\",\"dweb:/ipfs/QmRzEYJmUfZ8DToEaLVaCbKg6GQgvnrTZamfQ5vsHZcZGr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculate(Equation.Node[] storage,uint256)": {
								"notice": "Calculate the Y position from the X position for this equation."
							}
						},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":150:1166  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":150:1166  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204aa8d1e6856e572f68aa92734d09e8c58853bda480705f812f3b9eea51fc367264736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204aa8d1e6856e572f68aa92734d09e8c58853bda480705f812f3b9eea51fc367264736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xA8 0xD1 0xE6 DUP6 PUSH15 0x572F68AA92734D09E8C58853BDA480 PUSH17 0x5F812F3B9EEA51FC367264736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "150:1016:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204aa8d1e6856e572f68aa92734d09e8c58853bda480705f812f3b9eea51fc367264736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xA8 0xD1 0xE6 DUP6 PUSH15 0x572F68AA92734D09E8C58853BDA480 PUSH17 0x5F812F3B9EEA51FC367264736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "150:1016:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 150,
									"end": 1166,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204aa8d1e6856e572f68aa92734d09e8c58853bda480705f812f3b9eea51fc367264736f6c63430008170033",
									".code": [
										{
											"begin": 150,
											"end": 1166,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 1166,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"BancorPower.sol",
								"Equation.sol",
								"openzeppelin-solidity/contracts/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x0c1300c35c12691b679fb7084ffa234e0b02067a3bdeb0731c406df87144df9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60b3868bf8e52d578558e064a0456c0e22d23afa64d8d3e12edd6329a2b7a302\",\"dweb:/ipfs/QmRzEYJmUfZ8DToEaLVaCbKg6GQgvnrTZamfQ5vsHZcZGr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"BancorPower.sol": {
				"ast": {
					"absolutePath": "BancorPower.sol",
					"exportedSymbols": {
						"BancorPower": [
							2177
						],
						"SafeMath": [
							3497
						]
					},
					"id": 2178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2178,
							"sourceUnit": 3498,
							"src": "61:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BancorPower",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "126:572:0",
								"text": " @title BancorPower, modified from the original \"BancorFomula.sol\"\n        written by Bancor https://github.com/bancorprotocol/contracts\n @dev Changes include:\n  1. Remove Bancor's specific functions and replace SafeMath with OpenZeppelin's.\n  2. Change code from Contract to Library and change maxExpArray from being array\n     with binary search inside `findPositionInMaxExpArray` to a simple linear search.\n  3. Add requirement check that baseN >= baseD (this is always true for Bancor).\n Licensed under Apache Lisense, Version 2.0."
							},
							"fullyImplemented": true,
							"id": 2177,
							"linearizedBaseContracts": [
								2177
							],
							"name": "BancorPower",
							"nameLocation": "708:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 6,
									"libraryName": {
										"id": 4,
										"name": "SafeMath",
										"nameLocations": [
											"733:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3497,
										"src": "733:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "727:27:0",
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "746:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "version",
									"nameLocation": "787:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "762:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 7,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "762:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "302e33",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "797:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a25c22aa6f10fa2261b798fea6b4e2f0567ea2644e38ffd2fdadd1108b091261",
											"typeString": "literal_string \"0.3\""
										},
										"value": "0.3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "ONE",
									"nameLocation": "834:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "809:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "840:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "MAX_WEIGHT",
									"nameLocation": "872:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "848:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 13,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "848:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "885:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "MIN_PRECISION",
									"nameLocation": "922:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "899:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 16,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "899:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "938:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 21,
									"mutability": "constant",
									"name": "MAX_PRECISION",
									"nameLocation": "970:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "947:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 19,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "947:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "313237",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "986:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_127_by_1",
											"typeString": "int_const 127"
										},
										"value": "127"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "998:67:0",
										"text": "Auto-generated via 'PrintIntScalingFactors.py'"
									},
									"id": 25,
									"mutability": "constant",
									"name": "FIXED_1",
									"nameLocation": "1096:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1071:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1071:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078303830303030303030303030303030303030303030303030303030303030303030",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1106:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
											"typeString": "int_const 1701...(31 digits omitted)...5728"
										},
										"value": "0x080000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 28,
									"mutability": "constant",
									"name": "FIXED_2",
									"nameLocation": "1173:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1148:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1148:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1183:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"value": "0x100000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "MAX_NUM",
									"nameLocation": "1250:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1225:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1225:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078323030303030303030303030303030303030303030303030303030303030303030",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1260:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_680564733841876926926749214863536422912_by_1",
											"typeString": "int_const 6805...(31 digits omitted)...2912"
										},
										"value": "0x200000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1304:67:0",
										"text": "Auto-generated via 'PrintLn2ScalingFactors.py'"
									},
									"id": 35,
									"mutability": "constant",
									"name": "LN2_NUMERATOR",
									"nameLocation": "1402:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1377:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307833663830666530336638306665303366383066653033663830666530336638",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1420:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5275695611177340518812009417546793976_by_1",
											"typeString": "int_const 5275...(29 digits omitted)...3976"
										},
										"value": "0x3f80fe03f80fe03f80fe03f80fe03f8"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "LN2_DENOMINATOR",
									"nameLocation": "1485:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1460:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1460:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307835623964653164313062663431303364363437623039353538393762613830",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1503:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7611219895485218073587121647846406784_by_1",
											"typeString": "int_const 7611...(29 digits omitted)...6784"
										},
										"value": "0x5b9de1d10bf4103d647b0955897ba80"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1545:101:0",
										"text": "Auto-generated via 'PrintFunctionOptimalLog.py' and 'PrintFunctionOptimalExp.py'"
									},
									"id": 42,
									"mutability": "constant",
									"name": "OPT_LOG_MAX_VAL",
									"nameLocation": "1677:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1652:78:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313562663061386231343537363935333535666238616334303465376137396533",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1695:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_462491687273110168575455517921668397539_by_1",
											"typeString": "int_const 4624...(31 digits omitted)...7539"
										},
										"value": "0x15bf0a8b1457695355fb8ac404e7a79e3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 45,
									"mutability": "constant",
									"name": "OPT_EXP_MAX_VAL",
									"nameLocation": "1762:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "1737:78:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1737:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078383030303030303030303030303030303030303030303030303030303030303030",
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2722258935367507707706996859454145691648_by_1",
											"typeString": "int_const 2722...(32 digits omitted)...1648"
										},
										"value": "0x800000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "3364:713:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "_baseN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "3383:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 63,
																"name": "MAX_NUM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "3392:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3383:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "3375:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "_baseN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "3419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 69,
																"name": "_baseD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "3429:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3419:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "3411:25:0"
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "baseLog",
														"nameLocation": "3457:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "3449:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 75,
												"nodeType": "VariableDeclarationStatement",
												"src": "3449:15:0"
											},
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "3483:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "3475:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 76,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "_baseN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "3490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 79,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3490:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 81,
														"name": "_baseD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3490:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3475:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 84,
														"name": "base",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "3530:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 85,
														"name": "OPT_LOG_MAX_VAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3537:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3530:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 100,
													"nodeType": "Block",
													"src": "3622:53:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 94,
																	"name": "baseLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 96,
																			"name": "base",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "3658:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 95,
																		"name": "generalLog",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3647:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3647:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3637:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "3637:26:0"
														}
													]
												},
												"id": 101,
												"nodeType": "IfStatement",
												"src": "3526:149:0",
												"trueBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "3554:53:0",
													"statements": [
														{
															"expression": {
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 87,
																	"name": "baseLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3569:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 89,
																			"name": "base",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "3590:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 88,
																		"name": "optimalLog",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "3579:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3579:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3569:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 92,
															"nodeType": "ExpressionStatement",
															"src": "3569:26:0"
														}
													]
												}
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "baseLogTimesExp",
														"nameLocation": "3695:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "3687:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 104,
															"name": "baseLog",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "3713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 105,
															"name": "_expN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "3723:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "3713:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 107,
														"name": "_expD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3731:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3713:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3687:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 110,
														"name": "baseLogTimesExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3751:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 111,
														"name": "OPT_EXP_MAX_VAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3769:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3751:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "3879:191:0",
													"statements": [
														{
															"assignments": [
																121
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 121,
																	"mutability": "mutable",
																	"name": "precision",
																	"nameLocation": "3900:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 138,
																	"src": "3894:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 120,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3894:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 125,
															"initialValue": {
																"arguments": [
																	{
																		"id": 123,
																		"name": "baseLogTimesExp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 103,
																		"src": "3938:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 122,
																	"name": "findPositionInMaxExpArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "3912:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																		"typeString": "function (uint256) pure returns (uint8)"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3912:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3894:60:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 127,
																					"name": "baseLogTimesExp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 103,
																					"src": "3988:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 130,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 128,
																								"name": "MAX_PRECISION",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 21,
																								"src": "4008:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 129,
																								"name": "precision",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 121,
																								"src": "4024:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "4008:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 131,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4007:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "3988:46:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 133,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "4036:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 126,
																			"name": "generalExp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "3977:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint8) pure returns (uint256)"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3977:69:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 135,
																		"name": "precision",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "4048:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3976:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(uint256,uint8)"
																}
															},
															"functionReturnParameters": 60,
															"id": 137,
															"nodeType": "Return",
															"src": "3969:89:0"
														}
													]
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "3747:323:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "3786:78:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 114,
																				"name": "baseLogTimesExp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 103,
																				"src": "3820:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 113,
																			"name": "optimalExp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "3809:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3809:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 116,
																		"name": "MAX_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "3838:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3808:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(uint256,uint8)"
																}
															},
															"functionReturnParameters": 60,
															"id": 118,
															"nodeType": "Return",
															"src": "3801:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1824:1420:0",
										"text": "General Description:\nDetermine a value of precision.\nCalculate an integer approximation of (_baseN / _baseD) ^ (_expN / _expD) * 2 ^ precision.\nReturn the result along with the precision used.\nDetailed Description:\nInstead of calculating \"base ^ exp\", we calculate \"e ^ (log(base) * exp)\".\nThe value of \"log(base)\" is represented with an integer slightly smaller than \"log(base) * 2 ^ precision\".\nThe larger \"precision\" is, the more accurately this value represents the real value.\nHowever, the larger \"precision\" is, the more bits are required in order to store this value.\nAnd the exponentiation function, which takes \"x\" and calculates \"e ^ x\", is limited to a maximum exponent (maximum value of \"x\").\nThis maximum exponent depends on the \"precision\" used, and it is given by \"maxExpArray[precision] >> (MAX_PRECISION - precision)\".\nHence we need to determine the highest precision which can be used for the given input, before calling the exponentiation function.\nThis allows us to compute \"base ^ exp\" with maximum accuracy and without exceeding 256 bits in any of the intermediate computations.\nThis functions assumes that \"_expN < 2 ^ 256 / log(MAX_NUM - 1)\", otherwise the multiplication should be replaced with a \"safeMul\"."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "3259:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_baseN",
												"nameLocation": "3273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_baseD",
												"nameLocation": "3289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_expN",
												"nameLocation": "3304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3297:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 51,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_expD",
												"nameLocation": "3318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 53,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3311:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:60:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3357:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 58,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3357:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:16:0"
									},
									"scope": 2177,
									"src": "3250:827:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4219:355:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 154,
																"name": "_baseN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4276:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 155,
																"name": "_baseD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4276:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4268:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "4268:25:0"
											},
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "baseLog",
														"nameLocation": "4314:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "4306:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"nodeType": "VariableDeclarationStatement",
												"src": "4306:15:0"
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "4340:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "4332:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 164,
															"name": "_baseN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4347:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 165,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4347:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 167,
														"name": "_baseD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "4366:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4347:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4332:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "base",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "4387:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 171,
														"name": "OPT_LOG_MAX_VAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "4394:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4387:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "4470:53:0",
													"statements": [
														{
															"expression": {
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 180,
																	"name": "baseLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "4485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 182,
																			"name": "base",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "4506:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 181,
																		"name": "generalLog",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "4495:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4495:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4485:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "4485:26:0"
														}
													]
												},
												"id": 187,
												"nodeType": "IfStatement",
												"src": "4383:140:0",
												"trueBody": {
													"id": 179,
													"nodeType": "Block",
													"src": "4411:53:0",
													"statements": [
														{
															"expression": {
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 173,
																	"name": "baseLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "4426:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 175,
																			"name": "base",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "4447:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 174,
																		"name": "optimalLog",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "4436:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4436:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4426:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 178,
															"nodeType": "ExpressionStatement",
															"src": "4426:26:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 188,
																	"name": "baseLog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "4543:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 189,
																	"name": "_c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "4553:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4543:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 191,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4542:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 192,
														"name": "FIXED_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4542:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 152,
												"id": 194,
												"nodeType": "Return",
												"src": "4535:31:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4085:39:0",
										"text": "   c >= 10^18"
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log",
									"nameLocation": "4139:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_c",
												"nameLocation": "4151:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4143:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "_baseN",
												"nameLocation": "4163:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4155:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_baseD",
												"nameLocation": "4179:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4171:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4142:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:9:0"
									},
									"scope": 2177,
									"src": "4130:444:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "4808:760:0",
										"statements": [
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "4827:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "4819:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4833:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4819:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 208,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "4943:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 209,
														"name": "FIXED_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "4948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4943:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "4939:156:0",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "4957:138:0",
													"statements": [
														{
															"assignments": [
																212
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 212,
																	"mutability": "mutable",
																	"name": "count",
																	"nameLocation": "4978:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 229,
																	"src": "4972:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 211,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4972:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 218,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 214,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "4996:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 215,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "5000:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4996:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 213,
																	"name": "floorLog2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "4986:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																		"typeString": "function (uint256) pure returns (uint8)"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4986:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4972:36:0"
														},
														{
															"expression": {
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 219,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "5023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"id": 220,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5029:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5023:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 222,
															"nodeType": "ExpressionStatement",
															"src": "5023:11:0"
														},
														{
															"expression": {
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 223,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5062:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 224,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 212,
																		"src": "5068:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 225,
																		"name": "FIXED_1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5076:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5068:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5062:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 228,
															"nodeType": "ExpressionStatement",
															"src": "5062:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 231,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 232,
														"name": "FIXED_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "5207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5203:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "IfStatement",
												"src": "5199:305:0",
												"trueBody": {
													"id": 273,
													"nodeType": "Block",
													"src": "5216:288:0",
													"statements": [
														{
															"body": {
																"id": 271,
																"nodeType": "Block",
																"src": "5273:220:0",
																"statements": [
																	{
																		"expression": {
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 244,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "5292:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 245,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 199,
																								"src": "5297:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 246,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 199,
																								"src": "5301:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5297:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 248,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5296:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 249,
																					"name": "FIXED_1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "5306:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5296:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5292:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 252,
																		"nodeType": "ExpressionStatement",
																		"src": "5292:21:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 253,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "5353:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 254,
																				"name": "FIXED_2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "5358:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5353:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 270,
																		"nodeType": "IfStatement",
																		"src": "5349:129:0",
																		"trueBody": {
																			"id": 269,
																			"nodeType": "Block",
																			"src": "5367:111:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 256,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 199,
																							"src": "5390:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": ">>=",
																						"rightHandSide": {
																							"hexValue": "31",
																							"id": 257,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5396:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "5390:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 259,
																					"nodeType": "ExpressionStatement",
																					"src": "5390:7:0"
																				},
																				{
																					"expression": {
																						"id": 267,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 260,
																							"name": "res",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 205,
																							"src": "5437:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 266,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 261,
																								"name": "ONE",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 12,
																								"src": "5444:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 264,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 262,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 235,
																											"src": "5452:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 263,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "5456:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "5452:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"id": 265,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "5451:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "5444:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5437:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 268,
																					"nodeType": "ExpressionStatement",
																					"src": "5437:21:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 238,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "5261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5265:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"initializationExpression": {
																"assignments": [
																	235
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 235,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5242:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 272,
																		"src": "5236:7:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 234,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5236:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 237,
																"initialValue": {
																	"id": 236,
																	"name": "MAX_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5246:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5236:23:0"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": true,
																	"src": "5268:3:0",
																	"subExpression": {
																		"id": 241,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "5270:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 243,
																"nodeType": "ExpressionStatement",
																"src": "5268:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5231:262:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 275,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5523:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 276,
															"name": "LN2_NUMERATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "5529:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5523:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 278,
														"name": "LN2_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "5545:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5523:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 203,
												"id": 280,
												"nodeType": "Return",
												"src": "5516:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4582:157:0",
										"text": "Compute log(x / FIXED_1) * FIXED_1.\nThis functions assumes that \"x >= FIXED_1\", because the output would be negative otherwise."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generalLog",
									"nameLocation": "4754:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:11:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4798:9:0"
									},
									"scope": 2177,
									"src": "4745:823:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "5751:481:0",
										"statements": [
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "5768:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "5762:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 290,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"hexValue": "30",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5774:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5762:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 294,
														"name": "_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "5792:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "323536",
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5797:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													},
													"src": "5792:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "5965:237:0",
													"statements": [
														{
															"body": {
																"id": 338,
																"nodeType": "Block",
																"src": "6053:138:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 322,
																				"name": "_n",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 285,
																				"src": "6076:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 323,
																							"name": "ONE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 12,
																							"src": "6083:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 324,
																							"name": "s",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 312,
																							"src": "6090:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "6083:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 326,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6082:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6076:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 337,
																		"nodeType": "IfStatement",
																		"src": "6072:104:0",
																		"trueBody": {
																			"id": 336,
																			"nodeType": "Block",
																			"src": "6094:82:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 328,
																							"name": "_n",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 285,
																							"src": "6117:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": ">>=",
																						"rightHandSide": {
																							"id": 329,
																							"name": "s",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 312,
																							"src": "6124:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "6117:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 331,
																					"nodeType": "ExpressionStatement",
																					"src": "6117:8:0"
																				},
																				{
																					"expression": {
																						"id": 334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 332,
																							"name": "res",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 291,
																							"src": "6148:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "|=",
																						"rightHandSide": {
																							"id": 333,
																							"name": "s",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 312,
																							"src": "6155:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "6148:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 335,
																					"nodeType": "ExpressionStatement",
																					"src": "6148:8:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "6037:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6037:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 339,
															"initializationExpression": {
																"assignments": [
																	312
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 312,
																		"mutability": "mutable",
																		"name": "s",
																		"nameLocation": "6028:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 339,
																		"src": "6022:7:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 311,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "6022:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 314,
																"initialValue": {
																	"hexValue": "313238",
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6032:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6022:13:0"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 318,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "6044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": ">>=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6050:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6044:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 321,
																"nodeType": "ExpressionStatement",
																"src": "6044:7:0"
															},
															"nodeType": "ForStatement",
															"src": "6017:174:0"
														}
													]
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "5788:414:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "5802:148:0",
													"statements": [
														{
															"body": {
																"id": 308,
																"nodeType": "Block",
																"src": "5869:70:0",
																"statements": [
																	{
																		"expression": {
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 300,
																				"name": "_n",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 285,
																				"src": "5888:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": ">>=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5895:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5888:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 303,
																		"nodeType": "ExpressionStatement",
																		"src": "5888:8:0"
																	},
																	{
																		"expression": {
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 304,
																				"name": "res",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 291,
																				"src": "5915:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5922:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5915:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 307,
																		"nodeType": "ExpressionStatement",
																		"src": "5915:8:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "_n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "5861:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5861:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 309,
															"nodeType": "WhileStatement",
															"src": "5854:85:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 342,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "6221:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 289,
												"id": 343,
												"nodeType": "Return",
												"src": "6214:10:0"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "5576:108:0",
										"text": "Compute the largest integer smaller than or equal to the binary logarithm of the input."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "floorLog2",
									"nameLocation": "5699:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_n",
												"nameLocation": "5717:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "5709:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:12:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "5744:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 287,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5743:7:0"
									},
									"scope": 2177,
									"src": "5690:542:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "6677:6676:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831633335666564643134666666666666666666666666666666666666666666666666",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6692:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9599678685041259184274752310158947254271_by_1",
															"typeString": "int_const 9599...(32 digits omitted)...4271"
														},
														"value": "0x1c35fedd14ffffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 354,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "6732:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6692:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "6688:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3332",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6744:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"functionReturnParameters": 352,
													"id": 357,
													"nodeType": "Return",
													"src": "6736:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831623063653433623332336666666666666666666666666666666666666666666666",
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6761:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9204759687141885226475603015507577405439_by_1",
															"typeString": "int_const 9204...(32 digits omitted)...5439"
														},
														"value": "0x1b0ce43b323fffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 360,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "6801:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6761:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"nodeType": "IfStatement",
												"src": "6757:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3333",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6813:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_33_by_1",
															"typeString": "int_const 33"
														},
														"value": "33"
													},
													"functionReturnParameters": 352,
													"id": 363,
													"nodeType": "Return",
													"src": "6805:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831396630303238656331666666666666666666666666666666666666666666666666",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6830:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8826087172077985712041017634911355404287_by_1",
															"typeString": "int_const 8826...(32 digits omitted)...4287"
														},
														"value": "0x19f0028ec1ffffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 366,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "6870:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6830:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6826:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3334",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6882:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_34_by_1",
															"typeString": "int_const 34"
														},
														"value": "34"
													},
													"functionReturnParameters": 352,
													"id": 369,
													"nodeType": "Return",
													"src": "6874:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831386465643931663065376666666666666666666666666666666666666666666666",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6899:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8462992779488582574159642900919291478015_by_1",
															"typeString": "int_const 8462...(32 digits omitted)...8015"
														},
														"value": "0x18ded91f0e7fffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 372,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "6939:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6899:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "6895:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3335",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6951:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_35_by_1",
															"typeString": "int_const 35"
														},
														"value": "35"
													},
													"functionReturnParameters": 352,
													"id": 375,
													"nodeType": "Return",
													"src": "6943:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831376438656337663034313766666666666666666666666666666666666666666666",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6968:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8114835644520100661580084966409403105279_by_1",
															"typeString": "int_const 8114...(32 digits omitted)...5279"
														},
														"value": "0x17d8ec7f0417ffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 378,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7008:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "IfStatement",
												"src": "6964:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3336",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7020:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_36_by_1",
															"typeString": "int_const 36"
														},
														"value": "36"
													},
													"functionReturnParameters": 352,
													"id": 381,
													"nodeType": "Return",
													"src": "7012:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831366464633635353663646266666666666666666666666666666666666666666666",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7037:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7781001266736647064069662172832600162303_by_1",
															"typeString": "int_const 7781...(32 digits omitted)...2303"
														},
														"value": "0x16ddc6556cdbffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 384,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7077:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7037:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "IfStatement",
												"src": "7033:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3337",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7089:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_37_by_1",
															"typeString": "int_const 37"
														},
														"value": "37"
													},
													"functionReturnParameters": 352,
													"id": 387,
													"nodeType": "Return",
													"src": "7081:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831356563663532373736613166666666666666666666666666666666666666666666",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7106:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7460900425488323202194551465008353509375_by_1",
															"typeString": "int_const 7460...(32 digits omitted)...9375"
														},
														"value": "0x15ecf52776a1ffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 390,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7146:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7106:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "7102:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3338",
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7158:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"functionReturnParameters": 352,
													"id": 393,
													"nodeType": "Return",
													"src": "7150:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831353036306332353663623266666666666666666666666666666666666666666666",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7175:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7153968139937914349310206877837545177087_by_1",
															"typeString": "int_const 7153...(32 digits omitted)...7087"
														},
														"value": "0x15060c256cb2ffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 396,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7215:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7175:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 400,
												"nodeType": "IfStatement",
												"src": "7171:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3339",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7227:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_39_by_1",
															"typeString": "int_const 39"
														},
														"value": "39"
													},
													"functionReturnParameters": 352,
													"id": 399,
													"nodeType": "Return",
													"src": "7219:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831343238613266393864373266666666666666666666666666666666666666666666",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7244:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6859662671868001546166128217910528704511_by_1",
															"typeString": "int_const 6859...(32 digits omitted)...4511"
														},
														"value": "0x1428a2f98d72ffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 402,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7284:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7244:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "7240:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3430",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7296:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"functionReturnParameters": 352,
													"id": 405,
													"nodeType": "Return",
													"src": "7288:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831333534353539386535633233666666666666666666666666666666666666666666",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7313:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6577464569506365633454696454958677491711_by_1",
															"typeString": "int_const 6577...(32 digits omitted)...1711"
														},
														"value": "0x13545598e5c23fffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 408,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7353:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7313:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 412,
												"nodeType": "IfStatement",
												"src": "7309:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3431",
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7365:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"functionReturnParameters": 352,
													"id": 411,
													"nodeType": "Return",
													"src": "7357:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831323838633431363163653164666666666666666666666666666666666666666666",
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7382:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6306875750689218484600399768107450630143_by_1",
															"typeString": "int_const 6306...(32 digits omitted)...0143"
														},
														"value": "0x1288c4161ce1dfffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 414,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7422:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7382:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "IfStatement",
												"src": "7378:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3432",
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7434:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"value": "42"
													},
													"functionReturnParameters": 352,
													"id": 417,
													"nodeType": "Return",
													"src": "7426:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831316335393237363163363636666666666666666666666666666666666666666666",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7451:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6047418623741353042663269283551730728959_by_1",
															"typeString": "int_const 6047...(32 digits omitted)...8959"
														},
														"value": "0x11c592761c666fffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 420,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7491:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7451:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "7447:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3433",
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7503:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_43_by_1",
															"typeString": "int_const 43"
														},
														"value": "43"
													},
													"functionReturnParameters": 352,
													"id": 423,
													"nodeType": "Return",
													"src": "7495:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831313061363838363830613735376666666666666666666666666666666666666666",
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7520:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5798635244522972732941736303310812479487_by_1",
															"typeString": "int_const 5798...(32 digits omitted)...9487"
														},
														"value": "0x110a688680a757ffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 426,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7560:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7520:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "7516:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3434",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7572:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_44_by_1",
															"typeString": "int_const 44"
														},
														"value": "44"
													},
													"functionReturnParameters": 352,
													"id": 429,
													"nodeType": "Return",
													"src": "7564:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307831303536663162356265646637376666666666666666666666666666666666666666",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7589:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5560086508154074440893281558760167309311_by_1",
															"typeString": "int_const 5560...(32 digits omitted)...9311"
														},
														"value": "0x1056f1b5bedf77ffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 432,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7629:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7589:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 436,
												"nodeType": "IfStatement",
												"src": "7585:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3435",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7641:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_45_by_1",
															"typeString": "int_const 45"
														},
														"value": "45"
													},
													"functionReturnParameters": 352,
													"id": 435,
													"nodeType": "Return",
													"src": "7633:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830666161646365636565666638626666666666666666666666666666666666666666",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7658:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5331351373990447379730864460340651884543_by_1",
															"typeString": "int_const 5331...(32 digits omitted)...4543"
														},
														"value": "0x0faadceceeff8bffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 438,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7698:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7658:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "7654:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3436",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7710:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_46_by_1",
															"typeString": "int_const 46"
														},
														"value": "46"
													},
													"functionReturnParameters": 352,
													"id": 441,
													"nodeType": "Return",
													"src": "7702:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830663035646336623237656461646666666666666666666666666666666666666666",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7727:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5112026122483163422598731111238626967551_by_1",
															"typeString": "int_const 5112...(32 digits omitted)...7551"
														},
														"value": "0x0f05dc6b27edadffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 444,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7767:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7727:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "7723:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3437",
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7779:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_47_by_1",
															"typeString": "int_const 47"
														},
														"value": "47"
													},
													"functionReturnParameters": 352,
													"id": 447,
													"nodeType": "Return",
													"src": "7771:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830653637613561323564613431303766666666666666666666666666666666666666",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7796:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4901723642609993464238960471454494228479_by_1",
															"typeString": "int_const 4901...(32 digits omitted)...8479"
														},
														"value": "0x0e67a5a25da4107fffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 450,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7836:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7796:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "7792:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3438",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7848:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_48_by_1",
															"typeString": "int_const 48"
														},
														"value": "48"
													},
													"functionReturnParameters": 352,
													"id": 453,
													"nodeType": "Return",
													"src": "7840:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830646366663131356231346565646666666666666666666666666666666666666666",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7865:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4700072748620998500994433661760029327359_by_1",
															"typeString": "int_const 4700...(32 digits omitted)...7359"
														},
														"value": "0x0dcff115b14eedffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 456,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7905:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7865:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "7861:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3439",
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7917:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_49_by_1",
															"typeString": "int_const 49"
														},
														"value": "49"
													},
													"functionReturnParameters": 352,
													"id": 459,
													"nodeType": "Return",
													"src": "7909:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830643365376133393234333132333966666666666666666666666666666666666666",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7934:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4506717524892375150236886652795301658623_by_1",
															"typeString": "int_const 4506...(32 digits omitted)...8623"
														},
														"value": "0x0d3e7a392431239fffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 462,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7974:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7934:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 466,
												"nodeType": "IfStatement",
												"src": "7930:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3530",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7986:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"functionReturnParameters": 352,
													"id": 465,
													"nodeType": "Return",
													"src": "7978:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830636232666635323965623731653466666666666666666666666666666666666666",
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8003:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4321316697732212547034601541953113817087_by_1",
															"typeString": "int_const 4321...(32 digits omitted)...7087"
														},
														"value": "0x0cb2ff529eb71e4fffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 468,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8043:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8003:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "7999:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3531",
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8055:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"functionReturnParameters": 352,
													"id": 471,
													"nodeType": "Return",
													"src": "8047:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830633264343135633364623937346166666666666666666666666666666666666666",
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8072:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4143543033029384782309349805264440655871_by_1",
															"typeString": "int_const 4143...(32 digits omitted)...5871"
														},
														"value": "0x0c2d415c3db974afffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 474,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8112:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8072:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "8068:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3532",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8124:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_52_by_1",
															"typeString": "int_const 52"
														},
														"value": "52"
													},
													"functionReturnParameters": 352,
													"id": 477,
													"nodeType": "Return",
													"src": "8116:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830626164303365376438383366363962666666666666666666666666666666666666",
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8141:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3973082758682431363936722477132055314431_by_1",
															"typeString": "int_const 3973...(32 digits omitted)...4431"
														},
														"value": "0x0bad03e7d883f69bffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 480,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8181:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8141:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 484,
												"nodeType": "IfStatement",
												"src": "8137:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3533",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8193:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_53_by_1",
															"typeString": "int_const 53"
														},
														"value": "53"
													},
													"functionReturnParameters": 352,
													"id": 483,
													"nodeType": "Return",
													"src": "8185:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830623332306430336232633334336435666666666666666666666666666666666666",
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8210:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3809635010789003168527049097368437784575_by_1",
															"typeString": "int_const 3809...(32 digits omitted)...4575"
														},
														"value": "0x0b320d03b2c343d5ffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 486,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8250:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8210:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 490,
												"nodeType": "IfStatement",
												"src": "8206:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3534",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8262:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_54_by_1",
															"typeString": "int_const 54"
														},
														"value": "54"
													},
													"functionReturnParameters": 352,
													"id": 489,
													"nodeType": "Return",
													"src": "8254:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830616263323532303465303238323864666666666666666666666666666666666666",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8279:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3652911302618395401280222488042819026943_by_1",
															"typeString": "int_const 3652...(32 digits omitted)...6943"
														},
														"value": "0x0abc25204e02828dffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 492,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8319:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8279:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "8275:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3535",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8331:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_55_by_1",
															"typeString": "int_const 55"
														},
														"value": "55"
													},
													"functionReturnParameters": 352,
													"id": 495,
													"nodeType": "Return",
													"src": "8323:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830613462313666373465653462623230376666666666666666666666666666666666",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8348:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3502635015429898674229017626613836152831_by_1",
															"typeString": "int_const 3502...(32 digits omitted)...2831"
														},
														"value": "0x0a4b16f74ee4bb207fffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 498,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8388:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8348:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 502,
												"nodeType": "IfStatement",
												"src": "8344:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3536",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8400:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_56_by_1",
															"typeString": "int_const 56"
														},
														"value": "56"
													},
													"functionReturnParameters": 352,
													"id": 501,
													"nodeType": "Return",
													"src": "8392:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830396465616637333661633166353639666666666666666666666666666666666666",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8417:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3358540910238258030536300376569398951935_by_1",
															"typeString": "int_const 3358...(32 digits omitted)...1935"
														},
														"value": "0x09deaf736ac1f569ffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 504,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8457:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8417:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 508,
												"nodeType": "IfStatement",
												"src": "8413:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3537",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8469:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57_by_1",
															"typeString": "int_const 57"
														},
														"value": "57"
													},
													"functionReturnParameters": 352,
													"id": 507,
													"nodeType": "Return",
													"src": "8461:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830393736626439393532633761613935376666666666666666666666666666666666",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8486:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3220374659664501751807634855053158776831_by_1",
															"typeString": "int_const 3220...(32 digits omitted)...6831"
														},
														"value": "0x0976bd9952c7aa957fffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 510,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8526:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8486:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 514,
												"nodeType": "IfStatement",
												"src": "8482:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3538",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8538:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_58_by_1",
															"typeString": "int_const 58"
														},
														"value": "58"
													},
													"functionReturnParameters": 352,
													"id": 513,
													"nodeType": "Return",
													"src": "8530:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830393133313237313932326561613630366666666666666666666666666666666666",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8555:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3087892399045852422628542596524428754943_by_1",
															"typeString": "int_const 3087...(32 digits omitted)...4943"
														},
														"value": "0x09131271922eaa606fffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 516,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8595:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8555:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "IfStatement",
												"src": "8551:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3539",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8607:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_59_by_1",
															"typeString": "int_const 59"
														},
														"value": "59"
													},
													"functionReturnParameters": 352,
													"id": 519,
													"nodeType": "Return",
													"src": "8599:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830386233383066333535383636386334366666666666666666666666666666666666",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8624:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2960860296012425255212778080756987592703_by_1",
															"typeString": "int_const 2960...(32 digits omitted)...2703"
														},
														"value": "0x08b380f3558668c46fffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 522,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8664:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8624:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "8620:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3630",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8676:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"functionReturnParameters": 352,
													"id": 525,
													"nodeType": "Return",
													"src": "8668:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830383537646466303131376566613231356266666666666666666666666666666666",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8693:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2839054137771012724926516325250418868223_by_1",
															"typeString": "int_const 2839...(32 digits omitted)...8223"
														},
														"value": "0x0857ddf0117efa215bffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 528,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8733:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8693:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "IfStatement",
												"src": "8689:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3631",
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8745:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_61_by_1",
															"typeString": "int_const 61"
														},
														"value": "61"
													},
													"functionReturnParameters": 352,
													"id": 531,
													"nodeType": "Return",
													"src": "8737:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830376666666666666666666666666666666666666666666666666666666666666666",
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8762:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2722258935367507707706996859454145691647_by_1",
															"typeString": "int_const 2722...(32 digits omitted)...1647"
														},
														"value": "0x07ffffffffffffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 534,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8802:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8758:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3632",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8814:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_62_by_1",
															"typeString": "int_const 62"
														},
														"value": "62"
													},
													"functionReturnParameters": 352,
													"id": 537,
													"nodeType": "Return",
													"src": "8806:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830376162626636663661626239643038376666666666666666666666666666666666",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8831:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2610268544229484780765045556213696167935_by_1",
															"typeString": "int_const 2610...(32 digits omitted)...7935"
														},
														"value": "0x07abbf6f6abb9d087fffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 540,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8871:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8831:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "8827:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3633",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8883:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_63_by_1",
															"typeString": "int_const 63"
														},
														"value": "63"
													},
													"functionReturnParameters": 352,
													"id": 543,
													"nodeType": "Return",
													"src": "8875:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830373561663632636261633935663764666137666666666666666666666666666666",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8900:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2502885300319193958571922333378000453631_by_1",
															"typeString": "int_const 2502...(32 digits omitted)...3631"
														},
														"value": "0x075af62cbac95f7dfa7fffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 546,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "8940:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8900:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "8896:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3634",
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8952:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"functionReturnParameters": 352,
													"id": 549,
													"nodeType": "Return",
													"src": "8944:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830373064376662373435326531383761633133666666666666666666666666666666",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8969:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2399919671254773659805118819743970623487_by_1",
															"typeString": "int_const 2399...(32 digits omitted)...3487"
														},
														"value": "0x070d7fb7452e187ac13fffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 552,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9009:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8969:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 556,
												"nodeType": "IfStatement",
												"src": "8965:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3635",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9021:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"functionReturnParameters": 352,
													"id": 555,
													"nodeType": "Return",
													"src": "9013:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830366333333930656363386166333739323935666666666666666666666666666666",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9038:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2301189921783908737703717501630802821119_by_1",
															"typeString": "int_const 2301...(32 digits omitted)...1119"
														},
														"value": "0x06c3390ecc8af379295fffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 558,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9078:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9038:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "9034:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3636",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9090:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_66_by_1",
															"typeString": "int_const 66"
														},
														"value": "66"
													},
													"functionReturnParameters": 352,
													"id": 561,
													"nodeType": "Return",
													"src": "9082:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830363763303061336230376666633031666436666666666666666666666666666666",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9107:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2206521793019491601704439134261549727743_by_1",
															"typeString": "int_const 2206...(32 digits omitted)...7743"
														},
														"value": "0x067c00a3b07ffc01fd6fffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 564,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9147:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9107:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9103:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3637",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9159:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_67_by_1",
															"typeString": "int_const 67"
														},
														"value": "67"
													},
													"functionReturnParameters": 352,
													"id": 567,
													"nodeType": "Return",
													"src": "9151:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830363337623634376333396362623964336432376666666666666666666666666666",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9176:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2115748194871134515168564783402692116479_by_1",
															"typeString": "int_const 2115...(32 digits omitted)...6479"
														},
														"value": "0x0637b647c39cbb9d3d27ffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 570,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9216:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9176:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "9172:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3638",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9228:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_68_by_1",
															"typeString": "int_const 68"
														},
														"value": "68"
													},
													"functionReturnParameters": 352,
													"id": 573,
													"nodeType": "Return",
													"src": "9220:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830356636336231666331303464626433393538376666666666666666666666666666",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9245:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2028708911129671949307566740521183346687_by_1",
															"typeString": "int_const 2028...(32 digits omitted)...6687"
														},
														"value": "0x05f63b1fc104dbd39587ffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 576,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9285:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9245:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 580,
												"nodeType": "IfStatement",
												"src": "9241:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3639",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9297:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_69_by_1",
															"typeString": "int_const 69"
														},
														"value": "69"
													},
													"functionReturnParameters": 352,
													"id": 579,
													"nodeType": "Return",
													"src": "9289:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830356237373139353562333665313266373233356666666666666666666666666666",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9314:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1945250316684124513375052119057996185599_by_1",
															"typeString": "int_const 1945...(32 digits omitted)...5599"
														},
														"value": "0x05b771955b36e12f7235ffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 582,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9354:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9314:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "9310:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3730",
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9366:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_70_by_1",
															"typeString": "int_const 70"
														},
														"value": "70"
													},
													"functionReturnParameters": 352,
													"id": 585,
													"nodeType": "Return",
													"src": "9358:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830353762336434396464613834353536643666366666666666666666666666666666",
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9383:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1865225106372009884014199587421481336831_by_1",
															"typeString": "int_const 1865...(32 digits omitted)...6831"
														},
														"value": "0x057b3d49dda84556d6f6ffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 588,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9423:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9383:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "9379:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3731",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9435:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_71_by_1",
															"typeString": "int_const 71"
														},
														"value": "71"
													},
													"functionReturnParameters": 352,
													"id": 591,
													"nodeType": "Return",
													"src": "9427:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830353431383330393562326338656365636633306666666666666666666666666666",
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9452:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1788492034984419117666073304513300660223_by_1",
															"typeString": "int_const 1788...(32 digits omitted)...0223"
														},
														"value": "0x054183095b2c8ececf30ffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 594,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9492:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9452:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "9448:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3732",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9504:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_72_by_1",
															"typeString": "int_const 72"
														},
														"value": "72"
													},
													"functionReturnParameters": 352,
													"id": 597,
													"nodeType": "Return",
													"src": "9496:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830353061323862653633356361326238383866373766666666666666666666666666",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9521:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1714915667966964990208967912165996494847_by_1",
															"typeString": "int_const 1714...(32 digits omitted)...4847"
														},
														"value": "0x050a28be635ca2b888f77fffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 600,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9561:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9521:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "9517:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3733",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9573:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_73_by_1",
															"typeString": "int_const 73"
														},
														"value": "73"
													},
													"functionReturnParameters": 352,
													"id": 603,
													"nodeType": "Return",
													"src": "9565:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830346435313536363339373038633964623333633366666666666666666666666666",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9590:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1644366142376587317378242124992063995903_by_1",
															"typeString": "int_const 1644...(32 digits omitted)...5903"
														},
														"value": "0x04d5156639708c9db33c3fffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 606,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9630:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9590:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 610,
												"nodeType": "IfStatement",
												"src": "9586:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3734",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9642:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_74_by_1",
															"typeString": "int_const 74"
														},
														"value": "74"
													},
													"functionReturnParameters": 352,
													"id": 609,
													"nodeType": "Return",
													"src": "9634:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830346132333130353837333837356264353264666466666666666666666666666666",
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9659:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1576718937672301888428671268411708276735_by_1",
															"typeString": "int_const 1576...(32 digits omitted)...6735"
														},
														"value": "0x04a23105873875bd52dfdfffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 612,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9699:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9659:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "9655:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3735",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9711:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_75_by_1",
															"typeString": "int_const 75"
														},
														"value": "75"
													},
													"functionReturnParameters": 352,
													"id": 615,
													"nodeType": "Return",
													"src": "9703:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830343731363439643837313939616139393037353666666666666666666666666666",
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9728:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1511854655935336643558907106913628979199_by_1",
															"typeString": "int_const 1511...(32 digits omitted)...9199"
														},
														"value": "0x0471649d87199aa990756fffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 618,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9768:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9728:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "9724:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3736",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9780:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_76_by_1",
															"typeString": "int_const 76"
														},
														"value": "76"
													},
													"functionReturnParameters": 352,
													"id": 621,
													"nodeType": "Return",
													"src": "9772:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830343432396132316130323964346331343537636662666666666666666666666666",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9797:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1449658811130741678082357454851673161727_by_1",
															"typeString": "int_const 1449...(32 digits omitted)...1727"
														},
														"value": "0x04429a21a029d4c1457cfbffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 624,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9837:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9797:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "9793:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3737",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9849:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_77_by_1",
															"typeString": "int_const 77"
														},
														"value": "77"
													},
													"functionReturnParameters": 352,
													"id": 627,
													"nodeType": "Return",
													"src": "9841:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830343135626336643666623764643731616632636233666666666666666666666666",
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9866:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1390021627038517938156314751863424548863_by_1",
															"typeString": "int_const 1390...(32 digits omitted)...8863"
														},
														"value": "0x0415bc6d6fb7dd71af2cb3ffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 630,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9906:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9866:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "9862:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3738",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9918:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_78_by_1",
															"typeString": "int_const 78"
														},
														"value": "78"
													},
													"functionReturnParameters": 352,
													"id": 633,
													"nodeType": "Return",
													"src": "9910:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830336561623733623362626665323832323433636531666666666666666666666666",
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9935:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1332837843497611250583009129150422188031_by_1",
															"typeString": "int_const 1332...(32 digits omitted)...8031"
														},
														"value": "0x03eab73b3bbfe282243ce1ffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 636,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9975:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9935:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "9931:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3739",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9987:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79_by_1",
															"typeString": "int_const 79"
														},
														"value": "79"
													},
													"functionReturnParameters": 352,
													"id": 639,
													"nodeType": "Return",
													"src": "9979:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830336331373731616339666236623463313865323239666666666666666666666666",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10004:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1278006530620790610545644364558728429567_by_1",
															"typeString": "int_const 1278...(32 digits omitted)...9567"
														},
														"value": "0x03c1771ac9fb6b4c18e229ffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 642,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10044:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10004:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "10000:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3830",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10056:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"functionReturnParameters": 352,
													"id": 645,
													"nodeType": "Return",
													"src": "10048:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830333939653936383937363930343138663738353235376666666666666666666666",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10073:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1225430910652498332846748256431392161791_by_1",
															"typeString": "int_const 1225...(32 digits omitted)...1791"
														},
														"value": "0x0399e96897690418f785257fffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 648,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10113:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10073:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "10069:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3831",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10125:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_81_by_1",
															"typeString": "int_const 81"
														},
														"value": "81"
													},
													"functionReturnParameters": 352,
													"id": 651,
													"nodeType": "Return",
													"src": "10117:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830333733666334353663353362623737396266306561396666666666666666666666",
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10142:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1175018187155249585623915264673694351359_by_1",
															"typeString": "int_const 1175...(32 digits omitted)...1359"
														},
														"value": "0x0373fc456c53bb779bf0ea9fffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 654,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10182:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10142:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "10138:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3832",
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10194:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_82_by_1",
															"typeString": "int_const 82"
														},
														"value": "82"
													},
													"functionReturnParameters": 352,
													"id": 657,
													"nodeType": "Return",
													"src": "10186:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830333466396538653439306334386536376536616238626666666666666666666666",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10211:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1126679381223093780446468558216906145791_by_1",
															"typeString": "int_const 1126...(32 digits omitted)...5791"
														},
														"value": "0x034f9e8e490c48e67e6ab8bfffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 660,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10251:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10211:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "IfStatement",
												"src": "10207:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3833",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10263:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_83_by_1",
															"typeString": "int_const 83"
														},
														"value": "83"
													},
													"functionReturnParameters": 352,
													"id": 663,
													"nodeType": "Return",
													"src": "10255:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830333263626664346137616463373930353630623333333766666666666666666666",
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10280:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1080329174433053119456411494679599644671_by_1",
															"typeString": "int_const 1080...(32 digits omitted)...4671"
														},
														"value": "0x032cbfd4a7adc790560b3337ffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 666,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10320:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10280:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "IfStatement",
												"src": "10276:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3834",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10332:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_84_by_1",
															"typeString": "int_const 84"
														},
														"value": "84"
													},
													"functionReturnParameters": 352,
													"id": 669,
													"nodeType": "Return",
													"src": "10324:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830333062353035373066366535643261636361393436313366666666666666666666",
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10349:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1035885758257346189907937735244580388863_by_1",
															"typeString": "int_const 1035...(32 digits omitted)...8863"
														},
														"value": "0x030b50570f6e5d2acca94613ffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 672,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10389:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10349:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "10345:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3835",
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10401:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "85"
													},
													"functionReturnParameters": 352,
													"id": 675,
													"nodeType": "Return",
													"src": "10393:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830326562343066396636323066646136623536633238363166666666666666666666",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10418:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_993270689670607839608468400662101622783_by_1",
															"typeString": "int_const 9932...(31 digits omitted)...2783"
														},
														"value": "0x02eb40f9f620fda6b56c2861ffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 678,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10458:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10418:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "10414:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3836",
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10470:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86_by_1",
															"typeString": "int_const 86"
														},
														"value": "86"
													},
													"functionReturnParameters": 352,
													"id": 681,
													"nodeType": "Return",
													"src": "10462:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830326363383334306563623064306635323061366166353866666666666666666666",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10487:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_952408752697250790372885759853747765247_by_1",
															"typeString": "int_const 9524...(31 digits omitted)...5247"
														},
														"value": "0x02cc8340ecb0d0f520a6af58ffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 684,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10527:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10487:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "10483:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3837",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10539:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_87_by_1",
															"typeString": "int_const 87"
														},
														"value": "87"
													},
													"functionReturnParameters": 352,
													"id": 687,
													"nodeType": "Return",
													"src": "10531:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830326166303934383133383061306133356366316261303266666666666666666666",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10556:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_913227825654598849673391073164504596479_by_1",
															"typeString": "int_const 9132...(31 digits omitted)...6479"
														},
														"value": "0x02af09481380a0a35cf1ba02ffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 690,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10596:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10556:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "10552:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3838",
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10608:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_88_by_1",
															"typeString": "int_const 88"
														},
														"value": "88"
													},
													"functionReturnParameters": 352,
													"id": 693,
													"nodeType": "Return",
													"src": "10600:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323932633562646433623932656338313032383762316233666666666666666666",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10625:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_875658753857474668265023456619450597375_by_1",
															"typeString": "int_const 8756...(31 digits omitted)...7375"
														},
														"value": "0x0292c5bdd3b92ec810287b1b3fffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 696,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10665:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10625:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "10621:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3839",
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10677:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_89_by_1",
															"typeString": "int_const 89"
														},
														"value": "89"
													},
													"functionReturnParameters": 352,
													"id": 699,
													"nodeType": "Return",
													"src": "10669:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323737616264636461623037643561373761633664366239666666666666666666",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10694:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_839635227559564507480479102760887779327_by_1",
															"typeString": "int_const 8396...(31 digits omitted)...9327"
														},
														"value": "0x0277abdcdab07d5a77ac6d6b9fffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 702,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10734:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10694:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "10690:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3930",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10746:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_90_by_1",
															"typeString": "int_const 90"
														},
														"value": "90"
													},
													"functionReturnParameters": 352,
													"id": 705,
													"nodeType": "Return",
													"src": "10738:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323564616636363534623165616135356664363464663565666666666666666666",
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10763:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_805093664916125437948904238798044397567_by_1",
															"typeString": "int_const 8050...(31 digits omitted)...7567"
														},
														"value": "0x025daf6654b1eaa55fd64df5efffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 708,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10803:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10763:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "10759:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3931",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10815:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_91_by_1",
															"typeString": "int_const 91"
														},
														"value": "91"
													},
													"functionReturnParameters": 352,
													"id": 711,
													"nodeType": "Return",
													"src": "10807:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323434633439633634386261613938313932646365383862376666666666666666",
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10832:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_771973099761463105605096142810743046143_by_1",
															"typeString": "int_const 7719...(31 digits omitted)...6143"
														},
														"value": "0x0244c49c648baa98192dce88b7ffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 714,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10872:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10832:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "10828:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3932",
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10884:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_92_by_1",
															"typeString": "int_const 92"
														},
														"value": "92"
													},
													"functionReturnParameters": 352,
													"id": 717,
													"nodeType": "Return",
													"src": "10876:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323263653033636435363139613331316232343731323638626666666666666666",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10901:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_740215074003106313787373698556008333311_by_1",
															"typeString": "int_const 7402...(31 digits omitted)...3311"
														},
														"value": "0x022ce03cd5619a311b2471268bffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 720,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "10941:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10901:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10897:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3933",
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10953:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_93_by_1",
															"typeString": "int_const 93"
														},
														"value": "93"
													},
													"functionReturnParameters": 352,
													"id": 723,
													"nodeType": "Return",
													"src": "10945:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830323135663737633034356662653838353635346134346130666666666666666666",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10970:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_709763534442753181219281418466841591807_by_1",
															"typeString": "int_const 7097...(31 digits omitted)...1807"
														},
														"value": "0x0215f77c045fbe885654a44a0fffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 726,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11010:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10970:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"nodeType": "IfStatement",
												"src": "10966:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3934",
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11022:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_94_by_1",
															"typeString": "int_const 94"
														},
														"value": "94"
													},
													"functionReturnParameters": 352,
													"id": 729,
													"nodeType": "Return",
													"src": "11014:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830316666666666666666666666666666666666666666666666666666666666666666",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11039:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_680564733841876926926749214863536422911_by_1",
															"typeString": "int_const 6805...(31 digits omitted)...2911"
														},
														"value": "0x01ffffffffffffffffffffffffffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 732,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11079:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11039:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "11035:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3935",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11091:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_95_by_1",
															"typeString": "int_const 95"
														},
														"value": "95"
													},
													"functionReturnParameters": 352,
													"id": 735,
													"nodeType": "Return",
													"src": "11083:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830316561656664626461616565373432316663346433656465356666666666666666",
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11108:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_652567136057371195186997586203332575231_by_1",
															"typeString": "int_const 6525...(31 digits omitted)...5231"
														},
														"value": "0x01eaefdbdaaee7421fc4d3ede5ffffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 738,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11148:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11108:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "11104:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3936",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11160:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"functionReturnParameters": 352,
													"id": 741,
													"nodeType": "Return",
													"src": "11152:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830316436626438623265623235376466376538636135376230396266666666666666",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11177:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_625721325079798489641586010116704960511_by_1",
															"typeString": "int_const 6257...(31 digits omitted)...0511"
														},
														"value": "0x01d6bd8b2eb257df7e8ca57b09bfffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 744,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11217:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11177:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "11173:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3937",
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11229:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_97_by_1",
															"typeString": "int_const 97"
														},
														"value": "97"
													},
													"functionReturnParameters": 352,
													"id": 747,
													"nodeType": "Return",
													"src": "11221:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830316333356665646431346238363165623034343366376631333366666666666666",
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11246:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_599979917813693414950432886451725139967_by_1",
															"typeString": "int_const 5999...(31 digits omitted)...9967"
														},
														"value": "0x01c35fedd14b861eb0443f7f133fffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 750,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11286:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11246:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "11242:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3938",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11298:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_98_by_1",
															"typeString": "int_const 98"
														},
														"value": "98"
													},
													"functionReturnParameters": 352,
													"id": 753,
													"nodeType": "Return",
													"src": "11290:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830316230636534336233323262636465346135366538616461356166666666666666",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11315:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_575297480445977184425850753341355720703_by_1",
															"typeString": "int_const 5752...(31 digits omitted)...0703"
														},
														"value": "0x01b0ce43b322bcde4a56e8ada5afffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 756,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11355:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11315:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "11311:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "3939",
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11367:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_99_by_1",
															"typeString": "int_const 99"
														},
														"value": "99"
													},
													"functionReturnParameters": 352,
													"id": 759,
													"nodeType": "Return",
													"src": "11359:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313966303032386563316666663030376635613139356133396466666666666666",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11384:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_551630448254872900425972804456347074559_by_1",
															"typeString": "int_const 5516...(31 digits omitted)...4559"
														},
														"value": "0x019f0028ec1fff007f5a195a39dfffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 762,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11424:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11384:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "11380:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313030",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11435:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"functionReturnParameters": 352,
													"id": 765,
													"nodeType": "Return",
													"src": "11428:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313864656439316630653732656537346634396231356261353237666666666666",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11453:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_528937048717783628792119060092411707391_by_1",
															"typeString": "int_const 5289...(31 digits omitted)...7391"
														},
														"value": "0x018ded91f0e72ee74f49b15ba527ffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 768,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11493:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11453:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "11449:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313031",
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11504:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_101_by_1",
															"typeString": "int_const 101"
														},
														"value": "101"
													},
													"functionReturnParameters": 352,
													"id": 771,
													"nodeType": "Return",
													"src": "11497:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313764386563376630343133366634653536313566643431613633666666666666",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11522:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_507177227782417987326846600868857380863_by_1",
															"typeString": "int_const 5071...(31 digits omitted)...0863"
														},
														"value": "0x017d8ec7f04136f4e5615fd41a63ffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 774,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11562:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11522:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "11518:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313032",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11573:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_102_by_1",
															"typeString": "int_const 102"
														},
														"value": "102"
													},
													"functionReturnParameters": 352,
													"id": 777,
													"nodeType": "Return",
													"src": "11566:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313664646336353536636462383462646338643132643232653666666666666666",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11591:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_486312579171031128343732298613950251007_by_1",
															"typeString": "int_const 4863...(31 digits omitted)...1007"
														},
														"value": "0x016ddc6556cdb84bdc8d12d22e6fffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 780,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11631:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11591:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "11587:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313033",
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11642:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_103_by_1",
															"typeString": "int_const 103"
														},
														"value": "103"
													},
													"functionReturnParameters": 352,
													"id": 783,
													"nodeType": "Return",
													"src": "11635:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313565636635323737366131313535623562643833393538313466376666666666",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11660:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_466306276593002471003532891264408092671_by_1",
															"typeString": "int_const 4663...(31 digits omitted)...2671"
														},
														"value": "0x015ecf52776a1155b5bd8395814f7fffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 786,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11700:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11660:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "11656:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313034",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11711:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_104_by_1",
															"typeString": "int_const 104"
														},
														"value": "104"
													},
													"functionReturnParameters": 352,
													"id": 789,
													"nodeType": "Return",
													"src": "11704:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313530363063323536636232336233623363633337353463663430666666666666",
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11729:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_447123008746104779416515886102660251647_by_1",
															"typeString": "int_const 4471...(31 digits omitted)...1647"
														},
														"value": "0x015060c256cb23b3b3cc3754cf40ffffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 792,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11769:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11729:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "11725:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313035",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11780:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_105_by_1",
															"typeString": "int_const 105"
														},
														"value": "105"
													},
													"functionReturnParameters": 352,
													"id": 795,
													"nodeType": "Return",
													"src": "11773:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313432386132663938643732386165323233646461623731356265336666666666",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11798:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_428728916991741247552240490495652921343_by_1",
															"typeString": "int_const 4287...(31 digits omitted)...1343"
														},
														"value": "0x01428a2f98d728ae223ddab715be3fffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 798,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11838:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11798:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "11794:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313036",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11849:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_106_by_1",
															"typeString": "int_const 106"
														},
														"value": "106"
													},
													"functionReturnParameters": 352,
													"id": 801,
													"nodeType": "Return",
													"src": "11842:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313335343535393865356332333237366363663065646536383033346666666666",
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11867:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_411091535594146829344560212836376117247_by_1",
															"typeString": "int_const 4110...(31 digits omitted)...7247"
														},
														"value": "0x013545598e5c23276ccf0ede68034fffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 804,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11907:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11867:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "11863:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313037",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11918:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_107_by_1",
															"typeString": "int_const 107"
														},
														"value": "107"
													},
													"functionReturnParameters": 352,
													"id": 807,
													"nodeType": "Return",
													"src": "11911:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313238386334313631636531643666353462376636313038313139346666666666",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11936:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_394179734418075472107167272299635146751_by_1",
															"typeString": "int_const 3941...(31 digits omitted)...6751"
														},
														"value": "0x01288c4161ce1d6f54b7f61081194fffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 810,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "11976:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11936:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "11932:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313038",
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11987:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_108_by_1",
															"typeString": "int_const 108"
														},
														"value": "108"
													},
													"functionReturnParameters": 352,
													"id": 813,
													"nodeType": "Return",
													"src": "11980:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313163353932373631633636366161363431643561303161343066313766666666",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12005:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_377963663983834160889726215582593318911_by_1",
															"typeString": "int_const 3779...(31 digits omitted)...8911"
														},
														"value": "0x011c592761c666aa641d5a01a40f17ffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 816,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12045:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12005:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "12001:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313039",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12056:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_109_by_1",
															"typeString": "int_const 109"
														},
														"value": "109"
													},
													"functionReturnParameters": 352,
													"id": 819,
													"nodeType": "Return",
													"src": "12049:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313130613638383638306137353330353135663365366536636664636466666666",
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12074:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_362414702782685419520589203652335239167_by_1",
															"typeString": "int_const 3624...(31 digits omitted)...9167"
														},
														"value": "0x0110a688680a7530515f3e6e6cfdcdffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 822,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12114:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12074:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "12070:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313130",
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12125:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_110_by_1",
															"typeString": "int_const 110"
														},
														"value": "110"
													},
													"functionReturnParameters": 352,
													"id": 825,
													"nodeType": "Return",
													"src": "12118:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830313035366631623562656466373563366263623263653861656434323866666666",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12143:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_347505406759629484539078662328460836863_by_1",
															"typeString": "int_const 3475...(31 digits omitted)...6863"
														},
														"value": "0x01056f1b5bedf75c6bcb2ce8aed428ffff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 828,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12183:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12143:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "IfStatement",
												"src": "12139:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313131",
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12194:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_111_by_1",
															"typeString": "int_const 111"
														},
														"value": "111"
													},
													"functionReturnParameters": 352,
													"id": 831,
													"nodeType": "Return",
													"src": "12187:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306661616463656365656666386130383930663338373566303038323737666666",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12212:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333209460874402812645752271223906598911_by_1",
															"typeString": "int_const 3332...(31 digits omitted)...8911"
														},
														"value": "0x00faadceceeff8a0890f3875f008277fff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 834,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12252:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12212:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "12208:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313132",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12263:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_112_by_1",
															"typeString": "int_const 112"
														},
														"value": "112"
													},
													"functionReturnParameters": 352,
													"id": 837,
													"nodeType": "Return",
													"src": "12256:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306630356463366232376564616433303633383861363030663662613062666666",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12281:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_319501632655197652636411056021540225023_by_1",
															"typeString": "int_const 3195...(31 digits omitted)...5023"
														},
														"value": "0x00f05dc6b27edad306388a600f6ba0bfff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 840,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12321:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12281:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "12277:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313133",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12332:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_113_by_1",
															"typeString": "int_const 113"
														},
														"value": "113"
													},
													"functionReturnParameters": 352,
													"id": 843,
													"nodeType": "Return",
													"src": "12325:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306536376135613235646134313036336465313439356435623138636462666666",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12350:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_306357727663124583211687061200571318271_by_1",
															"typeString": "int_const 3063...(31 digits omitted)...8271"
														},
														"value": "0x00e67a5a25da41063de1495d5b18cdbfff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 846,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12390:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12350:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12346:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313134",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12401:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_114_by_1",
															"typeString": "int_const 114"
														},
														"value": "114"
													},
													"functionReturnParameters": 352,
													"id": 849,
													"nodeType": "Return",
													"src": "12394:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306463666631313562313465656464653666633361613533353366326534666666",
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12419:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_293754546788812396405978813098581970943_by_1",
															"typeString": "int_const 2937...(31 digits omitted)...0943"
														},
														"value": "0x00dcff115b14eedde6fc3aa5353f2e4fff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 852,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12459:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12419:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "12415:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313135",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12470:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115_by_1",
															"typeString": "int_const 115"
														},
														"value": "115"
													},
													"functionReturnParameters": 352,
													"id": 855,
													"nodeType": "Return",
													"src": "12463:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306433653761333932343331323339396639616165326530663836386638666666",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12488:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_281669845305773445111617137421885345791_by_1",
															"typeString": "int_const 2816...(31 digits omitted)...5791"
														},
														"value": "0x00d3e7a3924312399f9aae2e0f868f8fff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 858,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12528:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12488:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "IfStatement",
												"src": "12484:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313136",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12539:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_116_by_1",
															"typeString": "int_const 116"
														},
														"value": "116"
													},
													"functionReturnParameters": 352,
													"id": 861,
													"nodeType": "Return",
													"src": "12532:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306362326666353239656237316534313538326363636435613165653236666666",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12557:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_270082293608263279864102872957453496319_by_1",
															"typeString": "int_const 2700...(31 digits omitted)...6319"
														},
														"value": "0x00cb2ff529eb71e41582cccd5a1ee26fff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 864,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12597:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12557:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "12553:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313137",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12608:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_117_by_1",
															"typeString": "int_const 117"
														},
														"value": "117"
													},
													"functionReturnParameters": 352,
													"id": 867,
													"nodeType": "Return",
													"src": "12601:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306332643431356333646239373461623332613531383430633062363765646666",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12626:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_258971439564336547476984432763364437503_by_1",
															"typeString": "int_const 2589...(31 digits omitted)...7503"
														},
														"value": "0x00c2d415c3db974ab32a51840c0b67edff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 870,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12666:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12626:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "12622:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313138",
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12677:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_118_by_1",
															"typeString": "int_const 118"
														},
														"value": "118"
													},
													"functionReturnParameters": 352,
													"id": 873,
													"nodeType": "Return",
													"src": "12670:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306261643033653764383833663639616435623061313836313834653036626666",
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12695:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248317672417651959902117100034610719743_by_1",
															"typeString": "int_const 2483...(31 digits omitted)...9743"
														},
														"value": "0x00bad03e7d883f69ad5b0a186184e06bff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 876,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12735:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12695:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "12691:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313139",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12746:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_119_by_1",
															"typeString": "int_const 119"
														},
														"value": "119"
													},
													"functionReturnParameters": 352,
													"id": 879,
													"nodeType": "Return",
													"src": "12739:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306233323064303362326333343364343832396162643630373566306363356666",
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12764:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_238102188174312697593221439720218478079_by_1",
															"typeString": "int_const 2381...(31 digits omitted)...8079"
														},
														"value": "0x00b320d03b2c343d4829abd6075f0cc5ff"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 882,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12804:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12764:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "12760:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313230",
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12815:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_120_by_1",
															"typeString": "int_const 120"
														},
														"value": "120"
													},
													"functionReturnParameters": 352,
													"id": 885,
													"nodeType": "Return",
													"src": "12808:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306162633235323034653032383238643733633665383062636462316139356266",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12833:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_228306956413649712418347768277622232511_by_1",
															"typeString": "int_const 2283...(31 digits omitted)...2511"
														},
														"value": "0x00abc25204e02828d73c6e80bcdb1a95bf"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 888,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12873:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12833:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "12829:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313231",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12884:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_121_by_1",
															"typeString": "int_const 121"
														},
														"value": "121"
													},
													"functionReturnParameters": 352,
													"id": 891,
													"nodeType": "Return",
													"src": "12877:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830306134623136663734656534626232303430613165633663313566626266326466",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12902:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_218914688464368667066255864092044292831_by_1",
															"typeString": "int_const 2189...(31 digits omitted)...2831"
														},
														"value": "0x00a4b16f74ee4bb2040a1ec6c15fbbf2df"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 894,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12942:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12902:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "12898:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313232",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12953:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_122_by_1",
															"typeString": "int_const 122"
														},
														"value": "122"
													},
													"functionReturnParameters": 352,
													"id": 897,
													"nodeType": "Return",
													"src": "12946:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830303964656166373336616331663536396465623162356165336633366331333066",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12971:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_209908806889891126870119775672831054607_by_1",
															"typeString": "int_const 2099...(31 digits omitted)...4607"
														},
														"value": "0x009deaf736ac1f569deb1b5ae3f36c130f"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 900,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "13011:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12971:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "12967:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313233",
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13022:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"functionReturnParameters": 352,
													"id": 903,
													"nodeType": "Return",
													"src": "13015:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830303937366264393935326337616139353766353933376437393065663635303337",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13040:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_201273416229031359487226059686877220919_by_1",
															"typeString": "int_const 2012...(31 digits omitted)...0919"
														},
														"value": "0x00976bd9952c7aa957f5937d790ef65037"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 906,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "13080:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13040:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "13036:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313234",
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13091:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_124_by_1",
															"typeString": "int_const 124"
														},
														"value": "124"
													},
													"functionReturnParameters": 352,
													"id": 909,
													"nodeType": "Return",
													"src": "13084:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830303931333132373139323265616136303634623733613232643062643466326266",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13109:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192993274940365776401274035698589299391_by_1",
															"typeString": "int_const 1929...(31 digits omitted)...9391"
														},
														"value": "0x009131271922eaa6064b73a22d0bd4f2bf"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 912,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "13149:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13109:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "13105:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313235",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13160:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_125_by_1",
															"typeString": "int_const 125"
														},
														"value": "125"
													},
													"functionReturnParameters": 352,
													"id": 915,
													"nodeType": "Return",
													"src": "13153:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830303862333830663335353836363863343663393163343961326638653936376239",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13178:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_185053768500776578446843424638883162041_by_1",
															"typeString": "int_const 1850...(31 digits omitted)...2041"
														},
														"value": "0x008b380f3558668c46c91c49a2f8e967b9"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 918,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "13218:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13178:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "13174:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313236",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13229:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_126_by_1",
															"typeString": "int_const 126"
														},
														"value": "126"
													},
													"functionReturnParameters": 352,
													"id": 921,
													"nodeType": "Return",
													"src": "13222:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "307830303835376464663031313765666132313539353239313238333966363437336536",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13247:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_177440883610688295304820354615089591270_by_1",
															"typeString": "int_const 1774...(31 digits omitted)...1270"
														},
														"value": "0x00857ddf0117efa215952912839f6473e6"
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 924,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "13287:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13247:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "13243:58:0",
												"trueBody": {
													"expression": {
														"hexValue": "313237",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13298:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_127_by_1",
															"typeString": "int_const 127"
														},
														"value": "127"
													},
													"functionReturnParameters": 352,
													"id": 927,
													"nodeType": "Return",
													"src": "13291:10:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "66616c7365",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13312:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "13312:14:0"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13344:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 352,
												"id": 934,
												"nodeType": "Return",
												"src": "13337:8:0"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "6240:354:0",
										"text": "The global \"maxExpArray\" is sorted in descending order, and therefore the following statements are equivalent:\n- This function finds the position of [the smallest value in \"maxExpArray\" larger than or equal to \"x\"]\n- This function finds the highest position of [a value in \"maxExpArray\" larger than or equal to \"x\"]"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPositionInMaxExpArray",
									"nameLocation": "6609:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "6643:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "6635:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6634:12:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "6670:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 350,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6669:7:0"
									},
									"scope": 2177,
									"src": "6600:6753:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "14002:3782:0",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "xi",
														"nameLocation": "14021:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "14013:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"id": 948,
													"name": "_x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 939,
													"src": "14026:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14013:15:0"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "14047:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "14039:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 950,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"hexValue": "30",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14053:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14039:15:0"
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 954,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14067:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 955,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14073:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 956,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14078:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14073:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 958,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14072:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 959,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14085:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14072:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14067:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "14067:28:0"
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14097:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 964,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14104:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307833343432633465363037346138326631373937663732616330303030303030",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14109:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4341658809405943247759097200640000000_by_1",
																"typeString": "int_const 4341...(29 digits omitted)...0000"
															},
															"value": "0x3442c4e6074a82f1797f72ac0000000"
														},
														"src": "14104:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14097:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "14097:45:0"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14179:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 970,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14185:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 971,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14190:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 973,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14184:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 974,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14197:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14184:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14179:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "14179:28:0"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14209:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 979,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14216:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307831313662393666373537633338306662323837666430653430303030303030",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14221:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1447219603135314415919699066880000000_by_1",
																"typeString": "int_const 1447...(29 digits omitted)...0000"
															},
															"value": "0x116b96f757c380fb287fd0e40000000"
														},
														"src": "14216:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14209:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "14209:45:0"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14291:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 985,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14297:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 986,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14302:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 988,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14296:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 989,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14296:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14291:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "14291:28:0"
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14321:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 994,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14328:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830343561653562646435663065303365636131666634333930303030303030",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14333:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_361804900783828603979924766720000000_by_1",
																"typeString": "int_const 3618...(28 digits omitted)...0000"
															},
															"value": "0x045ae5bdd5f0e03eca1ff4390000000"
														},
														"src": "14328:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14321:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "14321:45:0"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14403:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14409:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1001,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14414:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1003,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14408:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1004,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14421:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14408:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14403:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "14403:28:0"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14433:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1009,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14440:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830306465666162663931333032636439356239666664613530303030303030",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14445:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_72360980156765720795984953344000000_by_1",
																"typeString": "int_const 7236...(27 digits omitted)...0000"
															},
															"value": "0x00defabf91302cd95b9ffda50000000"
														},
														"src": "14440:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14433:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "14433:45:0"
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14515:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1015,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14521:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1016,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14526:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14521:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1018,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14520:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1019,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14533:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14520:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14515:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "14515:28:0"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14545:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1024,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14552:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303235323963613938333262323234333965666666396238303030303030",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14557:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12060163359460953465997492224000000_by_1",
																"typeString": "int_const 1206...(27 digits omitted)...0000"
															},
															"value": "0x002529ca9832b22439efff9b8000000"
														},
														"src": "14552:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14545:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "14545:45:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14627:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1030,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14633:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1031,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14638:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1033,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14632:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1034,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14645:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14632:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14627:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "14627:28:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1038,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14657:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1039,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14664:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303035346631636631326264303465353136623664613838303030303030",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14669:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1722880479922993352285356032000000_by_1",
																"typeString": "int_const 1722...(26 digits omitted)...0000"
															},
															"value": "0x00054f1cf12bd04e516b6da88000000"
														},
														"src": "14664:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14657:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "14657:45:0"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14739:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1045,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14745:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1046,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14750:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1048,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14744:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1049,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14757:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14744:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14739:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "14739:28:0"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14769:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1054,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14776:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030613965333965323537613039636132643664623531303030303030",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14781:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_215360059990374169035669504000000_by_1",
																"typeString": "int_const 2153...(25 digits omitted)...0000"
															},
															"value": "0x0000a9e39e257a09ca2d6db51000000"
														},
														"src": "14776:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14769:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "14769:45:0"
											},
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14851:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14857:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1061,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14862:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14857:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1063,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14856:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1064,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14869:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14856:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14851:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "14851:28:0"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14881:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1069,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14888:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030313265303636653762383339666130353063333039303030303030",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14893:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_23928895554486018781741056000000_by_1",
																"typeString": "int_const 23928895554486018781741056000000"
															},
															"value": "0x000012e066e7b839fa050c309000000"
														},
														"src": "14888:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14881:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "14881:45:0"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14963:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1075,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14969:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1076,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "14974:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14969:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1078,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1079,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14981:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14968:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14963:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "14963:28:0"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "14993:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1084,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15000:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303165333364376439323663333239613161643161383030303030",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15005:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2392889555448601878174105600000_by_1",
																"typeString": "int_const 2392889555448601878174105600000"
															},
															"value": "0x000001e33d7d926c329a1ad1a800000"
														},
														"src": "15000:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14993:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "14993:45:0"
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15075:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1090,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15081:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1091,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15086:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15081:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15080:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1094,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15093:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15080:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15075:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "15075:28:0"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1098,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1099,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15112:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303032626565353133626462346136623139623566383030303030",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15117:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_217535414131691079834009600000_by_1",
																"typeString": "int_const 217535414131691079834009600000"
															},
															"value": "0x0000002bee513bdb4a6b19b5f800000"
														},
														"src": "15112:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15105:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "15105:45:0"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15187:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1105,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15193:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1106,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15198:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15193:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15192:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1109,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15205:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15192:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15187:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "15187:28:0"
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1113,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15217:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1114,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030336139333136666137396238386563636632613030303030",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15229:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18127951177640923319500800000_by_1",
																"typeString": "int_const 18127951177640923319500800000"
															},
															"value": "0x00000003a9316fa79b88eccf2a00000"
														},
														"src": "15224:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15217:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "15217:45:0"
											},
											{
												"expression": {
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1119,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15299:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1120,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15305:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1121,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15310:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15305:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15304:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1124,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15317:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15304:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15299:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "15299:28:0"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15329:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303438313737656265316661383132333735323030303030",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15341:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1394457782895455639961600000_by_1",
																"typeString": "int_const 1394457782895455639961600000"
															},
															"value": "0x0000000048177ebe1fa812375200000"
														},
														"src": "15336:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15329:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "15329:45:0"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15411:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1135,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15417:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1136,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15422:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15417:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1138,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15416:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1139,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15429:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15416:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15411:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "15411:28:0"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1143,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15441:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1144,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15448:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303035323633666539303234326463626163663030303030",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15453:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_99604127349675402854400000_by_1",
																"typeString": "int_const 99604127349675402854400000"
															},
															"value": "0x0000000005263fe90242dcbacf00000"
														},
														"src": "15448:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15441:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "15441:45:0"
											},
											{
												"expression": {
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1149,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15523:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1150,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15529:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1151,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15534:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15529:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1153,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1154,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15528:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15523:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "15523:28:0"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1158,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15553:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1159,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15560:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030353765323230393963303330643934313030303030",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15565:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6640275156645026856960000_by_1",
																"typeString": "int_const 6640275156645026856960000"
															},
															"value": "0x000000000057e22099c030d94100000"
														},
														"src": "15560:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15553:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "15553:45:0"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1164,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15635:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1165,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15641:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1166,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15646:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1168,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15640:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1169,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15653:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15640:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15635:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "15635:28:0"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1174,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15672:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303537653232303939633033306439343130303030",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15677:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_415017197290314178560000_by_1",
																"typeString": "int_const 415017197290314178560000"
															},
															"value": "0x0000000000057e22099c030d9410000"
														},
														"src": "15672:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15665:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "15665:45:0"
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15747:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1180,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15753:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1181,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15758:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15753:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1183,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15752:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1184,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15752:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15747:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "15747:28:0"
											},
											{
												"expression": {
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15777:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1189,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15784:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303035326236623534353639393736333130303030",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15789:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24412776311194951680000_by_1",
																"typeString": "int_const 24412776311194951680000"
															},
															"value": "0x00000000000052b6b54569976310000"
														},
														"src": "15784:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15777:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "15777:45:0"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15859:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1195,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15865:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1196,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15870:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15865:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1198,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15864:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1199,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15877:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15864:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15859:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "15859:28:0"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15889:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1204,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "15896:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030343938356636373639366266373438303030",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15901:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1356265350621941760000_by_1",
																"typeString": "int_const 1356265350621941760000"
															},
															"value": "0x00000000000004985f67696bf748000"
														},
														"src": "15896:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15889:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "15889:45:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15971:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1210,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "15977:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1211,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "15982:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15977:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1213,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15976:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1214,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "15989:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15976:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15971:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "15971:28:0"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1218,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16001:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16008:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303364656131326561393965343938303030",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16013:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_71382386874839040000_by_1",
																"typeString": "int_const 71382386874839040000"
															},
															"value": "0x000000000000003dea12ea99e498000"
														},
														"src": "16008:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16001:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "16001:45:0"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16083:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1225,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16089:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1226,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16094:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16089:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1228,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16088:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1229,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16088:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16083:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "16083:28:0"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16113:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1234,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16120:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303033313838306632323134623665303030",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16125:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3569119343741952000_by_1",
																"typeString": "int_const 3569119343741952000"
															},
															"value": "0x00000000000000031880f2214b6e000"
														},
														"src": "16120:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16113:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "16113:45:0"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16195:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1240,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16201:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1241,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16206:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16201:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1243,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16200:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1244,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16213:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16200:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16195:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "16195:28:0"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16225:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1249,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030323562636666353665623336303030",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16237:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_169958063987712000_by_1",
																"typeString": "int_const 169958063987712000"
															},
															"value": "0x000000000000000025bcff56eb36000"
														},
														"src": "16232:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16225:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "16225:45:0"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1254,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16307:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1255,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16313:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1256,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16318:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16313:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16312:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1259,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16325:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16312:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16307:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "16307:28:0"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1263,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16337:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1264,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16344:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303162373232653130616231303030",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16349:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7725366544896000_by_1",
																"typeString": "int_const 7725366544896000"
															},
															"value": "0x000000000000000001b722e10ab1000"
														},
														"src": "16344:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16337:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "16337:45:0"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1269,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16419:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1270,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16425:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1271,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16430:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16425:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1273,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16424:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1274,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16424:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16419:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "16419:28:0"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16449:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1279,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16456:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303031333137633730303737303030",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16461:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_335885501952000_by_1",
																"typeString": "int_const 335885501952000"
															},
															"value": "0x0000000000000000001317c70077000"
														},
														"src": "16456:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16449:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "16449:45:0"
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16531:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1285,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16537:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1286,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16542:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16537:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1288,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1289,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16549:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16536:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16531:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "16531:28:0"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16561:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1294,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16568:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030306362613834616166613030",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16573:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13995229248000_by_1",
																"typeString": "int_const 13995229248000"
															},
															"value": "0x00000000000000000000cba84aafa00"
														},
														"src": "16568:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16561:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "16561:45:0"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1299,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16643:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1300,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16649:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1301,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16654:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16649:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1303,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16648:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1304,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16661:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16648:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16643:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "16643:28:0"
											},
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1309,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16680:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303038323537336130613030",
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16685:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_559809169920_by_1",
																"typeString": "int_const 559809169920"
															},
															"value": "0x00000000000000000000082573a0a00"
														},
														"src": "16680:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16673:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "16673:45:0"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1314,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16755:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1315,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16761:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1316,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16766:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16761:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1318,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16760:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1319,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16760:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16755:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "16755:28:0"
											},
											{
												"expression": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16785:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1324,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16792:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030353033356164393030",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16797:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_21531121920_by_1",
																"typeString": "int_const 21531121920"
															},
															"value": "0x00000000000000000000005035ad900"
														},
														"src": "16792:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16785:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "16785:45:0"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1329,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16867:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1330,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16873:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1331,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16878:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16873:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1333,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16872:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1334,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16885:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16872:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16867:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "16867:28:0"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1338,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "16897:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1339,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "16904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303266383831623030",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16909:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_797448960_by_1",
																"typeString": "int_const 797448960"
															},
															"value": "0x000000000000000000000002f881b00"
														},
														"src": "16904:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16897:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "16897:45:0"
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16979:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1345,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "16985:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1346,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "16990:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16985:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16984:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1349,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "16997:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16984:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16979:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "16979:28:0"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17009:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1354,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303031623239333430",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17021:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28480320_by_1",
																"typeString": "int_const 28480320"
															},
															"value": "0x0000000000000000000000001b29340"
														},
														"src": "17016:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17009:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "17009:45:0"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "17091:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1360,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "17097:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1361,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "17102:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17097:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1363,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17096:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1364,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "17109:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17096:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17091:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "17091:28:0"
											},
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17121:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1369,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17128:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030306566633430",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17133:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_982080_by_1",
																"typeString": "int_const 982080"
															},
															"value": "0x00000000000000000000000000efc40"
														},
														"src": "17128:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17121:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "17121:45:0"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1374,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "17203:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1375,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "17209:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1376,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "17214:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17209:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1378,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1379,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "17221:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17208:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17203:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "17203:28:0"
											},
											{
												"expression": {
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1383,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17233:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1384,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17240:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030303037666530",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17245:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32736_by_1",
																"typeString": "int_const 32736"
															},
															"value": "0x0000000000000000000000000007fe0"
														},
														"src": "17240:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17233:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "17233:45:0"
											},
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1389,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "17315:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1390,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "17321:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1391,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "17326:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1393,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17320:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1394,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "17333:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17320:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17315:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "17315:28:0"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1398,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17345:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1399,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17352:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030303030343230",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17357:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1056_by_1",
																"typeString": "int_const 1056"
															},
															"value": "0x0000000000000000000000000000420"
														},
														"src": "17352:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17345:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "17345:45:0"
											},
											{
												"expression": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1404,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "17427:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1405,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "17433:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1406,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "17438:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17433:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17432:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1409,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "17445:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17432:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17427:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "17427:28:0"
											},
											{
												"expression": {
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1413,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17457:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1414,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17464:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303231",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17469:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_33_by_1",
																"typeString": "int_const 33"
															},
															"value": "0x0000000000000000000000000000021"
														},
														"src": "17464:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17457:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "17457:45:0"
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1419,
														"name": "xi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "17539:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1420,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "17545:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1421,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "17550:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17545:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"id": 1424,
															"name": "_precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "17557:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "17544:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17539:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "17539:28:0"
											},
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "17569:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1429,
															"name": "xi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "17576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303031",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17581:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x0000000000000000000000000000001"
														},
														"src": "17576:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17569:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "17569:45:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1434,
																"name": "res",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "17660:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "307836383835383963633065393530356532663266656535353830303030303030",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17666:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8683317618811886495518194401280000000_by_1",
																	"typeString": "int_const 8683...(29 digits omitted)...0000"
																},
																"value": "0x688589cc0e9505e2f2fee5580000000"
															},
															"src": "17660:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1437,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "17702:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17660:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1439,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "17708:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1440,
																	"name": "_precision",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "17715:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "17708:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1442,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17707:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17660:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 1444,
												"nodeType": "Return",
												"src": "17653:73:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13361:553:0",
										"text": "This function can be auto-generated by the script 'PrintFunctionGeneralExp.py'.\nIt approximates \"e ^ x\" via maclaurin summation: \"(x^0)/0! + (x^1)/1! + ... + (x^n)/n!\".\nIt returns \"e ^ (x / 2 ^ precision) * 2 ^ precision\", that is, the result is upshifted for accuracy.\nThe global \"maxExpArray\" maps each \"precision\" to \"((maximumExponent + 1) << (MAX_PRECISION - precision)) - 1\".\nThe maximum permitted value for \"x\" is therefore given by \"maxExpArray[precision] >> (MAX_PRECISION - precision)\"."
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generalExp",
									"nameLocation": "13929:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "13948:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "13940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_precision",
												"nameLocation": "13958:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "13952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 940,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13952:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13939:30:0"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "13993:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13992:9:0"
									},
									"scope": 2177,
									"src": "13920:3864:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "18582:2735:0",
										"statements": [
											{
												"assignments": [
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "18601:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1765,
														"src": "18593:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"hexValue": "30",
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18607:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18593:15:0"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "18629:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1765,
														"src": "18621:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"nodeType": "VariableDeclarationStatement",
												"src": "18621:9:0"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "18649:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1765,
														"src": "18641:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"nodeType": "VariableDeclarationStatement",
												"src": "18641:9:0"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "w",
														"nameLocation": "18669:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1765,
														"src": "18661:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"nodeType": "VariableDeclarationStatement",
												"src": "18661:9:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1467,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "18687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30786433303934633730663033346465346239366666376435623666393966636438",
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18692:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_280515388193368458015406427511040113880_by_1",
															"typeString": "int_const 2805...(31 digits omitted)...3880"
														},
														"value": "0xd3094c70f034de4b96ff7d5b6f99fcd8"
													},
													"src": "18687:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "18683:143:0",
												"trueBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "18728:98:0",
													"statements": [
														{
															"expression": {
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1470,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "18729:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783430303030303030303030303030303030303030303030303030303030303030",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18736:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_85070591730234615865843651857942052864_by_1",
																		"typeString": "int_const 8507...(30 digits omitted)...2864"
																	},
																	"value": "0x40000000000000000000000000000000"
																},
																"src": "18729:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "18729:41:0"
														},
														{
															"expression": {
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1474,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "18772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1475,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "18776:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1476,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "18780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18776:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30786433303934633730663033346465346239366666376435623666393966636438",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18790:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_280515388193368458015406427511040113880_by_1",
																			"typeString": "int_const 2805...(31 digits omitted)...3880"
																		},
																		"value": "0xd3094c70f034de4b96ff7d5b6f99fcd8"
																	},
																	"src": "18776:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18772:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "18772:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1484,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "18855:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30786134356166316531663430633333336233646531646234646435356632396137",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18860:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_218465603988574474844591417643679820199_by_1",
															"typeString": "int_const 2184...(31 digits omitted)...0199"
														},
														"value": "0xa45af1e1f40c333b3de1db4dd55f29a7"
													},
													"src": "18855:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "18851:143:0",
												"trueBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "18896:98:0",
													"statements": [
														{
															"expression": {
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1487,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "18897:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783230303030303030303030303030303030303030303030303030303030303030",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18904:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_42535295865117307932921825928971026432_by_1",
																		"typeString": "int_const 4253...(30 digits omitted)...6432"
																	},
																	"value": "0x20000000000000000000000000000000"
																},
																"src": "18897:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1490,
															"nodeType": "ExpressionStatement",
															"src": "18897:41:0"
														},
														{
															"expression": {
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1491,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "18940:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1492,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "18944:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1493,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "18948:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18944:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30786134356166316531663430633333336233646531646234646435356632396137",
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18958:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_218465603988574474844591417643679820199_by_1",
																			"typeString": "int_const 2184...(31 digits omitted)...0199"
																		},
																		"value": "0xa45af1e1f40c333b3de1db4dd55f29a7"
																	},
																	"src": "18944:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18940:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1498,
															"nodeType": "ExpressionStatement",
															"src": "18940:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1501,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783931306230323264623761653637636537366234343163323730333563366131",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19028:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192795218841189805222451540510555621025_by_1",
															"typeString": "int_const 1927...(31 digits omitted)...1025"
														},
														"value": "0x910b022db7ae67ce76b441c27035c6a1"
													},
													"src": "19023:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "IfStatement",
												"src": "19019:143:0",
												"trueBody": {
													"id": 1516,
													"nodeType": "Block",
													"src": "19064:98:0",
													"statements": [
														{
															"expression": {
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1504,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19065:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783130303030303030303030303030303030303030303030303030303030303030",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19072:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_21267647932558653966460912964485513216_by_1",
																		"typeString": "int_const 2126...(30 digits omitted)...3216"
																	},
																	"value": "0x10000000000000000000000000000000"
																},
																"src": "19065:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1507,
															"nodeType": "ExpressionStatement",
															"src": "19065:41:0"
														},
														{
															"expression": {
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1508,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19108:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1509,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19112:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1510,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19116:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19112:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783931306230323264623761653637636537366234343163323730333563366131",
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19126:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192795218841189805222451540510555621025_by_1",
																			"typeString": "int_const 1927...(31 digits omitted)...1025"
																		},
																		"value": "0x910b022db7ae67ce76b441c27035c6a1"
																	},
																	"src": "19112:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19108:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "19108:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1518,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19191:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783838343135616262653961373662656164386430306366313132653464346138",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19196:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_181114347027396448854165353426875372712_by_1",
															"typeString": "int_const 1811...(31 digits omitted)...2712"
														},
														"value": "0x88415abbe9a76bead8d00cf112e4d4a8"
													},
													"src": "19191:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "19187:143:0",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "19232:98:0",
													"statements": [
														{
															"expression": {
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1521,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19233:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783038303030303030303030303030303030303030303030303030303030303030",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19240:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10633823966279326983230456482242756608_by_1",
																		"typeString": "int_const 1063...(30 digits omitted)...6608"
																	},
																	"value": "0x08000000000000000000000000000000"
																},
																"src": "19233:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1524,
															"nodeType": "ExpressionStatement",
															"src": "19233:41:0"
														},
														{
															"expression": {
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1525,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19276:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1526,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19280:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1527,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19284:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19280:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783838343135616262653961373662656164386430306366313132653464346138",
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19294:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_181114347027396448854165353426875372712_by_1",
																			"typeString": "int_const 1811...(31 digits omitted)...2712"
																		},
																		"value": "0x88415abbe9a76bead8d00cf112e4d4a8"
																	},
																	"src": "19280:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19276:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1532,
															"nodeType": "ExpressionStatement",
															"src": "19276:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783834313032623030383933663634633730356538343164356434303634626433",
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19364:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_175542044379434494067323265867529472979_by_1",
															"typeString": "int_const 1755...(31 digits omitted)...2979"
														},
														"value": "0x84102b00893f64c705e841d5d4064bd3"
													},
													"src": "19359:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "IfStatement",
												"src": "19355:143:0",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "19400:98:0",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1538,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19401:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783034303030303030303030303030303030303030303030303030303030303030",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19408:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5316911983139663491615228241121378304_by_1",
																		"typeString": "int_const 5316...(29 digits omitted)...8304"
																	},
																	"value": "0x04000000000000000000000000000000"
																},
																"src": "19401:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "19401:41:0"
														},
														{
															"expression": {
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1542,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19444:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19448:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1544,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19452:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19448:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783834313032623030383933663634633730356538343164356434303634626433",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19462:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_175542044379434494067323265867529472979_by_1",
																			"typeString": "int_const 1755...(31 digits omitted)...2979"
																		},
																		"value": "0x84102b00893f64c705e841d5d4064bd3"
																	},
																	"src": "19448:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19444:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1549,
															"nodeType": "ExpressionStatement",
															"src": "19444:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1552,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19527:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783832303430353561616566316338626435633332353966343832323733356132",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19532:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_172820517236198538127967385733353125282_by_1",
															"typeString": "int_const 1728...(31 digits omitted)...5282"
														},
														"value": "0x8204055aaef1c8bd5c3259f4822735a2"
													},
													"src": "19527:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "19523:143:0",
												"trueBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "19568:98:0",
													"statements": [
														{
															"expression": {
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1555,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19569:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783032303030303030303030303030303030303030303030303030303030303030",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19576:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2658455991569831745807614120560689152_by_1",
																		"typeString": "int_const 2658...(29 digits omitted)...9152"
																	},
																	"value": "0x02000000000000000000000000000000"
																},
																"src": "19569:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1558,
															"nodeType": "ExpressionStatement",
															"src": "19569:41:0"
														},
														{
															"expression": {
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1559,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19612:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1560,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19616:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1561,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19620:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19616:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783832303430353561616566316338626435633332353966343832323733356132",
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19630:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_172820517236198538127967385733353125282_by_1",
																			"typeString": "int_const 1728...(31 digits omitted)...5282"
																		},
																		"value": "0x8204055aaef1c8bd5c3259f4822735a2"
																	},
																	"src": "19616:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19612:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "19612:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1569,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19695:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783831303130306162303032323264383631393331633135653339623434653939",
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19700:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_171475617301169790829459146906809945753_by_1",
															"typeString": "int_const 1714...(31 digits omitted)...5753"
														},
														"value": "0x810100ab00222d861931c15e39b44e99"
													},
													"src": "19695:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "19691:143:0",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "19736:98:0",
													"statements": [
														{
															"expression": {
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1572,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19737:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783031303030303030303030303030303030303030303030303030303030303030",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19744:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1329227995784915872903807060280344576_by_1",
																		"typeString": "int_const 1329...(29 digits omitted)...4576"
																	},
																	"value": "0x01000000000000000000000000000000"
																},
																"src": "19737:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "19737:41:0"
														},
														{
															"expression": {
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1576,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1577,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19784:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1578,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19788:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19784:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783831303130306162303032323264383631393331633135653339623434653939",
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19798:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_171475617301169790829459146906809945753_by_1",
																			"typeString": "int_const 1714...(31 digits omitted)...5753"
																		},
																		"value": "0x810100ab00222d861931c15e39b44e99"
																	},
																	"src": "19784:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19780:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "19780:52:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1586,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "19863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783830383034303135356161626262653934353135323136393335353466373333",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19868:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_170807097224429000759274174605493073715_by_1",
															"typeString": "int_const 1708...(31 digits omitted)...3715"
														},
														"value": "0x808040155aabbbe9451521693554f733"
													},
													"src": "19863:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1602,
												"nodeType": "IfStatement",
												"src": "19859:143:0",
												"trueBody": {
													"id": 1601,
													"nodeType": "Block",
													"src": "19904:98:0",
													"statements": [
														{
															"expression": {
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1589,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "19905:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783030383030303030303030303030303030303030303030303030303030303030",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19912:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_664613997892457936451903530140172288_by_1",
																		"typeString": "int_const 6646...(28 digits omitted)...2288"
																	},
																	"value": "0x00800000000000000000000000000000"
																},
																"src": "19905:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "19905:41:0"
														},
														{
															"expression": {
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1593,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "19948:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1594,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "19952:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1595,
																			"name": "FIXED_1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "19956:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19952:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "30783830383034303135356161626262653934353135323136393335353466373333",
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19966:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_170807097224429000759274174605493073715_by_1",
																			"typeString": "int_const 1708...(31 digits omitted)...3715"
																		},
																		"value": "0x808040155aabbbe9451521693554f733"
																	},
																	"src": "19952:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19948:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1600,
															"nodeType": "ExpressionStatement",
															"src": "19948:52:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1603,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20029:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1604,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "20033:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "20037:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1606,
																"name": "FIXED_1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "20041:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20037:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20033:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20029:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "20029:19:0"
											},
											{
												"expression": {
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1611,
														"name": "w",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "20059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1612,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "20063:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1613,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "20067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1615,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20063:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20059:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "20059:19:0"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1619,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20089:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20101:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1456"
																			},
																			"value": "0x100000000000000000000000000000000"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1622,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20139:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20101:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20100:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20096:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20144:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1456"
															},
															"value": "0x100000000000000000000000000000000"
														},
														"src": "20096:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20089:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "20089:90:0"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1630,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20181:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20185:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1632,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20185:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1634,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20185:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20181:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "20181:19:0"
											},
											{
												"expression": {
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1638,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20240:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078306161616161616161616161616161616161616161616161616161616161616161",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20252:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_226854911280625642308916404954512140970_by_1",
																				"typeString": "int_const 2268...(31 digits omitted)...0970"
																			},
																			"value": "0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1641,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20290:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20252:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20251:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20247:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078323030303030303030303030303030303030303030303030303030303030303030",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20295:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_680564733841876926926749214863536422912_by_1",
																"typeString": "int_const 6805...(31 digits omitted)...2912"
															},
															"value": "0x200000000000000000000000000000000"
														},
														"src": "20247:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20240:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "20240:90:0"
											},
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1649,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1651,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1653,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20336:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20332:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "20332:19:0"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1657,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20391:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1658,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20398:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303939393939393939393939393939393939393939393939393939393939393939",
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20403:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_204169420152563078078024764459060926873_by_1",
																				"typeString": "int_const 2041...(31 digits omitted)...6873"
																			},
																			"value": "0x099999999999999999999999999999999"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1660,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20441:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20403:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1662,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20402:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20398:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078333030303030303030303030303030303030303030303030303030303030303030",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20446:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1020847100762815390390123822295304634368_by_1",
																"typeString": "int_const 1020...(32 digits omitted)...4368"
															},
															"value": "0x300000000000000000000000000000000"
														},
														"src": "20398:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20391:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "20391:90:0"
											},
											{
												"expression": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1668,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1669,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1670,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20487:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1672,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20495:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20487:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20483:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "20483:19:0"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1676,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20542:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1677,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303932343932343932343932343932343932343932343932343932343932343932",
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20554:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_194447066811964836264785489961010406546_by_1",
																				"typeString": "int_const 1944...(31 digits omitted)...6546"
																			},
																			"value": "0x092492492492492492492492492492492"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1679,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20592:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20554:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20553:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20549:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078343030303030303030303030303030303030303030303030303030303030303030",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20597:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1361129467683753853853498429727072845824_by_1",
																"typeString": "int_const 1361...(32 digits omitted)...5824"
															},
															"value": "0x400000000000000000000000000000000"
														},
														"src": "20549:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20542:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "20542:90:0"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20638:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1689,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20638:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1691,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20638:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20634:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "20634:19:0"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20700:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303865333865333865333865333865333865333865333865333865333865333865",
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20705:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_189045759400521368590763670795426784142_by_1",
																				"typeString": "int_const 1890...(31 digits omitted)...4142"
																			},
																			"value": "0x08e38e38e38e38e38e38e38e38e38e38e"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1698,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20743:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20705:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1700,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20704:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20700:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078353030303030303030303030303030303030303030303030303030303030303030",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20748:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1701411834604692317316873037158841057280_by_1",
																"typeString": "int_const 1701...(32 digits omitted)...7280"
															},
															"value": "0x500000000000000000000000000000000"
														},
														"src": "20700:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20693:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "20693:90:0"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20789:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1708,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20789:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1710,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20789:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20785:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "20785:19:0"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1714,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20844:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1715,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303862613265386261326538626132653862613265386261326538626132653862",
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20856:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_185608563775057343707295240417328115339_by_1",
																				"typeString": "int_const 1856...(31 digits omitted)...5339"
																			},
																			"value": "0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1717,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "20894:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20856:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20855:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20851:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078363030303030303030303030303030303030303030303030303030303030303030",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20899:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2041694201525630780780247644590609268736_by_1",
																"typeString": "int_const 2041...(32 digits omitted)...8736"
															},
															"value": "0x600000000000000000000000000000000"
														},
														"src": "20851:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20844:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "20844:90:0"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "20936:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1726,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "20940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1727,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "20944:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1729,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "20948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20940:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20936:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "20936:19:0"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1733,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "20995:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1734,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "21002:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303839643839643839643839643839643839643839643839643839643839643839",
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21007:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_183228966803582249557201711694029036937_by_1",
																				"typeString": "int_const 1832...(31 digits omitted)...6937"
																			},
																			"value": "0x089d89d89d89d89d89d89d89d89d89d89"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1736,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "21045:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21007:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21006:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21002:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078373030303030303030303030303030303030303030303030303030303030303030",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21050:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2381976568446569244243622252022377480192_by_1",
																"typeString": "int_const 2381...(32 digits omitted)...0192"
															},
															"value": "0x700000000000000000000000000000000"
														},
														"src": "21002:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20995:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "20995:90:0"
											},
											{
												"expression": {
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1744,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "21087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1745,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "21091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1746,
																"name": "w",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "21095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1748,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "21099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21091:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21087:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "21087:19:0"
											},
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1752,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "21146:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1753,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "21153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3078303838383838383838383838383838383838383838383838383838383838383838",
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21158:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_181483929024500513847133123963609712776_by_1",
																				"typeString": "int_const 1814...(31 digits omitted)...2776"
																			},
																			"value": "0x088888888888888888888888888888888"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1755,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "21196:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21158:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1757,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21157:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21153:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3078383030303030303030303030303030303030303030303030303030303030303030",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21201:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2722258935367507707706996859454145691648_by_1",
																"typeString": "int_const 2722...(32 digits omitted)...1648"
															},
															"value": "0x800000000000000000000000000000000"
														},
														"src": "21153:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21146:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "21146:90:0"
											},
											{
												"expression": {
													"id": 1763,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "21306:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1764,
												"nodeType": "Return",
												"src": "21299:10:0"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "17792:721:0",
										"text": "Return log(x / FIXED_1) * FIXED_1\nInput range: FIXED_1 <= x <= LOG_EXP_MAX_VAL - 1\nAuto-generated via 'PrintFunctionOptimalLog.py'\nDetailed description:\n- Rewrite the input as a product of natural exponents and a single residual r, such that 1 < r < 2\n- The natural logarithm of each (pre-calculated) exponent is the degree of the exponent\n- The natural logarithm of r is calculated via Taylor series for log(1 + x), where x = r - 1\n- The natural logarithm of the input is calculated by summing up the intermediate results above\n- For example: log(250) = log(e^4 * e^1 * e^0.5 * 1.021692859) = 4 + 1 + 0.5 + log(1 + 0.021692859)"
									},
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "optimalLog",
									"nameLocation": "18528:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "18547:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "18539:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18538:11:0"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "18573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18572:9:0"
									},
									"scope": 2177,
									"src": "18519:2798:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "22070:3153:0",
										"statements": [
											{
												"assignments": [
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "22089:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "22081:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"hexValue": "30",
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22095:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22081:15:0"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "22117:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "22109:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1780,
												"nodeType": "VariableDeclarationStatement",
												"src": "22109:9:0"
											},
											{
												"assignments": [
													1782
												],
												"declarations": [
													{
														"constant": false,
														"id": 1782,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "22137:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2175,
														"src": "22129:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"nodeType": "VariableDeclarationStatement",
												"src": "22129:9:0"
											},
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1784,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1785,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "22155:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "22159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "30783130303030303030303030303030303030303030303030303030303030303030",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22163:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21267647932558653966460912964485513216_by_1",
																	"typeString": "int_const 2126...(30 digits omitted)...3216"
																},
																"value": "0x10000000000000000000000000000000"
															},
															"src": "22159:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22155:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22151:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "22151:46:0"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1792,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22243:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1794,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22243:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1796,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22243:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22239:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "22239:19:0"
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1800,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22260:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1801,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22267:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307831306531623362653431356130303030",
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22271:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1216451004088320000_by_1",
																"typeString": "int_const 1216451004088320000"
															},
															"value": "0x10e1b3be415a0000"
														},
														"src": "22267:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22260:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "22260:29:0"
											},
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1806,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1807,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1808,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22334:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1810,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22326:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "22326:19:0"
											},
											{
												"expression": {
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1814,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22347:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1815,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22354:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830356130393133663662316530303030",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22358:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_405483668029440000_by_1",
																"typeString": "int_const 405483668029440000"
															},
															"value": "0x05a0913f6b1e0000"
														},
														"src": "22354:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22347:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "22347:29:0"
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1820,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22413:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1821,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22417:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1822,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22421:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1824,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22417:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22413:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "22413:19:0"
											},
											{
												"expression": {
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1828,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22434:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1829,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830313638323434666461633738303030",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22445:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_101370917007360000_by_1",
																"typeString": "int_const 101370917007360000"
															},
															"value": "0x0168244fdac78000"
														},
														"src": "22441:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22434:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1833,
												"nodeType": "ExpressionStatement",
												"src": "22434:29:0"
											},
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1834,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1835,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1836,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22508:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1838,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22504:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22500:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "22500:19:0"
											},
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22521:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1843,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22528:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303438303734333262633138303030",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22532:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20274183401472000_by_1",
																"typeString": "int_const 20274183401472000"
															},
															"value": "0x004807432bc18000"
														},
														"src": "22528:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22521:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "22521:29:0"
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1848,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1849,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22591:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1850,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1852,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22591:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22587:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "22587:19:0"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1856,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22608:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303063303133356463613034303030",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22619:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3379030566912000_by_1",
																"typeString": "int_const 3379030566912000"
															},
															"value": "0x000c0135dca04000"
														},
														"src": "22615:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22608:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "22608:29:0"
											},
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1862,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22674:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22678:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1864,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22682:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22678:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1866,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22678:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22674:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "22674:19:0"
											},
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1870,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22695:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1871,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303031623730376231636463303030",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22706:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_482718652416000_by_1",
																"typeString": "int_const 482718652416000"
															},
															"value": "0x0001b707b1cdc000"
														},
														"src": "22702:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22695:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "22695:29:0"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1876,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1877,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1878,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22769:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22765:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1880,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22765:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22761:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "22761:19:0"
											},
											{
												"expression": {
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1884,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22782:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1885,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22789:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030333665306636333962383030",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22793:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60339831552000_by_1",
																"typeString": "int_const 60339831552000"
															},
															"value": "0x000036e0f639b800"
														},
														"src": "22789:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22782:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "22782:29:0"
											},
											{
												"expression": {
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1890,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22848:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1891,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1892,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22852:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1894,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22852:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22848:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "22848:19:0"
											},
											{
												"expression": {
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1898,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22869:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1899,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22876:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303631386665653966383030",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22880:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6704425728000_by_1",
																"typeString": "int_const 6704425728000"
															},
															"value": "0x00000618fee9f800"
														},
														"src": "22876:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22869:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "22869:29:0"
											},
											{
												"expression": {
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1904,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "22935:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "22939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1906,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22943:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22939:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1908,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "22947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22939:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22935:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "22935:19:0"
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1912,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "22956:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1913,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303039633139376463633030",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22967:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_670442572800_by_1",
																"typeString": "int_const 670442572800"
															},
															"value": "0x0000009c197dcc00"
														},
														"src": "22963:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22956:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "22956:29:0"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1918,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23022:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1920,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23030:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23026:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1922,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23026:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23022:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "23022:19:0"
											},
											{
												"expression": {
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1926,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23043:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1927,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23050:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030653330646365343030",
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23054:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60949324800_by_1",
																"typeString": "int_const 60949324800"
															},
															"value": "0x0000000e30dce400"
														},
														"src": "23050:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23043:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "23043:29:0"
											},
											{
												"expression": {
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1932,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1933,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1934,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23117:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23113:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1936,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23113:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23109:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "23109:19:0"
											},
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1940,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23130:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1941,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23137:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030313265626431333030",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23141:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5079110400_by_1",
																"typeString": "int_const 5079110400"
															},
															"value": "0x000000012ebd1300"
														},
														"src": "23137:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "23130:29:0"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1946,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1947,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1948,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23204:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1950,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23200:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23196:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "23196:19:0"
											},
											{
												"expression": {
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23217:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1955,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23224:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303137343939663030",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23228:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_390700800_by_1",
																"typeString": "int_const 390700800"
															},
															"value": "0x0000000017499f00"
														},
														"src": "23224:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23217:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "23217:29:0"
											},
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1960,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23287:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1962,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23291:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1964,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23287:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23283:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "23283:19:0"
											},
											{
												"expression": {
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23304:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1969,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23311:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303031613964343830",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23315:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27907200_by_1",
																"typeString": "int_const 27907200"
															},
															"value": "0x0000000001a9d480"
														},
														"src": "23311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23304:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "23304:29:0"
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1974,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23370:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1975,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1976,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23378:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23374:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1978,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23374:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23370:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "23370:19:0"
											},
											{
												"expression": {
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1982,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23391:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1983,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23398:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030316336333830",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23402:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1860480_by_1",
																"typeString": "int_const 1860480"
															},
															"value": "0x00000000001c6380"
														},
														"src": "23398:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23391:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1987,
												"nodeType": "ExpressionStatement",
												"src": "23391:29:0"
											},
											{
												"expression": {
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1988,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23457:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1989,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23461:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1990,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23465:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23461:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1992,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23461:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23457:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "23457:19:0"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1996,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23478:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1997,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23485:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303163363338",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23489:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_116280_by_1",
																"typeString": "int_const 116280"
															},
															"value": "0x000000000001c638"
														},
														"src": "23485:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23478:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "23478:29:0"
											},
											{
												"expression": {
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2002,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23544:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23548:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2004,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23552:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23548:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2006,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23548:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23544:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "23544:19:0"
											},
											{
												"expression": {
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2010,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23565:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2011,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23572:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303031616238",
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23576:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6840_by_1",
																"typeString": "int_const 6840"
															},
															"value": "0x0000000000001ab8"
														},
														"src": "23572:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23565:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "23565:29:0"
											},
											{
												"expression": {
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2016,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2017,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23635:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2018,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23635:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2020,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23635:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23631:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "23631:19:0"
											},
											{
												"expression": {
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2024,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23652:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2025,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23659:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030313763",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23663:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_380_by_1",
																"typeString": "int_const 380"
															},
															"value": "0x000000000000017c"
														},
														"src": "23659:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23652:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "23652:29:0"
											},
											{
												"expression": {
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2030,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23718:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2031,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2032,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23726:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2034,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23722:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23718:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "23718:19:0"
											},
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2038,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23739:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2039,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23746:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303134",
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23750:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "0x0000000000000014"
														},
														"src": "23746:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23739:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "23739:29:0"
											},
											{
												"expression": {
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2044,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "23805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2045,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "23809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2046,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2048,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23809:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23805:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "23805:19:0"
											},
											{
												"expression": {
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2052,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2053,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "23833:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "307830303030303030303030303030303031",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23837:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x0000000000000001"
														},
														"src": "23833:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23826:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "23826:29:0"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2058,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "23892:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2059,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "23898:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "307832316333363737633832623430303030",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23904:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2432902008176640000_by_1",
																		"typeString": "int_const 2432902008176640000"
																	},
																	"value": "0x21c3677c82b40000"
																},
																"src": "23898:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2062,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "23925:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23898:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2064,
															"name": "FIXED_1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "23929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "23898:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23892:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "23892:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078303130303030303030303030303030303030303030303030303030303030303030",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24008:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_21267647932558653966460912964485513216_by_1",
																		"typeString": "int_const 2126...(30 digits omitted)...3216"
																	},
																	"value": "0x010000000000000000000000000000000"
																},
																"src": "24004:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24003:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24048:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24003:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2082,
												"nodeType": "IfStatement",
												"src": "23999:137:0",
												"trueBody": {
													"expression": {
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2074,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24051:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2075,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24057:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078316333643661323465643832323138373837643632346433653565626139356639",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24063:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_600596269623765960634066700837880239609_by_1",
																		"typeString": "int_const 6005...(31 digits omitted)...9609"
																	},
																	"value": "0x1c3d6a24ed82218787d624d3e5eba95f9"
																},
																"src": "24057:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078313865626566396561633832306165383638326239373933616336643165373736",
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24101:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_530024347646835984032474664511850276726_by_1",
																	"typeString": "int_const 5300...(31 digits omitted)...6726"
																},
																"value": "0x18ebef9eac820ae8682b9793ac6d1e776"
															},
															"src": "24057:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24051:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2081,
													"nodeType": "ExpressionStatement",
													"src": "24051:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2083,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078303230303030303030303030303030303030303030303030303030303030303030",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24180:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_42535295865117307932921825928971026432_by_1",
																		"typeString": "int_const 4253...(30 digits omitted)...6432"
																	},
																	"value": "0x020000000000000000000000000000000"
																},
																"src": "24176:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2086,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24175:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24175:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2097,
												"nodeType": "IfStatement",
												"src": "24171:137:0",
												"trueBody": {
													"expression": {
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2089,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24223:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2090,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24229:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078313865626566396561633832306165383638326239373933616336643165373738",
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24235:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_530024347646835984032474664511850276728_by_1",
																		"typeString": "int_const 5300...(31 digits omitted)...6728"
																	},
																	"value": "0x18ebef9eac820ae8682b9793ac6d1e778"
																},
																"src": "24229:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078313336386232666336663936303966653761636562343661613631396261656434",
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24273:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_412783376994266390547521411024565284564_by_1",
																	"typeString": "int_const 4127...(31 digits omitted)...4564"
																},
																"value": "0x1368b2fc6f9609fe7aceb46aa619baed4"
															},
															"src": "24229:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24223:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2096,
													"nodeType": "ExpressionStatement",
													"src": "24223:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2098,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24348:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078303430303030303030303030303030303030303030303030303030303030303030",
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24352:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_85070591730234615865843651857942052864_by_1",
																		"typeString": "int_const 8507...(30 digits omitted)...2864"
																	},
																	"value": "0x040000000000000000000000000000000"
																},
																"src": "24348:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2101,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24347:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24347:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2112,
												"nodeType": "IfStatement",
												"src": "24343:137:0",
												"trueBody": {
													"expression": {
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2104,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2105,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24401:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078313336386232666336663936303966653761636562343661613631396261656435",
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24407:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_412783376994266390547521411024565284565_by_1",
																		"typeString": "int_const 4127...(31 digits omitted)...4565"
																	},
																	"value": "0x1368b2fc6f9609fe7aceb46aa619baed5"
																},
																"src": "24401:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078306263356162316231363737396265333537356264386630353230613966323166",
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24445:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250365773966741064234501452596301656607_by_1",
																	"typeString": "int_const 2503...(31 digits omitted)...6607"
																},
																"value": "0x0bc5ab1b16779be3575bd8f0520a9f21f"
															},
															"src": "24401:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24395:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2111,
													"nodeType": "ExpressionStatement",
													"src": "24395:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2113,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24520:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078303830303030303030303030303030303030303030303030303030303030303030",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24524:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	},
																	"value": "0x080000000000000000000000000000000"
																},
																"src": "24520:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24519:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24519:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2127,
												"nodeType": "IfStatement",
												"src": "24515:137:0",
												"trueBody": {
													"expression": {
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2119,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24567:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2120,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24573:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078306263356162316231363737396265333537356264386630353230613966323165",
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24579:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_250365773966741064234501452596301656606_by_1",
																		"typeString": "int_const 2503...(31 digits omitted)...6606"
																	},
																	"value": "0x0bc5ab1b16779be3575bd8f0520a9f21e"
																},
																"src": "24573:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078303435346161613865666530373265376636646462616238346234306135356339",
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24617:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_92104421015340344839251721785254237641_by_1",
																	"typeString": "int_const 9210...(30 digits omitted)...7641"
																},
																"value": "0x0454aaa8efe072e7f6ddbab84b40a55c9"
															},
															"src": "24573:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24567:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2126,
													"nodeType": "ExpressionStatement",
													"src": "24567:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2128,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24696:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																		"typeString": "int_const 3402...(31 digits omitted)...1456"
																	},
																	"value": "0x100000000000000000000000000000000"
																},
																"src": "24692:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2131,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24691:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24691:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "24687:137:0",
												"trueBody": {
													"expression": {
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2134,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24739:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2135,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24745:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078303435346161613865666530373265376636646462616238346234306135356335",
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24751:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_92104421015340344839251721785254237637_by_1",
																		"typeString": "int_const 9210...(30 digits omitted)...7637"
																	},
																	"value": "0x0454aaa8efe072e7f6ddbab84b40a55c5"
																},
																"src": "24745:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078303039363061616463313039653761336266343537383039393631353731316561",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24789:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12464977905455307901915658421775307242_by_1",
																	"typeString": "int_const 1246...(30 digits omitted)...7242"
																},
																"value": "0x00960aadc109e7a3bf4578099615711ea"
															},
															"src": "24745:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24739:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2141,
													"nodeType": "ExpressionStatement",
													"src": "24739:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2143,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "24864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030303030303030303030303030303030303030303030303030303030303030",
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24868:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_680564733841876926926749214863536422912_by_1",
																		"typeString": "int_const 6805...(31 digits omitted)...2912"
																	},
																	"value": "0x200000000000000000000000000000000"
																},
																"src": "24864:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2146,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24863:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24908:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24863:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "24859:137:0",
												"trueBody": {
													"expression": {
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2149,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "24911:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2150,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "24917:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078303039363061616463313039653761336266343537383039393631353731316437",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24923:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12464977905455307901915658421775307223_by_1",
																		"typeString": "int_const 1246...(30 digits omitted)...7223"
																	},
																	"value": "0x00960aadc109e7a3bf4578099615711d7"
																},
																"src": "24917:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078303030326266383432303832303466353937376639613863663031666463653364",
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24961:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_228304034072369565894155946646425149_by_1",
																	"typeString": "int_const 2283...(28 digits omitted)...5149"
																},
																"value": "0x0002bf84208204f5977f9a8cf01fdce3d"
															},
															"src": "24917:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24911:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2156,
													"nodeType": "ExpressionStatement",
													"src": "24911:85:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2158,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "25036:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030303030303030303030303030303030303030303030303030303030303030",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25040:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1361129467683753853853498429727072845824_by_1",
																		"typeString": "int_const 1361...(32 digits omitted)...5824"
																	},
																	"value": "0x400000000000000000000000000000000"
																},
																"src": "25036:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2161,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "25035:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25035:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2172,
												"nodeType": "IfStatement",
												"src": "25031:137:0",
												"trueBody": {
													"expression": {
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2164,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "25083:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2165,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "25089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3078303030326266383432303832303466353937376639613863663031666463333037",
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25095:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_228304034072369565894155946646422279_by_1",
																		"typeString": "int_const 2283...(28 digits omitted)...2279"
																	},
																	"value": "0x0002bf84208204f5977f9a8cf01fdc307"
																},
																"src": "25089:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3078303030303030336336616237373564643062393562346362656537653635643131",
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25133:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_76587471230661696290698490699025_by_1",
																	"typeString": "int_const 76587471230661696290698490699025"
																},
																"value": "0x0000003c6ab775dd0b95b4cbee7e65d11"
															},
															"src": "25089:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25083:85:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2171,
													"nodeType": "ExpressionStatement",
													"src": "25083:85:0"
												}
											},
											{
												"expression": {
													"id": 2173,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1775,
													"src": "25212:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 2174,
												"nodeType": "Return",
												"src": "25205:10:0"
											}
										]
									},
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "21325:676:0",
										"text": "Return e ^ (x / FIXED_1) * FIXED_1\nInput range: 0 <= x <= OPT_EXP_MAX_VAL - 1\nAuto-generated via 'PrintFunctionOptimalExp.py'\nDetailed description:\n- Rewrite the input as a sum of binary exponents and a single residual r, as small as possible\n- The exponentiation of each binary exponent is given (pre-calculated)\n- The exponentiation of r is calculated via Taylor series for e^x, where x = r\n- The exponentiation of the input is calculated by multiplying the intermediate results above\n- For example: e^5.021692859 = e^(4 + 1 + 0.5 + 0.021692859) = e^4 * e^1 * e^0.5 * e^0.021692859"
									},
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "optimalExp",
									"nameLocation": "22016:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "22035:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "22027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22026:11:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "22061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:9:0"
									},
									"scope": 2177,
									"src": "22007:3216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2178,
							"src": "700:24526:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:25193:0"
				},
				"id": 0
			},
			"Equation.sol": {
				"ast": {
					"absolutePath": "Equation.sol",
					"exportedSymbols": {
						"BancorPower": [
							2177
						],
						"Equation": [
							3398
						],
						"SafeMath": [
							3497
						]
					},
					"id": 3399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2179,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"id": 2180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3399,
							"sourceUnit": 3498,
							"src": "61:59:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BancorPower.sol",
							"file": "BancorPower.sol",
							"id": 2181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3399,
							"sourceUnit": 2178,
							"src": "122:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Equation",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3398,
							"linearizedBaseContracts": [
								3398
							],
							"name": "Equation",
							"nameLocation": "161:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2184,
									"libraryName": {
										"id": 2182,
										"name": "SafeMath",
										"nameLocations": [
											"181:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3497,
										"src": "181:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "175:27:1",
									"typeName": {
										"id": 2183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "194:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Equation.Node",
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "208:3352:1",
										"text": "An expression tree is encoded as a set of nodes, with root node having index zero. Each node has 3 values:\n  1. opcode: the expression that the node represents. See table below.\n +--------+----------------------------------------+------+------------+\n | Opcode |              Description               | i.e. | # children |\n +--------+----------------------------------------+------+------------+\n |   00   | Integer Constant                       |   c  |      0     |\n |   01   | Variable                               |   X  |      0     |\n |   02   | Arithmetic Square Root                 |   âˆš  |      1     |\n |   03   | Boolean Not Condition                  |   !  |      1     |\n |   04   | Arithmetic Addition                    |   +  |      2     |\n |   05   | Arithmetic Subtraction                 |   -  |      2     |\n |   06   | Arithmetic Multiplication              |   *  |      2     |\n |   07   | Arithmetic Division                    |   /  |      2     |\n |   08   | Arithmetic Exponentiation              |  **  |      2     |\n |   09   | Arithmetic Percentage* (see below)     |   %  |      2     |\n |   10   | Arithmetic Equal Comparison            |  ==  |      2     |\n |   11   | Arithmetic Non-Equal Comparison        |  !=  |      2     |\n |   12   | Arithmetic Less-Than Comparison        |  <   |      2     |\n |   13   | Arithmetic Greater-Than Comparison     |  >   |      2     |\n |   14   | Arithmetic Non-Greater-Than Comparison |  <=  |      2     |\n |   15   | Arithmetic Non-Less-Than Comparison    |  >=  |      2     |\n |   16   | Boolean And Condition                  |  &&  |      2     |\n |   17   | Boolean Or Condition                   |  ||  |      2     |\n |   18   | Ternary Operation                      |  ?:  |      3     |\n |   19   | Bancor's log** (see below)             |      |      3     |\n |   20   | Bancor's power*** (see below)          |      |      4     |\n +--------+----------------------------------------+------+------------+\n  2. children: the list of node indices of this node's sub-expressions. Different opcode nodes will have different\n     number of children.\n  3. value: the value inside the node. Currently this is only relevant for Integer Constant (Opcode 00).\n (*) Arithmetic percentage is computed by multiplying the left-hand side value with the right-hand side,\n     and divide the result by 10^18, rounded down to uint256 integer.\n (**) Using BancorFormula, the opcode computes log of fractional numbers. However, this fraction's value must\n     be more than 1. (baseN / baseD >= 1). The opcode takes 3 childrens(c, baseN, baseD), and computes\n     (c * log(baseN / baseD)) limitation is in range of 1 <= baseN / baseD <= 58774717541114375398436826861112283890\n     (= 1e76/FIXED_1), where FIXED_1 defined in BancorPower.sol\n (***) Using BancorFomula, the opcode computes exponential of fractional numbers. The opcode takes 4 children\n     (c,baseN,baseD,expV), and computes (c * ((baseN / baseD) ^ (expV / 1e6))). See implementation for the\n     limitation of the each value's domain. The end result must be in uint256 range."
									},
									"id": 2198,
									"members": [
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "opcode",
											"nameLocation": "3589:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3583:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2186,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3583:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2189,
											"mutability": "mutable",
											"name": "child0",
											"nameLocation": "3608:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3602:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2188,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3602:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2191,
											"mutability": "mutable",
											"name": "child1",
											"nameLocation": "3627:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3621:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2190,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3621:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2193,
											"mutability": "mutable",
											"name": "child2",
											"nameLocation": "3646:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3640:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2192,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3640:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2195,
											"mutability": "mutable",
											"name": "child3",
											"nameLocation": "3665:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3659:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2194,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3659:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2197,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3686:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 2198,
											"src": "3678:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Node",
									"nameLocation": "3571:4:1",
									"nodeType": "StructDefinition",
									"scope": 3398,
									"src": "3564:133:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Equation.ExprType",
									"id": 2202,
									"members": [
										{
											"id": 2199,
											"name": "Invalid",
											"nameLocation": "3719:7:1",
											"nodeType": "EnumValue",
											"src": "3719:7:1"
										},
										{
											"id": 2200,
											"name": "Math",
											"nameLocation": "3728:4:1",
											"nodeType": "EnumValue",
											"src": "3728:4:1"
										},
										{
											"id": 2201,
											"name": "Boolean",
											"nameLocation": "3734:7:1",
											"nodeType": "EnumValue",
											"src": "3734:7:1"
										}
									],
									"name": "ExprType",
									"nameLocation": "3708:8:1",
									"nodeType": "EnumDefinition",
									"src": "3703:40:1"
								},
								{
									"constant": true,
									"id": 2205,
									"mutability": "constant",
									"name": "OPCODE_CONST",
									"nameLocation": "3764:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3749:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2203,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3749:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3779:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2208,
									"mutability": "constant",
									"name": "OPCODE_VAR",
									"nameLocation": "3800:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3785:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2206,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3785:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3813:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2211,
									"mutability": "constant",
									"name": "OPCODE_SQRT",
									"nameLocation": "3834:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3819:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2209,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3819:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3848:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2214,
									"mutability": "constant",
									"name": "OPCODE_NOT",
									"nameLocation": "3869:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3854:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2212,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3854:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3882:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2217,
									"mutability": "constant",
									"name": "OPCODE_ADD",
									"nameLocation": "3903:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3888:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2215,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3888:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 2216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3916:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2220,
									"mutability": "constant",
									"name": "OPCODE_SUB",
									"nameLocation": "3937:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3922:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2218,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3922:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 2219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3950:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2223,
									"mutability": "constant",
									"name": "OPCODE_MUL",
									"nameLocation": "3971:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3956:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2221,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3956:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 2222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3984:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2226,
									"mutability": "constant",
									"name": "OPCODE_DIV",
									"nameLocation": "4005:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "3990:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2224,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3990:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 2225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4018:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2229,
									"mutability": "constant",
									"name": "OPCODE_EXP",
									"nameLocation": "4039:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4024:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2227,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4024:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 2228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4052:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2232,
									"mutability": "constant",
									"name": "OPCODE_PCT",
									"nameLocation": "4073:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4058:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2230,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4058:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 2231,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4086:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2235,
									"mutability": "constant",
									"name": "OPCODE_EQ",
									"nameLocation": "4107:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4092:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2233,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4092:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4119:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2238,
									"mutability": "constant",
									"name": "OPCODE_NE",
									"nameLocation": "4141:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4126:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2236,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4126:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 2237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4153:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2241,
									"mutability": "constant",
									"name": "OPCODE_LT",
									"nameLocation": "4175:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4160:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2239,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4160:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 2240,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4187:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2244,
									"mutability": "constant",
									"name": "OPCODE_GT",
									"nameLocation": "4209:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4194:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2242,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4194:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 2243,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4221:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2247,
									"mutability": "constant",
									"name": "OPCODE_LE",
									"nameLocation": "4243:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4228:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2245,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4228:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 2246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4255:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14_by_1",
											"typeString": "int_const 14"
										},
										"value": "14"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2250,
									"mutability": "constant",
									"name": "OPCODE_GE",
									"nameLocation": "4277:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4262:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2248,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4262:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4289:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2253,
									"mutability": "constant",
									"name": "OPCODE_AND",
									"nameLocation": "4311:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4296:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2251,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4296:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 2252,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4324:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2256,
									"mutability": "constant",
									"name": "OPCODE_OR",
									"nameLocation": "4346:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4331:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2254,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4331:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3137",
										"id": 2255,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4358:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "17"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2259,
									"mutability": "constant",
									"name": "OPCODE_IF",
									"nameLocation": "4380:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4365:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2257,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4365:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 2258,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4392:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2262,
									"mutability": "constant",
									"name": "OPCODE_BANCOR_LOG",
									"nameLocation": "4414:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4399:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2260,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4399:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3139",
										"id": 2261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4434:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19_by_1",
											"typeString": "int_const 19"
										},
										"value": "19"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2265,
									"mutability": "constant",
									"name": "OPCODE_BANCOR_POWER",
									"nameLocation": "4456:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4441:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2263,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4441:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2264,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4478:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2268,
									"mutability": "constant",
									"name": "OPCODE_INVALID",
									"nameLocation": "4500:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 3398,
									"src": "4485:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2266,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4485:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3231",
										"id": 2267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4517:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "21"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "4762:737:1",
										"statements": [
											{
												"documentation": "Init should only be called when the equation is not yet initialized.",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2280,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "4855:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																		"typeString": "struct Equation.Node storage ref[] storage pointer"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4860:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4855:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4870:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4855:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4847:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4847:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "4847:25:1"
											},
											{
												"documentation": "Limit expression length to < 256 to make sure gas cost is managable.",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2287,
																	"name": "_expressions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "4965:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4978:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4965:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "323536",
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4987:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "4965:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4957:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4957:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "4957:34:1"
											},
											{
												"body": {
													"id": 2349,
													"nodeType": "Block",
													"src": "5052:341:1",
													"statements": [
														{
															"assignments": [
																2305
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2305,
																	"mutability": "mutable",
																	"name": "opcode",
																	"nameLocation": "5069:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2349,
																	"src": "5061:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5061:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2309,
															"initialValue": {
																"baseExpression": {
																	"id": 2306,
																	"name": "_expressions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "5078:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2308,
																"indexExpression": {
																	"id": 2307,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "5091:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5078:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5061:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2311,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "5112:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2312,
																			"name": "OPCODE_INVALID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2268,
																			"src": "5121:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5112:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2310,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5104:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5104:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2315,
															"nodeType": "ExpressionStatement",
															"src": "5104:32:1"
														},
														{
															"assignments": [
																2318
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2318,
																	"mutability": "mutable",
																	"name": "node",
																	"nameLocation": "5157:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2349,
																	"src": "5145:16:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Node_$2198_memory_ptr",
																		"typeString": "struct Equation.Node"
																	},
																	"typeName": {
																		"id": 2317,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2316,
																			"name": "Node",
																			"nameLocations": [
																				"5145:4:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2198,
																			"src": "5145:4:1"
																		},
																		"referencedDeclaration": 2198,
																		"src": "5145:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																			"typeString": "struct Equation.Node"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2319,
															"nodeType": "VariableDeclarationStatement",
															"src": "5145:16:1"
														},
														{
															"expression": {
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2320,
																		"name": "node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2318,
																		"src": "5170:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Node_$2198_memory_ptr",
																			"typeString": "struct Equation.Node memory"
																		}
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5175:6:1",
																	"memberName": "opcode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2187,
																	"src": "5170:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "5190:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5184:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 2323,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5184:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5184:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5170:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2328,
															"nodeType": "ExpressionStatement",
															"src": "5170:27:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2329,
																	"name": "opcode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "5285:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2330,
																	"name": "OPCODE_CONST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "5295:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5285:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"documentation": "Get the node's value. Only applicable on Integer Constant case.",
															"id": 2342,
															"nodeType": "IfStatement",
															"src": "5281:81:1",
															"trueBody": {
																"id": 2341,
																"nodeType": "Block",
																"src": "5309:53:1",
																"statements": [
																	{
																		"expression": {
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2332,
																					"name": "node",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "5320:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Node_$2198_memory_ptr",
																						"typeString": "struct Equation.Node memory"
																					}
																				},
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "5325:5:1",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2197,
																				"src": "5320:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2335,
																					"name": "_expressions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "5333:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 2338,
																				"indexExpression": {
																					"id": 2337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": true,
																					"src": "5346:5:1",
																					"subExpression": {
																						"id": 2336,
																						"name": "idx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2294,
																						"src": "5348:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5333:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5320:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2340,
																		"nodeType": "ExpressionStatement",
																		"src": "5320:32:1"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2346,
																		"name": "node",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2318,
																		"src": "5380:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Node_$2198_memory_ptr",
																			"typeString": "struct Equation.Node memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Node_$2198_memory_ptr",
																			"typeString": "struct Equation.Node memory"
																		}
																	],
																	"expression": {
																		"id": 2343,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "5370:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																			"typeString": "struct Equation.Node storage ref[] storage pointer"
																		}
																	},
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5375:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5370:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_struct$_Node_$2198_storage_$returns$__$attached_to$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Equation.Node storage ref[] storage pointer,struct Equation.Node storage ref)"
																	}
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5370:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "5370:15:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2297,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2294,
														"src": "5018:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2298,
															"name": "_expressions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "5024:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5024:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5018:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2350,
												"initializationExpression": {
													"assignments": [
														2294
													],
													"declarations": [
														{
															"constant": false,
															"id": 2294,
															"mutability": "mutable",
															"name": "idx",
															"nameLocation": "5009:3:1",
															"nodeType": "VariableDeclaration",
															"scope": 2350,
															"src": "5003:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2293,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2296,
													"initialValue": {
														"hexValue": "30",
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5015:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5003:13:1"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5045:5:1",
														"subExpression": {
															"id": 2301,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "5047:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2303,
													"nodeType": "ExpressionStatement",
													"src": "5045:5:1"
												},
												"nodeType": "ForStatement",
												"src": "4998:395:1"
											},
											{
												"assignments": [
													2352,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "lastNodeIndex",
														"nameLocation": "5406:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "5400:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2351,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5400:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2357,
												"initialValue": {
													"arguments": [
														{
															"id": 2354,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "5437:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																"typeString": "struct Equation.Node storage ref[] storage pointer"
															}
														},
														{
															"hexValue": "30",
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5443:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																"typeString": "struct Equation.Node storage ref[] storage pointer"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2353,
														"name": "populateTree",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "5424:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$returns$_t_uint8_$_t_enum$_ExprType_$2202_$",
															"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8) returns (uint8,enum Equation.ExprType)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5424:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_enum$_ExprType_$2202_$",
														"typeString": "tuple(uint8,enum Equation.ExprType)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5399:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2359,
																"name": "lastNodeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "5460:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2360,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "5477:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																			"typeString": "struct Equation.Node storage ref[] storage pointer"
																		}
																	},
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5482:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5477:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5491:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5477:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5460:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5452:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5452:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "5452:41:1"
											}
										]
									},
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "4526:155:1",
										"text": "@dev Initialize equation by array of opcodes/values in prefix order. Array\n is read as if it is the *pre-order* traversal of the expression tree."
									},
									"functionSelector": "8e501fc7",
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "4694:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4714:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "4699:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
													"typeString": "struct Equation.Node[]"
												},
												"typeName": {
													"baseType": {
														"id": 2271,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2270,
															"name": "Node",
															"nameLocations": [
																"4699:4:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2198,
															"src": "4699:4:1"
														},
														"referencedDeclaration": 2198,
														"src": "4699:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														}
													},
													"id": 2272,
													"nodeType": "ArrayTypeName",
													"src": "4699:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
														"typeString": "struct Equation.Node[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "_expressions",
												"nameLocation": "4739:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "4720:31:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2274,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4720:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2275,
													"nodeType": "ArrayTypeName",
													"src": "4720:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4698:54:1"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4762:0:1"
									},
									"scope": 3398,
									"src": "4685:814:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "5664:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2381,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "5688:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																"typeString": "struct Equation.Node storage ref[] storage pointer"
															}
														},
														{
															"hexValue": "30",
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5694:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2383,
															"name": "xValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "5697:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																"typeString": "struct Equation.Node storage ref[] storage pointer"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2380,
														"name": "solveMath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3194,
														"src": "5678:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5678:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2379,
												"id": 2385,
												"nodeType": "Return",
												"src": "5671:33:1"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "5505:67:1",
										"text": "Calculate the Y position from the X position for this equation."
									},
									"functionSelector": "4dec36e3",
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculate",
									"nameLocation": "5585:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "5610:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "5595:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
													"typeString": "struct Equation.Node[]"
												},
												"typeName": {
													"baseType": {
														"id": 2371,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2370,
															"name": "Node",
															"nameLocations": [
																"5595:4:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2198,
															"src": "5595:4:1"
														},
														"referencedDeclaration": 2198,
														"src": "5595:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														}
													},
													"id": 2372,
													"nodeType": "ArrayTypeName",
													"src": "5595:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
														"typeString": "struct Equation.Node[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "xValue",
												"nameLocation": "5624:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "5616:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5594:37:1"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "5655:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:9:1"
									},
									"scope": 3398,
									"src": "5576:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "5849:321:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2395,
														"name": "opcode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "5860:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2396,
														"name": "OPCODE_VAR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "5870:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5860:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2401,
															"name": "opcode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "5917:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2402,
															"name": "OPCODE_NOT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "5927:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5917:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2407,
																"name": "opcode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "5974:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2408,
																"name": "OPCODE_OR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "5984:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "5974:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2413,
																	"name": "opcode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "6030:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2414,
																	"name": "OPCODE_BANCOR_LOG",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "6040:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6030:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2419,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "6094:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2420,
																		"name": "OPCODE_BANCOR_POWER",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2265,
																		"src": "6104:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6094:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2425,
																"nodeType": "IfStatement",
																"src": "6090:60:1",
																"trueBody": {
																	"id": 2424,
																	"nodeType": "Block",
																	"src": "6125:25:1",
																	"statements": [
																		{
																			"expression": {
																				"hexValue": "34",
																				"id": 2422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6141:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"functionReturnParameters": 2394,
																			"id": 2423,
																			"nodeType": "Return",
																			"src": "6134:8:1"
																		}
																	]
																}
															},
															"id": 2426,
															"nodeType": "IfStatement",
															"src": "6026:124:1",
															"trueBody": {
																"id": 2418,
																"nodeType": "Block",
																"src": "6059:25:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "33",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"functionReturnParameters": 2394,
																		"id": 2417,
																		"nodeType": "Return",
																		"src": "6068:8:1"
																	}
																]
															}
														},
														"id": 2427,
														"nodeType": "IfStatement",
														"src": "5970:180:1",
														"trueBody": {
															"id": 2412,
															"nodeType": "Block",
															"src": "5995:25:1",
															"statements": [
																{
																	"expression": {
																		"hexValue": "32",
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"functionReturnParameters": 2394,
																	"id": 2411,
																	"nodeType": "Return",
																	"src": "6004:8:1"
																}
															]
														}
													},
													"id": 2428,
													"nodeType": "IfStatement",
													"src": "5913:237:1",
													"trueBody": {
														"id": 2406,
														"nodeType": "Block",
														"src": "5939:25:1",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5955:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 2394,
																"id": 2405,
																"nodeType": "Return",
																"src": "5948:8:1"
															}
														]
													}
												},
												"id": 2429,
												"nodeType": "IfStatement",
												"src": "5856:294:1",
												"trueBody": {
													"id": 2400,
													"nodeType": "Block",
													"src": "5882:25:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5898:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2394,
															"id": 2399,
															"nodeType": "Return",
															"src": "5891:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2430,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6156:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "6156:8:1"
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "5716:60:1",
										"text": "Return the number of children the given opcode node has."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChildrenCount",
									"nameLocation": "5789:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "opcode",
												"nameLocation": "5812:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "5806:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2389,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5806:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5805:14:1"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "5842:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2392,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5842:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5841:7:1"
									},
									"scope": 3398,
									"src": "5780:390:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "6371:1515:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2447,
														"name": "opcode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "6382:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2448,
														"name": "OPCODE_VAR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "6392:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6382:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2454,
															"name": "opcode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "6451:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2455,
															"name": "OPCODE_SQRT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "6461:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "6451:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2470,
																"name": "opcode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2437,
																"src": "6564:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2471,
																"name": "OPCODE_NOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "6574:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "6564:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2486,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "6682:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2487,
																		"name": "OPCODE_ADD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "6692:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6682:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2489,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "6706:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2490,
																		"name": "OPCODE_PCT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "6716:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6706:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6682:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2515,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "6861:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2516,
																			"name": "OPCODE_EQ",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "6871:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "6861:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2518,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "6884:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2519,
																			"name": "OPCODE_GE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "6894:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "6884:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6861:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2544,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2437,
																				"src": "7041:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 2545,
																				"name": "OPCODE_AND",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2253,
																				"src": "7051:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "7041:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2547,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2437,
																				"src": "7065:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 2548,
																				"name": "OPCODE_OR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2256,
																				"src": "7075:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "7065:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "7041:43:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2573,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2437,
																				"src": "7228:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2574,
																				"name": "OPCODE_IF",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2259,
																				"src": "7238:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "7228:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2609,
																					"name": "opcode",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2437,
																					"src": "7421:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2610,
																					"name": "OPCODE_BANCOR_LOG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "7431:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "7421:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2645,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2643,
																						"name": "opcode",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2437,
																						"src": "7626:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 2644,
																						"name": "OPCODE_BANCOR_POWER",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2265,
																						"src": "7636:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "7626:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2686,
																				"nodeType": "IfStatement",
																				"src": "7622:244:1",
																				"trueBody": {
																					"id": 2685,
																					"nodeType": "Block",
																					"src": "7657:209:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										},
																										"id": 2652,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"baseExpression": {
																												"id": 2647,
																												"name": "types",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2441,
																												"src": "7674:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																													"typeString": "enum Equation.ExprType[] memory"
																												}
																											},
																											"id": 2649,
																											"indexExpression": {
																												"hexValue": "30",
																												"id": 2648,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7680:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7674:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "==",
																										"rightExpression": {
																											"expression": {
																												"id": 2650,
																												"name": "ExprType",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2202,
																												"src": "7686:8:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																													"typeString": "type(enum Equation.ExprType)"
																												}
																											},
																											"id": 2651,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "7695:4:1",
																											"memberName": "Math",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2200,
																											"src": "7686:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"src": "7674:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									],
																									"id": 2646,
																									"name": "require",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967278,
																										4294967278
																									],
																									"referencedDeclaration": 4294967278,
																									"src": "7666:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																										"typeString": "function (bool) pure"
																									}
																								},
																								"id": 2653,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7666:34:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2654,
																							"nodeType": "ExpressionStatement",
																							"src": "7666:34:1"
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										},
																										"id": 2661,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"baseExpression": {
																												"id": 2656,
																												"name": "types",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2441,
																												"src": "7717:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																													"typeString": "enum Equation.ExprType[] memory"
																												}
																											},
																											"id": 2658,
																											"indexExpression": {
																												"hexValue": "31",
																												"id": 2657,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7723:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7717:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "==",
																										"rightExpression": {
																											"expression": {
																												"id": 2659,
																												"name": "ExprType",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2202,
																												"src": "7729:8:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																													"typeString": "type(enum Equation.ExprType)"
																												}
																											},
																											"id": 2660,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "7738:4:1",
																											"memberName": "Math",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2200,
																											"src": "7729:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"src": "7717:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									],
																									"id": 2655,
																									"name": "require",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967278,
																										4294967278
																									],
																									"referencedDeclaration": 4294967278,
																									"src": "7709:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																										"typeString": "function (bool) pure"
																									}
																								},
																								"id": 2662,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7709:34:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2663,
																							"nodeType": "ExpressionStatement",
																							"src": "7709:34:1"
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										},
																										"id": 2670,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"baseExpression": {
																												"id": 2665,
																												"name": "types",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2441,
																												"src": "7760:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																													"typeString": "enum Equation.ExprType[] memory"
																												}
																											},
																											"id": 2667,
																											"indexExpression": {
																												"hexValue": "32",
																												"id": 2666,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7766:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7760:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "==",
																										"rightExpression": {
																											"expression": {
																												"id": 2668,
																												"name": "ExprType",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2202,
																												"src": "7772:8:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																													"typeString": "type(enum Equation.ExprType)"
																												}
																											},
																											"id": 2669,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "7781:4:1",
																											"memberName": "Math",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2200,
																											"src": "7772:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"src": "7760:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									],
																									"id": 2664,
																									"name": "require",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967278,
																										4294967278
																									],
																									"referencedDeclaration": 4294967278,
																									"src": "7752:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																										"typeString": "function (bool) pure"
																									}
																								},
																								"id": 2671,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7752:34:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2672,
																							"nodeType": "ExpressionStatement",
																							"src": "7752:34:1"
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										},
																										"id": 2679,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"baseExpression": {
																												"id": 2674,
																												"name": "types",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2441,
																												"src": "7803:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																													"typeString": "enum Equation.ExprType[] memory"
																												}
																											},
																											"id": 2676,
																											"indexExpression": {
																												"hexValue": "33",
																												"id": 2675,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7809:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_3_by_1",
																													"typeString": "int_const 3"
																												},
																												"value": "3"
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7803:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "==",
																										"rightExpression": {
																											"expression": {
																												"id": 2677,
																												"name": "ExprType",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2202,
																												"src": "7815:8:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																													"typeString": "type(enum Equation.ExprType)"
																												}
																											},
																											"id": 2678,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "7824:4:1",
																											"memberName": "Math",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2200,
																											"src": "7815:13:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_enum$_ExprType_$2202",
																												"typeString": "enum Equation.ExprType"
																											}
																										},
																										"src": "7803:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									],
																									"id": 2673,
																									"name": "require",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967278,
																										4294967278
																									],
																									"referencedDeclaration": 4294967278,
																									"src": "7795:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																										"typeString": "function (bool) pure"
																									}
																								},
																								"id": 2680,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7795:34:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2681,
																							"nodeType": "ExpressionStatement",
																							"src": "7795:34:1"
																						},
																						{
																							"expression": {
																								"expression": {
																									"id": 2682,
																									"name": "ExprType",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2202,
																									"src": "7845:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																										"typeString": "type(enum Equation.ExprType)"
																									}
																								},
																								"id": 2683,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "7854:4:1",
																								"memberName": "Math",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2200,
																								"src": "7845:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								}
																							},
																							"functionReturnParameters": 2446,
																							"id": 2684,
																							"nodeType": "Return",
																							"src": "7838:20:1"
																						}
																					]
																				}
																			},
																			"id": 2687,
																			"nodeType": "IfStatement",
																			"src": "7417:449:1",
																			"trueBody": {
																				"id": 2642,
																				"nodeType": "Block",
																				"src": "7450:166:1",
																				"statements": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									},
																									"id": 2618,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"baseExpression": {
																											"id": 2613,
																											"name": "types",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2441,
																											"src": "7467:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																												"typeString": "enum Equation.ExprType[] memory"
																											}
																										},
																										"id": 2615,
																										"indexExpression": {
																											"hexValue": "30",
																											"id": 2614,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7473:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7467:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"expression": {
																											"id": 2616,
																											"name": "ExprType",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2202,
																											"src": "7479:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																												"typeString": "type(enum Equation.ExprType)"
																											}
																										},
																										"id": 2617,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"memberLocation": "7488:4:1",
																										"memberName": "Math",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2200,
																										"src": "7479:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"src": "7467:25:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								],
																								"id": 2612,
																								"name": "require",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967278,
																									4294967278
																								],
																								"referencedDeclaration": 4294967278,
																								"src": "7459:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																									"typeString": "function (bool) pure"
																								}
																							},
																							"id": 2619,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7459:34:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2620,
																						"nodeType": "ExpressionStatement",
																						"src": "7459:34:1"
																					},
																					{
																						"expression": {
																							"arguments": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									},
																									"id": 2627,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"baseExpression": {
																											"id": 2622,
																											"name": "types",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2441,
																											"src": "7510:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																												"typeString": "enum Equation.ExprType[] memory"
																											}
																										},
																										"id": 2624,
																										"indexExpression": {
																											"hexValue": "31",
																											"id": 2623,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7516:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7510:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"expression": {
																											"id": 2625,
																											"name": "ExprType",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2202,
																											"src": "7522:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																												"typeString": "type(enum Equation.ExprType)"
																											}
																										},
																										"id": 2626,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"memberLocation": "7531:4:1",
																										"memberName": "Math",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2200,
																										"src": "7522:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"src": "7510:25:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								],
																								"id": 2621,
																								"name": "require",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967278,
																									4294967278
																								],
																								"referencedDeclaration": 4294967278,
																								"src": "7502:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																									"typeString": "function (bool) pure"
																								}
																							},
																							"id": 2628,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7502:34:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2629,
																						"nodeType": "ExpressionStatement",
																						"src": "7502:34:1"
																					},
																					{
																						"expression": {
																							"arguments": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									},
																									"id": 2636,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"baseExpression": {
																											"id": 2631,
																											"name": "types",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2441,
																											"src": "7553:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																												"typeString": "enum Equation.ExprType[] memory"
																											}
																										},
																										"id": 2633,
																										"indexExpression": {
																											"hexValue": "32",
																											"id": 2632,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7559:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7553:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"expression": {
																											"id": 2634,
																											"name": "ExprType",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2202,
																											"src": "7565:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																												"typeString": "type(enum Equation.ExprType)"
																											}
																										},
																										"id": 2635,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"memberLocation": "7574:4:1",
																										"memberName": "Math",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2200,
																										"src": "7565:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_enum$_ExprType_$2202",
																											"typeString": "enum Equation.ExprType"
																										}
																									},
																									"src": "7553:25:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								],
																								"id": 2630,
																								"name": "require",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967278,
																									4294967278
																								],
																								"referencedDeclaration": 4294967278,
																								"src": "7545:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																									"typeString": "function (bool) pure"
																								}
																							},
																							"id": 2637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7545:34:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2638,
																						"nodeType": "ExpressionStatement",
																						"src": "7545:34:1"
																					},
																					{
																						"expression": {
																							"expression": {
																								"id": 2639,
																								"name": "ExprType",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2202,
																								"src": "7595:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																									"typeString": "type(enum Equation.ExprType)"
																								}
																							},
																							"id": 2640,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "7604:4:1",
																							"memberName": "Math",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2200,
																							"src": "7595:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							}
																						},
																						"functionReturnParameters": 2446,
																						"id": 2641,
																						"nodeType": "Return",
																						"src": "7588:20:1"
																					}
																				]
																			}
																		},
																		"id": 2688,
																		"nodeType": "IfStatement",
																		"src": "7224:642:1",
																		"trueBody": {
																			"id": 2608,
																			"nodeType": "Block",
																			"src": "7249:162:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								},
																								"id": 2582,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"baseExpression": {
																										"id": 2577,
																										"name": "types",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2441,
																										"src": "7266:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																											"typeString": "enum Equation.ExprType[] memory"
																										}
																									},
																									"id": 2579,
																									"indexExpression": {
																										"hexValue": "30",
																										"id": 2578,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7272:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7266:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2580,
																										"name": "ExprType",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2202,
																										"src": "7278:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																											"typeString": "type(enum Equation.ExprType)"
																										}
																									},
																									"id": 2581,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "7287:7:1",
																									"memberName": "Boolean",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2201,
																									"src": "7278:16:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"src": "7266:28:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 2576,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "7258:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																								"typeString": "function (bool) pure"
																							}
																						},
																						"id": 2583,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7258:37:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2584,
																					"nodeType": "ExpressionStatement",
																					"src": "7258:37:1"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								},
																								"id": 2591,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"baseExpression": {
																										"id": 2586,
																										"name": "types",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2441,
																										"src": "7312:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																											"typeString": "enum Equation.ExprType[] memory"
																										}
																									},
																									"id": 2588,
																									"indexExpression": {
																										"hexValue": "31",
																										"id": 2587,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7318:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7312:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "!=",
																								"rightExpression": {
																									"expression": {
																										"id": 2589,
																										"name": "ExprType",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2202,
																										"src": "7324:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																											"typeString": "type(enum Equation.ExprType)"
																										}
																									},
																									"id": 2590,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "7333:7:1",
																									"memberName": "Invalid",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2199,
																									"src": "7324:16:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"src": "7312:28:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 2585,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "7304:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																								"typeString": "function (bool) pure"
																							}
																						},
																						"id": 2592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7304:37:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2593,
																					"nodeType": "ExpressionStatement",
																					"src": "7304:37:1"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								},
																								"id": 2601,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"baseExpression": {
																										"id": 2595,
																										"name": "types",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2441,
																										"src": "7358:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																											"typeString": "enum Equation.ExprType[] memory"
																										}
																									},
																									"id": 2597,
																									"indexExpression": {
																										"hexValue": "31",
																										"id": 2596,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7364:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7358:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"baseExpression": {
																										"id": 2598,
																										"name": "types",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2441,
																										"src": "7370:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																											"typeString": "enum Equation.ExprType[] memory"
																										}
																									},
																									"id": 2600,
																									"indexExpression": {
																										"hexValue": "32",
																										"id": 2599,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "7376:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7370:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_ExprType_$2202",
																										"typeString": "enum Equation.ExprType"
																									}
																								},
																								"src": "7358:20:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 2594,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "7350:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																								"typeString": "function (bool) pure"
																							}
																						},
																						"id": 2602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7350:29:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2603,
																					"nodeType": "ExpressionStatement",
																					"src": "7350:29:1"
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2604,
																							"name": "types",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2441,
																							"src": "7395:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																								"typeString": "enum Equation.ExprType[] memory"
																							}
																						},
																						"id": 2606,
																						"indexExpression": {
																							"hexValue": "31",
																							"id": 2605,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7401:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7395:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						}
																					},
																					"functionReturnParameters": 2446,
																					"id": 2607,
																					"nodeType": "Return",
																					"src": "7388:15:1"
																				}
																			]
																		}
																	},
																	"id": 2689,
																	"nodeType": "IfStatement",
																	"src": "7037:829:1",
																	"trueBody": {
																		"id": 2572,
																		"nodeType": "Block",
																		"src": "7086:132:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							},
																							"id": 2557,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 2552,
																									"name": "types",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2441,
																									"src": "7103:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																										"typeString": "enum Equation.ExprType[] memory"
																									}
																								},
																								"id": 2554,
																								"indexExpression": {
																									"hexValue": "30",
																									"id": 2553,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7109:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7103:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 2555,
																									"name": "ExprType",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2202,
																									"src": "7115:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																										"typeString": "type(enum Equation.ExprType)"
																									}
																								},
																								"id": 2556,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "7124:7:1",
																								"memberName": "Boolean",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2201,
																								"src": "7115:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								}
																							},
																							"src": "7103:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 2551,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "7095:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 2558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7095:37:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2559,
																				"nodeType": "ExpressionStatement",
																				"src": "7095:37:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							},
																							"id": 2566,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 2561,
																									"name": "types",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2441,
																									"src": "7149:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																										"typeString": "enum Equation.ExprType[] memory"
																									}
																								},
																								"id": 2563,
																								"indexExpression": {
																									"hexValue": "31",
																									"id": 2562,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7155:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7149:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 2564,
																									"name": "ExprType",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2202,
																									"src": "7161:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																										"typeString": "type(enum Equation.ExprType)"
																									}
																								},
																								"id": 2565,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "7170:7:1",
																								"memberName": "Boolean",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2201,
																								"src": "7161:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_ExprType_$2202",
																									"typeString": "enum Equation.ExprType"
																								}
																							},
																							"src": "7149:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 2560,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "7141:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 2567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7141:37:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2568,
																				"nodeType": "ExpressionStatement",
																				"src": "7141:37:1"
																			},
																			{
																				"expression": {
																					"expression": {
																						"id": 2569,
																						"name": "ExprType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2202,
																						"src": "7194:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																							"typeString": "type(enum Equation.ExprType)"
																						}
																					},
																					"id": 2570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "7203:7:1",
																					"memberName": "Boolean",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2201,
																					"src": "7194:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_ExprType_$2202",
																						"typeString": "enum Equation.ExprType"
																					}
																				},
																				"functionReturnParameters": 2446,
																				"id": 2571,
																				"nodeType": "Return",
																				"src": "7187:23:1"
																			}
																		]
																	}
																},
																"id": 2690,
																"nodeType": "IfStatement",
																"src": "6857:1009:1",
																"trueBody": {
																	"id": 2543,
																	"nodeType": "Block",
																	"src": "6905:126:1",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						},
																						"id": 2528,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 2523,
																								"name": "types",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2441,
																								"src": "6922:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																									"typeString": "enum Equation.ExprType[] memory"
																								}
																							},
																							"id": 2525,
																							"indexExpression": {
																								"hexValue": "30",
																								"id": 2524,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6928:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6922:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 2526,
																								"name": "ExprType",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2202,
																								"src": "6934:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																									"typeString": "type(enum Equation.ExprType)"
																								}
																							},
																							"id": 2527,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "6943:4:1",
																							"memberName": "Math",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2200,
																							"src": "6934:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							}
																						},
																						"src": "6922:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 2522,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "6914:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 2529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6914:34:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2530,
																			"nodeType": "ExpressionStatement",
																			"src": "6914:34:1"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						},
																						"id": 2537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 2532,
																								"name": "types",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2441,
																								"src": "6965:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																									"typeString": "enum Equation.ExprType[] memory"
																								}
																							},
																							"id": 2534,
																							"indexExpression": {
																								"hexValue": "31",
																								"id": 2533,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6971:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6965:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 2535,
																								"name": "ExprType",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2202,
																								"src": "6977:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																									"typeString": "type(enum Equation.ExprType)"
																								}
																							},
																							"id": 2536,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "6986:4:1",
																							"memberName": "Math",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2200,
																							"src": "6977:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_ExprType_$2202",
																								"typeString": "enum Equation.ExprType"
																							}
																						},
																						"src": "6965:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 2531,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "6957:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 2538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6957:34:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2539,
																			"nodeType": "ExpressionStatement",
																			"src": "6957:34:1"
																		},
																		{
																			"expression": {
																				"expression": {
																					"id": 2540,
																					"name": "ExprType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2202,
																					"src": "7007:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																						"typeString": "type(enum Equation.ExprType)"
																					}
																				},
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7016:7:1",
																				"memberName": "Boolean",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2201,
																				"src": "7007:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_ExprType_$2202",
																					"typeString": "enum Equation.ExprType"
																				}
																			},
																			"functionReturnParameters": 2446,
																			"id": 2542,
																			"nodeType": "Return",
																			"src": "7000:23:1"
																		}
																	]
																}
															},
															"id": 2691,
															"nodeType": "IfStatement",
															"src": "6678:1188:1",
															"trueBody": {
																"id": 2514,
																"nodeType": "Block",
																"src": "6728:123:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_ExprType_$2202",
																						"typeString": "enum Equation.ExprType"
																					},
																					"id": 2499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 2494,
																							"name": "types",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2441,
																							"src": "6745:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																								"typeString": "enum Equation.ExprType[] memory"
																							}
																						},
																						"id": 2496,
																						"indexExpression": {
																							"hexValue": "30",
																							"id": 2495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6751:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6745:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 2497,
																							"name": "ExprType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2202,
																							"src": "6757:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																								"typeString": "type(enum Equation.ExprType)"
																							}
																						},
																						"id": 2498,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6766:4:1",
																						"memberName": "Math",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2200,
																						"src": "6757:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						}
																					},
																					"src": "6745:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 2493,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6737:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6737:34:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2501,
																		"nodeType": "ExpressionStatement",
																		"src": "6737:34:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_ExprType_$2202",
																						"typeString": "enum Equation.ExprType"
																					},
																					"id": 2508,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 2503,
																							"name": "types",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2441,
																							"src": "6788:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																								"typeString": "enum Equation.ExprType[] memory"
																							}
																						},
																						"id": 2505,
																						"indexExpression": {
																							"hexValue": "31",
																							"id": 2504,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6794:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6788:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 2506,
																							"name": "ExprType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2202,
																							"src": "6800:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																								"typeString": "type(enum Equation.ExprType)"
																							}
																						},
																						"id": 2507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6809:4:1",
																						"memberName": "Math",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2200,
																						"src": "6800:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_ExprType_$2202",
																							"typeString": "enum Equation.ExprType"
																						}
																					},
																					"src": "6788:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 2502,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6780:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6780:34:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2510,
																		"nodeType": "ExpressionStatement",
																		"src": "6780:34:1"
																	},
																	{
																		"expression": {
																			"expression": {
																				"id": 2511,
																				"name": "ExprType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2202,
																				"src": "6830:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																					"typeString": "type(enum Equation.ExprType)"
																				}
																			},
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6839:4:1",
																			"memberName": "Math",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2200,
																			"src": "6830:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_ExprType_$2202",
																				"typeString": "enum Equation.ExprType"
																			}
																		},
																		"functionReturnParameters": 2446,
																		"id": 2513,
																		"nodeType": "Return",
																		"src": "6823:20:1"
																	}
																]
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "6560:1306:1",
														"trueBody": {
															"id": 2485,
															"nodeType": "Block",
															"src": "6586:86:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_enum$_ExprType_$2202",
																					"typeString": "enum Equation.ExprType"
																				},
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2474,
																						"name": "types",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2441,
																						"src": "6603:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																							"typeString": "enum Equation.ExprType[] memory"
																						}
																					},
																					"id": 2476,
																					"indexExpression": {
																						"hexValue": "30",
																						"id": 2475,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6609:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6603:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_ExprType_$2202",
																						"typeString": "enum Equation.ExprType"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2477,
																						"name": "ExprType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2202,
																						"src": "6615:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																							"typeString": "type(enum Equation.ExprType)"
																						}
																					},
																					"id": 2478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "6624:7:1",
																					"memberName": "Boolean",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2201,
																					"src": "6615:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_ExprType_$2202",
																						"typeString": "enum Equation.ExprType"
																					}
																				},
																				"src": "6603:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 2473,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "6595:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6595:37:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "6595:37:1"
																},
																{
																	"expression": {
																		"expression": {
																			"id": 2482,
																			"name": "ExprType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "6648:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																				"typeString": "type(enum Equation.ExprType)"
																			}
																		},
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6657:7:1",
																		"memberName": "Boolean",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2201,
																		"src": "6648:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_ExprType_$2202",
																			"typeString": "enum Equation.ExprType"
																		}
																	},
																	"functionReturnParameters": 2446,
																	"id": 2484,
																	"nodeType": "Return",
																	"src": "6641:23:1"
																}
															]
														}
													},
													"id": 2693,
													"nodeType": "IfStatement",
													"src": "6447:1419:1",
													"trueBody": {
														"id": 2469,
														"nodeType": "Block",
														"src": "6474:80:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_enum$_ExprType_$2202",
																				"typeString": "enum Equation.ExprType"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2458,
																					"name": "types",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2441,
																					"src": "6491:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																						"typeString": "enum Equation.ExprType[] memory"
																					}
																				},
																				"id": 2460,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 2459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6497:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6491:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_ExprType_$2202",
																					"typeString": "enum Equation.ExprType"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2461,
																					"name": "ExprType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2202,
																					"src": "6503:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																						"typeString": "type(enum Equation.ExprType)"
																					}
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "6512:4:1",
																				"memberName": "Math",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2200,
																				"src": "6503:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_ExprType_$2202",
																					"typeString": "enum Equation.ExprType"
																				}
																			},
																			"src": "6491:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2457,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "6483:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6483:34:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2465,
																"nodeType": "ExpressionStatement",
																"src": "6483:34:1"
															},
															{
																"expression": {
																	"expression": {
																		"id": 2466,
																		"name": "ExprType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2202,
																		"src": "6533:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																			"typeString": "type(enum Equation.ExprType)"
																		}
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6542:4:1",
																	"memberName": "Math",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2200,
																	"src": "6533:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ExprType_$2202",
																		"typeString": "enum Equation.ExprType"
																	}
																},
																"functionReturnParameters": 2446,
																"id": 2468,
																"nodeType": "Return",
																"src": "6526:20:1"
															}
														]
													}
												},
												"id": 2694,
												"nodeType": "IfStatement",
												"src": "6378:1488:1",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "6404:37:1",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 2450,
																	"name": "ExprType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "6420:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ExprType_$2202_$",
																		"typeString": "type(enum Equation.ExprType)"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6429:4:1",
																"memberName": "Math",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2200,
																"src": "6420:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ExprType_$2202",
																	"typeString": "enum Equation.ExprType"
																}
															},
															"functionReturnParameters": 2446,
															"id": 2452,
															"nodeType": "Return",
															"src": "6413:20:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2695,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "7872:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7872:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "7872:8:1"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "6176:89:1",
										"text": "Check whether the given opcode and list of expression types match. Revert on failure."
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkExprType",
									"nameLocation": "6278:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "opcode",
												"nameLocation": "6298:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "6292:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2436,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6292:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "types",
												"nameLocation": "6324:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "6306:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
													"typeString": "enum Equation.ExprType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2439,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2438,
															"name": "ExprType",
															"nameLocations": [
																"6306:8:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2202,
															"src": "6306:8:1"
														},
														"referencedDeclaration": 2202,
														"src": "6306:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ExprType_$2202",
															"typeString": "enum Equation.ExprType"
														}
													},
													"id": 2440,
													"nodeType": "ArrayTypeName",
													"src": "6306:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_storage_ptr",
														"typeString": "enum Equation.ExprType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6291:39:1"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "6358:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ExprType_$2202",
													"typeString": "enum Equation.ExprType"
												},
												"typeName": {
													"id": 2444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2443,
														"name": "ExprType",
														"nameLocations": [
															"6358:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2202,
														"src": "6358:8:1"
													},
													"referencedDeclaration": 2202,
													"src": "6358:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ExprType_$2202",
														"typeString": "enum Equation.ExprType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6357:10:1"
									},
									"scope": 3398,
									"src": "6269:1617:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "8523:787:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2715,
																"name": "currentNodeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2706,
																"src": "8538:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2716,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2704,
																	"src": "8557:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																		"typeString": "struct Equation.Node storage ref[] storage pointer"
																	}
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8562:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8557:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8538:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8530:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "8530:39:1"
											},
											{
												"assignments": [
													2723
												],
												"declarations": [
													{
														"constant": false,
														"id": 2723,
														"mutability": "mutable",
														"name": "node",
														"nameLocation": "8589:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "8576:17:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														},
														"typeName": {
															"id": 2722,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2721,
																"name": "Node",
																"nameLocations": [
																	"8576:4:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2198,
																"src": "8576:4:1"
															},
															"referencedDeclaration": 2198,
															"src": "8576:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																"typeString": "struct Equation.Node"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2727,
												"initialValue": {
													"baseExpression": {
														"id": 2724,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "8596:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
															"typeString": "struct Equation.Node storage ref[] storage pointer"
														}
													},
													"id": 2726,
													"indexExpression": {
														"id": 2725,
														"name": "currentNodeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "8601:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8596:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Node_$2198_storage",
														"typeString": "struct Equation.Node storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8576:42:1"
											},
											{
												"assignments": [
													2729
												],
												"declarations": [
													{
														"constant": false,
														"id": 2729,
														"mutability": "mutable",
														"name": "opcode",
														"nameLocation": "8631:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "8625:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2728,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8625:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2732,
												"initialValue": {
													"expression": {
														"id": 2730,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "8640:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node storage pointer"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8645:6:1",
													"memberName": "opcode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2187,
													"src": "8640:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8625:26:1"
											},
											{
												"assignments": [
													2734
												],
												"declarations": [
													{
														"constant": false,
														"id": 2734,
														"mutability": "mutable",
														"name": "childrenCount",
														"nameLocation": "8664:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "8658:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2733,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8658:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2738,
												"initialValue": {
													"arguments": [
														{
															"id": 2736,
															"name": "opcode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "8697:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2735,
														"name": "getChildrenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "8680:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_uint8_$",
															"typeString": "function (uint8) pure returns (uint8)"
														}
													},
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8680:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8658:46:1"
											},
											{
												"assignments": [
													2743
												],
												"declarations": [
													{
														"constant": false,
														"id": 2743,
														"mutability": "mutable",
														"name": "childrenTypes",
														"nameLocation": "8729:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "8711:31:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
															"typeString": "enum Equation.ExprType[]"
														},
														"typeName": {
															"baseType": {
																"id": 2741,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2740,
																	"name": "ExprType",
																	"nameLocations": [
																		"8711:8:1"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2202,
																	"src": "8711:8:1"
																},
																"referencedDeclaration": 2202,
																"src": "8711:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ExprType_$2202",
																	"typeString": "enum Equation.ExprType"
																}
															},
															"id": 2742,
															"nodeType": "ArrayTypeName",
															"src": "8711:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_storage_ptr",
																"typeString": "enum Equation.ExprType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2750,
												"initialValue": {
													"arguments": [
														{
															"id": 2748,
															"name": "childrenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "8760:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8745:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (enum Equation.ExprType[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2745,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2744,
																	"name": "ExprType",
																	"nameLocations": [
																		"8749:8:1"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2202,
																	"src": "8749:8:1"
																},
																"referencedDeclaration": 2202,
																"src": "8749:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ExprType_$2202",
																	"typeString": "enum Equation.ExprType"
																}
															},
															"id": 2746,
															"nodeType": "ArrayTypeName",
															"src": "8749:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_storage_ptr",
																"typeString": "enum Equation.ExprType[]"
															}
														}
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
														"typeString": "enum Equation.ExprType[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8711:63:1"
											},
											{
												"assignments": [
													2752
												],
												"declarations": [
													{
														"constant": false,
														"id": 2752,
														"mutability": "mutable",
														"name": "lastNodeIdx",
														"nameLocation": "8787:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "8781:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2751,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8781:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2754,
												"initialValue": {
													"id": 2753,
													"name": "currentNodeIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2706,
													"src": "8801:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8781:36:1"
											},
											{
												"body": {
													"id": 2829,
													"nodeType": "Block",
													"src": "8872:333:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2765,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2756,
																	"src": "8885:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8885:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2776,
																		"name": "idx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2756,
																		"src": "8942:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8949:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8942:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2787,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2756,
																			"src": "8999:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9006:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8999:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2798,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2756,
																				"src": "9056:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 2799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9063:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"src": "9056:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2809,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "9109:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9109:8:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2811,
																			"nodeType": "ExpressionStatement",
																			"src": "9109:8:1"
																		},
																		"id": 2812,
																		"nodeType": "IfStatement",
																		"src": "9052:65:1",
																		"trueBody": {
																			"expression": {
																				"id": 2807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2801,
																						"name": "node",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2723,
																						"src": "9066:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																							"typeString": "struct Equation.Node storage pointer"
																						}
																					},
																					"id": 2803,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "9071:6:1",
																					"memberName": "child3",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2195,
																					"src": "9066:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2804,
																						"name": "lastNodeIdx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2752,
																						"src": "9080:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2805,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9094:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "9080:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "9066:29:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 2808,
																			"nodeType": "ExpressionStatement",
																			"src": "9066:29:1"
																		}
																	},
																	"id": 2813,
																	"nodeType": "IfStatement",
																	"src": "8995:122:1",
																	"trueBody": {
																		"expression": {
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2790,
																					"name": "node",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "9009:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																						"typeString": "struct Equation.Node storage pointer"
																					}
																				},
																				"id": 2792,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "9014:6:1",
																				"memberName": "child2",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2193,
																				"src": "9009:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2793,
																					"name": "lastNodeIdx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "9023:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "9023:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "9009:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 2797,
																		"nodeType": "ExpressionStatement",
																		"src": "9009:29:1"
																	}
																},
																"id": 2814,
																"nodeType": "IfStatement",
																"src": "8938:179:1",
																"trueBody": {
																	"expression": {
																		"id": 2785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2779,
																				"name": "node",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2723,
																				"src": "8952:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																					"typeString": "struct Equation.Node storage pointer"
																				}
																			},
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8957:6:1",
																			"memberName": "child1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2191,
																			"src": "8952:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2782,
																				"name": "lastNodeIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2752,
																				"src": "8966:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8980:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8966:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "8952:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2786,
																	"nodeType": "ExpressionStatement",
																	"src": "8952:29:1"
																}
															},
															"id": 2815,
															"nodeType": "IfStatement",
															"src": "8881:236:1",
															"trueBody": {
																"expression": {
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2768,
																			"name": "node",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "8895:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																				"typeString": "struct Equation.Node storage pointer"
																			}
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "8900:6:1",
																		"memberName": "child0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2189,
																		"src": "8895:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2771,
																			"name": "lastNodeIdx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2752,
																			"src": "8909:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8923:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8909:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "8895:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2775,
																"nodeType": "ExpressionStatement",
																"src": "8895:29:1"
															}
														},
														{
															"expression": {
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2816,
																			"name": "lastNodeIdx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2752,
																			"src": "9127:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2817,
																				"name": "childrenTypes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2743,
																				"src": "9140:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																					"typeString": "enum Equation.ExprType[] memory"
																				}
																			},
																			"id": 2819,
																			"indexExpression": {
																				"id": 2818,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2756,
																				"src": "9154:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9140:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_ExprType_$2202",
																				"typeString": "enum Equation.ExprType"
																			}
																		}
																	],
																	"id": 2820,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "9126:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint8_$_t_enum$_ExprType_$2202_$",
																		"typeString": "tuple(uint8,enum Equation.ExprType)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2822,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "9175:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2823,
																				"name": "lastNodeIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2752,
																				"src": "9181:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9195:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9181:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2821,
																		"name": "populateTree",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2844,
																		"src": "9162:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$returns$_t_uint8_$_t_enum$_ExprType_$2202_$",
																			"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8) returns (uint8,enum Equation.ExprType)"
																		}
																	},
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9162:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint8_$_t_enum$_ExprType_$2202_$",
																		"typeString": "tuple(uint8,enum Equation.ExprType)"
																	}
																},
																"src": "9126:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2828,
															"nodeType": "ExpressionStatement",
															"src": "9126:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2759,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2756,
														"src": "8844:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2760,
														"name": "childrenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "8850:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8844:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2830,
												"initializationExpression": {
													"assignments": [
														2756
													],
													"declarations": [
														{
															"constant": false,
															"id": 2756,
															"mutability": "mutable",
															"name": "idx",
															"nameLocation": "8835:3:1",
															"nodeType": "VariableDeclaration",
															"scope": 2830,
															"src": "8829:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2755,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "8829:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2758,
													"initialValue": {
														"hexValue": "30",
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8841:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8829:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "8865:5:1",
														"subExpression": {
															"id": 2762,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "8867:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2764,
													"nodeType": "ExpressionStatement",
													"src": "8865:5:1"
												},
												"nodeType": "ForStatement",
												"src": "8824:381:1"
											},
											{
												"assignments": [
													2833
												],
												"declarations": [
													{
														"constant": false,
														"id": 2833,
														"mutability": "mutable",
														"name": "exprType",
														"nameLocation": "9220:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 2843,
														"src": "9211:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ExprType_$2202",
															"typeString": "enum Equation.ExprType"
														},
														"typeName": {
															"id": 2832,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2831,
																"name": "ExprType",
																"nameLocations": [
																	"9211:8:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2202,
																"src": "9211:8:1"
															},
															"referencedDeclaration": 2202,
															"src": "9211:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ExprType_$2202",
																"typeString": "enum Equation.ExprType"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2838,
												"initialValue": {
													"arguments": [
														{
															"id": 2835,
															"name": "opcode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "9245:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2836,
															"name": "childrenTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "9253:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																"typeString": "enum Equation.ExprType[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr",
																"typeString": "enum Equation.ExprType[] memory"
															}
														],
														"id": 2834,
														"name": "checkExprType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "9231:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_array$_t_enum$_ExprType_$2202_$dyn_memory_ptr_$returns$_t_enum$_ExprType_$2202_$",
															"typeString": "function (uint8,enum Equation.ExprType[] memory) pure returns (enum Equation.ExprType)"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9231:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ExprType_$2202",
														"typeString": "enum Equation.ExprType"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9211:56:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2839,
															"name": "lastNodeIdx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "9282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2840,
															"name": "exprType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "9295:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ExprType_$2202",
																"typeString": "enum Equation.ExprType"
															}
														}
													],
													"id": 2841,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9281:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_enum$_ExprType_$2202_$",
														"typeString": "tuple(uint8,enum Equation.ExprType)"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2842,
												"nodeType": "Return",
												"src": "9274:30:1"
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "7892:518:1",
										"text": "Helper function to recursively populate node infoMaprmation following the given pre-order\n node list. It inspects the opcode and recursively call populateTree(s) accordingly.\n @param self storage pointer to equation data to build tree.\n @param currentNodeIndex the index of the current node to populate infoMap.\n @return An (uint8, bool). The first value represents the last  (highest/rightmost) node\n index of the current subtree. The second value indicates the type of this subtree."
									},
									"id": 2844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "populateTree",
									"nameLocation": "8423:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "8451:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "8436:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
													"typeString": "struct Equation.Node[]"
												},
												"typeName": {
													"baseType": {
														"id": 2702,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2701,
															"name": "Node",
															"nameLocations": [
																"8436:4:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2198,
															"src": "8436:4:1"
														},
														"referencedDeclaration": 2198,
														"src": "8436:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														}
													},
													"id": 2703,
													"nodeType": "ArrayTypeName",
													"src": "8436:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
														"typeString": "struct Equation.Node[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "currentNodeIndex",
												"nameLocation": "8463:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "8457:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2705,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8457:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8435:45:1"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "8503:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2708,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8503:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "8510:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ExprType_$2202",
													"typeString": "enum Equation.ExprType"
												},
												"typeName": {
													"id": 2711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2710,
														"name": "ExprType",
														"nameLocations": [
															"8510:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2202,
														"src": "8510:8:1"
													},
													"referencedDeclaration": 2202,
													"src": "8510:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ExprType_$2202",
														"typeString": "enum Equation.ExprType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8502:17:1"
									},
									"scope": 3398,
									"src": "8414:896:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3193,
										"nodeType": "Block",
										"src": "9428:2437:1",
										"statements": [
											{
												"assignments": [
													2859
												],
												"declarations": [
													{
														"constant": false,
														"id": 2859,
														"mutability": "mutable",
														"name": "node",
														"nameLocation": "9448:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 3193,
														"src": "9435:17:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														},
														"typeName": {
															"id": 2858,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2857,
																"name": "Node",
																"nameLocations": [
																	"9435:4:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2198,
																"src": "9435:4:1"
															},
															"referencedDeclaration": 2198,
															"src": "9435:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																"typeString": "struct Equation.Node"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2863,
												"initialValue": {
													"baseExpression": {
														"id": 2860,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2848,
														"src": "9455:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
															"typeString": "struct Equation.Node storage ref[] storage pointer"
														}
													},
													"id": 2862,
													"indexExpression": {
														"id": 2861,
														"name": "nodeIdx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "9460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9455:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Node_$2198_storage",
														"typeString": "struct Equation.Node storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9435:33:1"
											},
											{
												"assignments": [
													2865
												],
												"declarations": [
													{
														"constant": false,
														"id": 2865,
														"mutability": "mutable",
														"name": "opcode",
														"nameLocation": "9481:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 3193,
														"src": "9475:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2864,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "9475:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2868,
												"initialValue": {
													"expression": {
														"id": 2866,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "9490:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node storage pointer"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9495:6:1",
													"memberName": "opcode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2187,
													"src": "9490:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9475:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2869,
														"name": "opcode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "9512:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2870,
														"name": "OPCODE_CONST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "9522:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "9512:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2876,
															"name": "opcode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "9580:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2877,
															"name": "OPCODE_VAR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "9590:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "9580:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2882,
																"name": "opcode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2865,
																"src": "9642:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2883,
																"name": "OPCODE_SQRT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2211,
																"src": "9652:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9642:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2933,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2865,
																		"src": "9974:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2934,
																		"name": "OPCODE_ADD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "9984:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "9974:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2936,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2865,
																		"src": "9998:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2937,
																		"name": "OPCODE_PCT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "10008:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "9998:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9974:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3046,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2865,
																		"src": "10857:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 3047,
																		"name": "OPCODE_IF",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "10867:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "10857:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 3077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3075,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "11082:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 3076,
																			"name": "OPCODE_BANCOR_LOG",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2262,
																			"src": "11092:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11082:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3113,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2865,
																				"src": "11374:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3114,
																				"name": "OPCODE_BANCOR_POWER",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2265,
																				"src": "11384:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "11374:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3183,
																		"nodeType": "IfStatement",
																		"src": "11370:475:1",
																		"trueBody": {
																			"id": 3182,
																			"nodeType": "Block",
																			"src": "11405:440:1",
																			"statements": [
																				{
																					"assignments": [
																						3117
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3117,
																							"mutability": "mutable",
																							"name": "multiplier",
																							"nameLocation": "11422:10:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11414:18:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3116,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "11414:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3124,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 3119,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2848,
																								"src": "11445:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								}
																							},
																							{
																								"expression": {
																									"id": 3120,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2859,
																									"src": "11451:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																										"typeString": "struct Equation.Node storage pointer"
																									}
																								},
																								"id": 3121,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11456:6:1",
																								"memberName": "child0",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2189,
																								"src": "11451:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 3122,
																								"name": "xValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2852,
																								"src": "11464:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3118,
																							"name": "solveMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "11435:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																							}
																						},
																						"id": 3123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11435:36:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "11414:57:1"
																				},
																				{
																					"assignments": [
																						3126
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3126,
																							"mutability": "mutable",
																							"name": "baseN",
																							"nameLocation": "11488:5:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11480:13:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3125,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "11480:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3133,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 3128,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2848,
																								"src": "11506:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								}
																							},
																							{
																								"expression": {
																									"id": 3129,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2859,
																									"src": "11512:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																										"typeString": "struct Equation.Node storage pointer"
																									}
																								},
																								"id": 3130,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11517:6:1",
																								"memberName": "child1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2191,
																								"src": "11512:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 3131,
																								"name": "xValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2852,
																								"src": "11525:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3127,
																							"name": "solveMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "11496:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																							}
																						},
																						"id": 3132,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11496:36:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "11480:52:1"
																				},
																				{
																					"assignments": [
																						3135
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3135,
																							"mutability": "mutable",
																							"name": "baseD",
																							"nameLocation": "11549:5:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11541:13:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3134,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "11541:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3142,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 3137,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2848,
																								"src": "11567:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								}
																							},
																							{
																								"expression": {
																									"id": 3138,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2859,
																									"src": "11573:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																										"typeString": "struct Equation.Node storage pointer"
																									}
																								},
																								"id": 3139,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11578:6:1",
																								"memberName": "child2",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2193,
																								"src": "11573:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 3140,
																								"name": "xValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2852,
																								"src": "11586:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3136,
																							"name": "solveMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "11557:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																							}
																						},
																						"id": 3141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11557:36:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "11541:52:1"
																				},
																				{
																					"assignments": [
																						3144
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3144,
																							"mutability": "mutable",
																							"name": "expV",
																							"nameLocation": "11610:4:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11602:12:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3143,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "11602:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3151,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 3146,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2848,
																								"src": "11627:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								}
																							},
																							{
																								"expression": {
																									"id": 3147,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2859,
																									"src": "11633:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																										"typeString": "struct Equation.Node storage pointer"
																									}
																								},
																								"id": 3148,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11638:6:1",
																								"memberName": "child3",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2195,
																								"src": "11633:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 3149,
																								"name": "xValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2852,
																								"src": "11646:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3145,
																							"name": "solveMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "11617:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																							}
																						},
																						"id": 3150,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11617:36:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "11602:51:1"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3157,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3153,
																									"name": "expV",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3144,
																									"src": "11670:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<",
																								"rightExpression": {
																									"commonType": {
																										"typeIdentifier": "t_rational_4294967296_by_1",
																										"typeString": "int_const 4294967296"
																									},
																									"id": 3156,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"hexValue": "31",
																										"id": 3154,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "11677:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<<",
																									"rightExpression": {
																										"hexValue": "3332",
																										"id": 3155,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "11682:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_32_by_1",
																											"typeString": "int_const 32"
																										},
																										"value": "32"
																									},
																									"src": "11677:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4294967296_by_1",
																										"typeString": "int_const 4294967296"
																									}
																								},
																								"src": "11670:14:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 3152,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "11662:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																								"typeString": "function (bool) pure"
																							}
																						},
																						"id": 3158,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11662:23:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3159,
																					"nodeType": "ExpressionStatement",
																					"src": "11662:23:1"
																				},
																				{
																					"assignments": [
																						3161,
																						3163
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3161,
																							"mutability": "mutable",
																							"name": "expResult",
																							"nameLocation": "11703:9:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11695:17:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3160,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "11695:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						},
																						{
																							"constant": false,
																							"id": 3163,
																							"mutability": "mutable",
																							"name": "precision",
																							"nameLocation": "11720:9:1",
																							"nodeType": "VariableDeclaration",
																							"scope": 3182,
																							"src": "11714:15:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"typeName": {
																								"id": 3162,
																								"name": "uint8",
																								"nodeType": "ElementaryTypeName",
																								"src": "11714:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3174,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 3166,
																								"name": "baseN",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3126,
																								"src": "11751:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 3167,
																								"name": "baseD",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3135,
																								"src": "11758:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 3170,
																										"name": "expV",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3144,
																										"src": "11772:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 3169,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "11765:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint32_$",
																										"typeString": "type(uint32)"
																									},
																									"typeName": {
																										"id": 3168,
																										"name": "uint32",
																										"nodeType": "ElementaryTypeName",
																										"src": "11765:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 3171,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "11765:12:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							{
																								"hexValue": "316536",
																								"id": 3172,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "11779:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								},
																								"value": "1e6"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								},
																								{
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								}
																							],
																							"expression": {
																								"id": 3164,
																								"name": "BancorPower",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2177,
																								"src": "11733:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_BancorPower_$2177_$",
																									"typeString": "type(library BancorPower)"
																								}
																							},
																							"id": 3165,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11745:5:1",
																							"memberName": "power",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 141,
																							"src": "11733:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
																								"typeString": "function (uint256,uint256,uint32,uint32) pure returns (uint256,uint8)"
																							}
																						},
																						"id": 3173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11733:50:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																							"typeString": "tuple(uint256,uint8)"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "11694:89:1"
																				},
																				{
																					"expression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 3177,
																									"name": "multiplier",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3117,
																									"src": "11813:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 3175,
																									"name": "expResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3161,
																									"src": "11799:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 3176,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11809:3:1",
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3435,
																								"src": "11799:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3178,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11799:25:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"id": 3179,
																							"name": "precision",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3163,
																							"src": "11828:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "11799:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2856,
																					"id": 3181,
																					"nodeType": "Return",
																					"src": "11792:45:1"
																				}
																			]
																		}
																	},
																	"id": 3184,
																	"nodeType": "IfStatement",
																	"src": "11078:767:1",
																	"trueBody": {
																		"id": 3112,
																		"nodeType": "Block",
																		"src": "11111:253:1",
																		"statements": [
																			{
																				"assignments": [
																					3079
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 3079,
																						"mutability": "mutable",
																						"name": "multiplier",
																						"nameLocation": "11128:10:1",
																						"nodeType": "VariableDeclaration",
																						"scope": 3112,
																						"src": "11120:18:1",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 3078,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "11120:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 3086,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 3081,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "11151:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							}
																						},
																						{
																							"expression": {
																								"id": 3082,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2859,
																								"src": "11157:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																									"typeString": "struct Equation.Node storage pointer"
																								}
																							},
																							"id": 3083,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11162:6:1",
																							"memberName": "child0",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2189,
																							"src": "11157:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 3084,
																							"name": "xValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "11170:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3080,
																						"name": "solveMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "11141:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																						}
																					},
																					"id": 3085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11141:36:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "11120:57:1"
																			},
																			{
																				"assignments": [
																					3088
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 3088,
																						"mutability": "mutable",
																						"name": "baseN",
																						"nameLocation": "11194:5:1",
																						"nodeType": "VariableDeclaration",
																						"scope": 3112,
																						"src": "11186:13:1",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 3087,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "11186:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 3095,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 3090,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "11212:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							}
																						},
																						{
																							"expression": {
																								"id": 3091,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2859,
																								"src": "11218:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																									"typeString": "struct Equation.Node storage pointer"
																								}
																							},
																							"id": 3092,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11223:6:1",
																							"memberName": "child1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2191,
																							"src": "11218:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 3093,
																							"name": "xValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "11231:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3089,
																						"name": "solveMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "11202:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																						}
																					},
																					"id": 3094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11202:36:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "11186:52:1"
																			},
																			{
																				"assignments": [
																					3097
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 3097,
																						"mutability": "mutable",
																						"name": "baseD",
																						"nameLocation": "11255:5:1",
																						"nodeType": "VariableDeclaration",
																						"scope": 3112,
																						"src": "11247:13:1",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 3096,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "11247:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 3104,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 3099,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "11273:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							}
																						},
																						{
																							"expression": {
																								"id": 3100,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2859,
																								"src": "11279:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																									"typeString": "struct Equation.Node storage pointer"
																								}
																							},
																							"id": 3101,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11284:6:1",
																							"memberName": "child2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2193,
																							"src": "11279:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 3102,
																							"name": "xValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "11292:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3098,
																						"name": "solveMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "11263:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																						}
																					},
																					"id": 3103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11263:36:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "11247:52:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 3107,
																							"name": "multiplier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3079,
																							"src": "11331:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 3108,
																							"name": "baseN",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3088,
																							"src": "11343:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 3109,
																							"name": "baseD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3097,
																							"src": "11350:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 3105,
																							"name": "BancorPower",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2177,
																							"src": "11315:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_BancorPower_$2177_$",
																								"typeString": "type(library BancorPower)"
																							}
																						},
																						"id": 3106,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11327:3:1",
																						"memberName": "log",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 196,
																						"src": "11315:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11315:41:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 2856,
																				"id": 3111,
																				"nodeType": "Return",
																				"src": "11308:48:1"
																			}
																		]
																	}
																},
																"id": 3185,
																"nodeType": "IfStatement",
																"src": "10853:992:1",
																"trueBody": {
																	"id": 3074,
																	"nodeType": "Block",
																	"src": "10878:194:1",
																	"statements": [
																		{
																			"assignments": [
																				3050
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 3050,
																					"mutability": "mutable",
																					"name": "condValue",
																					"nameLocation": "10892:9:1",
																					"nodeType": "VariableDeclaration",
																					"scope": 3074,
																					"src": "10887:14:1",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"typeName": {
																						"id": 3049,
																						"name": "bool",
																						"nodeType": "ElementaryTypeName",
																						"src": "10887:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 3057,
																			"initialValue": {
																				"arguments": [
																					{
																						"id": 3052,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2848,
																						"src": "10914:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						}
																					},
																					{
																						"expression": {
																							"id": 3053,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2859,
																							"src": "10920:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																								"typeString": "struct Equation.Node storage pointer"
																							}
																						},
																						"id": 3054,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10925:6:1",
																						"memberName": "child0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2189,
																						"src": "10920:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					{
																						"id": 3055,
																						"name": "xValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2852,
																						"src": "10933:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						},
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3051,
																					"name": "solveBool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3397,
																					"src": "10904:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																					}
																				},
																				"id": 3056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10904:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10887:53:1"
																		},
																		{
																			"condition": {
																				"id": 3058,
																				"name": "condValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3050,
																				"src": "10953:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3067,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "11038:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							}
																						},
																						{
																							"expression": {
																								"id": 3068,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2859,
																								"src": "11044:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																									"typeString": "struct Equation.Node storage pointer"
																								}
																							},
																							"id": 3069,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11049:6:1",
																							"memberName": "child2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2193,
																							"src": "11044:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 3070,
																							"name": "xValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "11057:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3066,
																						"name": "solveMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "11028:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																						}
																					},
																					"id": 3071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11028:36:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 2856,
																				"id": 3072,
																				"nodeType": "Return",
																				"src": "11021:43:1"
																			},
																			"id": 3073,
																			"nodeType": "IfStatement",
																			"src": "10949:115:1",
																			"trueBody": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3060,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "10981:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							}
																						},
																						{
																							"expression": {
																								"id": 3061,
																								"name": "node",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2859,
																								"src": "10987:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																									"typeString": "struct Equation.Node storage pointer"
																								}
																							},
																							"id": 3062,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10992:6:1",
																							"memberName": "child1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2191,
																							"src": "10987:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 3063,
																							"name": "xValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "11000:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																								"typeString": "struct Equation.Node storage ref[] storage pointer"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3059,
																						"name": "solveMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "10971:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																						}
																					},
																					"id": 3064,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10971:36:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"functionReturnParameters": 2856,
																				"id": 3065,
																				"nodeType": "Return",
																				"src": "10964:43:1"
																			}
																		}
																	]
																}
															},
															"id": 3186,
															"nodeType": "IfStatement",
															"src": "9970:1875:1",
															"trueBody": {
																"id": 3045,
																"nodeType": "Block",
																"src": "10020:827:1",
																"statements": [
																	{
																		"assignments": [
																			2941
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2941,
																				"mutability": "mutable",
																				"name": "leftValue",
																				"nameLocation": "10037:9:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 3045,
																				"src": "10029:17:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2940,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10029:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2948,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2943,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "10059:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					}
																				},
																				{
																					"expression": {
																						"id": 2944,
																						"name": "node",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2859,
																						"src": "10065:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																							"typeString": "struct Equation.Node storage pointer"
																						}
																					},
																					"id": 2945,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10070:6:1",
																					"memberName": "child0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2189,
																					"src": "10065:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"id": 2946,
																					"name": "xValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2852,
																					"src": "10078:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2942,
																				"name": "solveMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3194,
																				"src": "10049:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10049:36:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10029:56:1"
																	},
																	{
																		"assignments": [
																			2950
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2950,
																				"mutability": "mutable",
																				"name": "rightValue",
																				"nameLocation": "10102:10:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 3045,
																				"src": "10094:18:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2949,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10094:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2957,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2952,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "10125:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					}
																				},
																				{
																					"expression": {
																						"id": 2953,
																						"name": "node",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2859,
																						"src": "10131:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																							"typeString": "struct Equation.Node storage pointer"
																						}
																					},
																					"id": 2954,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10136:6:1",
																					"memberName": "child1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2191,
																					"src": "10131:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"id": 2955,
																					"name": "xValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2852,
																					"src": "10144:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2951,
																				"name": "solveMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3194,
																				"src": "10115:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10115:36:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10094:57:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2958,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2865,
																				"src": "10164:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2959,
																				"name": "OPCODE_ADD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2217,
																				"src": "10174:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "10164:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2967,
																					"name": "opcode",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2865,
																					"src": "10249:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2968,
																					"name": "OPCODE_SUB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10259:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "10249:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2978,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2976,
																						"name": "opcode",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2865,
																						"src": "10334:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 2977,
																						"name": "OPCODE_MUL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2223,
																						"src": "10344:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "10334:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 2987,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2985,
																							"name": "opcode",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2865,
																							"src": "10419:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 2986,
																							"name": "OPCODE_DIV",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2226,
																							"src": "10429:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "10419:20:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 2996,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2994,
																								"name": "opcode",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2865,
																								"src": "10504:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 2995,
																								"name": "OPCODE_EXP",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2229,
																								"src": "10514:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "10504:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 3029,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3027,
																									"name": "opcode",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2865,
																									"src": "10755:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"id": 3028,
																									"name": "OPCODE_PCT",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2232,
																									"src": "10765:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "10755:20:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 3039,
																							"nodeType": "IfStatement",
																							"src": "10751:89:1",
																							"trueBody": {
																								"id": 3038,
																								"nodeType": "Block",
																								"src": "10777:63:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"hexValue": "31653138",
																													"id": 3035,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "10825:4:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1000000000000000000_by_1",
																														"typeString": "int_const 1000000000000000000"
																													},
																													"value": "1e18"
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_rational_1000000000000000000_by_1",
																														"typeString": "int_const 1000000000000000000"
																													}
																												],
																												"expression": {
																													"arguments": [
																														{
																															"id": 3032,
																															"name": "rightValue",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 2950,
																															"src": "10809:10:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"id": 3030,
																															"name": "leftValue",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 2941,
																															"src": "10795:9:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 3031,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "10805:3:1",
																														"memberName": "mul",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 3435,
																														"src": "10795:13:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																															"typeString": "function (uint256,uint256) pure returns (uint256)"
																														}
																													},
																													"id": 3033,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"nameLocations": [],
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "10795:25:1",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 3034,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "10821:3:1",
																												"memberName": "div",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 3450,
																												"src": "10795:29:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 3036,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "10795:35:1",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"functionReturnParameters": 2856,
																										"id": 3037,
																										"nodeType": "Return",
																										"src": "10788:42:1"
																									}
																								]
																							}
																						},
																						"id": 3040,
																						"nodeType": "IfStatement",
																						"src": "10500:340:1",
																						"trueBody": {
																							"id": 3026,
																							"nodeType": "Block",
																							"src": "10526:219:1",
																							"statements": [
																								{
																									"assignments": [
																										2998
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 2998,
																											"mutability": "mutable",
																											"name": "power",
																											"nameLocation": "10545:5:1",
																											"nodeType": "VariableDeclaration",
																											"scope": 3026,
																											"src": "10537:13:1",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"typeName": {
																												"id": 2997,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "10537:7:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 3000,
																									"initialValue": {
																										"id": 2999,
																										"name": "rightValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2950,
																										"src": "10553:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "10537:26:1"
																								},
																								{
																									"assignments": [
																										3002
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 3002,
																											"mutability": "mutable",
																											"name": "expResult",
																											"nameLocation": "10582:9:1",
																											"nodeType": "VariableDeclaration",
																											"scope": 3026,
																											"src": "10574:17:1",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"typeName": {
																												"id": 3001,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "10574:7:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 3004,
																									"initialValue": {
																										"hexValue": "31",
																										"id": 3003,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10594:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "10574:21:1"
																								},
																								{
																									"body": {
																										"id": 3022,
																										"nodeType": "Block",
																										"src": "10648:61:1",
																										"statements": [
																											{
																												"expression": {
																													"id": 3020,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftHandSide": {
																														"id": 3015,
																														"name": "expResult",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 3002,
																														"src": "10661:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"nodeType": "Assignment",
																													"operator": "=",
																													"rightHandSide": {
																														"arguments": [
																															{
																																"id": 3018,
																																"name": "leftValue",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 2941,
																																"src": "10687:9:1",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 3016,
																																"name": "expResult",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 3002,
																																"src": "10673:9:1",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 3017,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "10683:3:1",
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 3435,
																															"src": "10673:13:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 3019,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "10673:24:1",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "10661:36:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 3021,
																												"nodeType": "ExpressionStatement",
																												"src": "10661:36:1"
																											}
																										]
																									},
																									"condition": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 3011,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 3009,
																											"name": "idx",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3006,
																											"src": "10628:3:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<",
																										"rightExpression": {
																											"id": 3010,
																											"name": "power",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2998,
																											"src": "10634:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "10628:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"id": 3023,
																									"initializationExpression": {
																										"assignments": [
																											3006
																										],
																										"declarations": [
																											{
																												"constant": false,
																												"id": 3006,
																												"mutability": "mutable",
																												"name": "idx",
																												"nameLocation": "10619:3:1",
																												"nodeType": "VariableDeclaration",
																												"scope": 3023,
																												"src": "10611:11:1",
																												"stateVariable": false,
																												"storageLocation": "default",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"typeName": {
																													"id": 3005,
																													"name": "uint256",
																													"nodeType": "ElementaryTypeName",
																													"src": "10611:7:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"visibility": "internal"
																											}
																										],
																										"id": 3008,
																										"initialValue": {
																											"hexValue": "30",
																											"id": 3007,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "10625:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										},
																										"nodeType": "VariableDeclarationStatement",
																										"src": "10611:15:1"
																									},
																									"isSimpleCounterLoop": true,
																									"loopExpression": {
																										"expression": {
																											"id": 3013,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "++",
																											"prefix": true,
																											"src": "10641:5:1",
																											"subExpression": {
																												"id": 3012,
																												"name": "idx",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3006,
																												"src": "10643:3:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 3014,
																										"nodeType": "ExpressionStatement",
																										"src": "10641:5:1"
																									},
																									"nodeType": "ForStatement",
																									"src": "10606:103:1"
																								},
																								{
																									"expression": {
																										"id": 3024,
																										"name": "expResult",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3002,
																										"src": "10726:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"functionReturnParameters": 2856,
																									"id": 3025,
																									"nodeType": "Return",
																									"src": "10719:16:1"
																								}
																							]
																						}
																					},
																					"id": 3041,
																					"nodeType": "IfStatement",
																					"src": "10415:425:1",
																					"trueBody": {
																						"id": 2993,
																						"nodeType": "Block",
																						"src": "10441:53:1",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"id": 2990,
																											"name": "rightValue",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2950,
																											"src": "10473:10:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2988,
																											"name": "leftValue",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2941,
																											"src": "10459:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2989,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10469:3:1",
																										"memberName": "div",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3450,
																										"src": "10459:13:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2991,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "10459:25:1",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"functionReturnParameters": 2856,
																								"id": 2992,
																								"nodeType": "Return",
																								"src": "10452:32:1"
																							}
																						]
																					}
																				},
																				"id": 3042,
																				"nodeType": "IfStatement",
																				"src": "10330:510:1",
																				"trueBody": {
																					"id": 2984,
																					"nodeType": "Block",
																					"src": "10356:53:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"id": 2981,
																										"name": "rightValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2950,
																										"src": "10388:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 2979,
																										"name": "leftValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2941,
																										"src": "10374:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2980,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "10384:3:1",
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3435,
																									"src": "10374:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10374:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"functionReturnParameters": 2856,
																							"id": 2983,
																							"nodeType": "Return",
																							"src": "10367:32:1"
																						}
																					]
																				}
																			},
																			"id": 3043,
																			"nodeType": "IfStatement",
																			"src": "10245:595:1",
																			"trueBody": {
																				"id": 2975,
																				"nodeType": "Block",
																				"src": "10271:53:1",
																				"statements": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"id": 2972,
																									"name": "rightValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2950,
																									"src": "10303:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2970,
																									"name": "leftValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2941,
																									"src": "10289:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2971,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10299:3:1",
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3471,
																								"src": "10289:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2973,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10289:25:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 2856,
																						"id": 2974,
																						"nodeType": "Return",
																						"src": "10282:32:1"
																					}
																				]
																			}
																		},
																		"id": 3044,
																		"nodeType": "IfStatement",
																		"src": "10160:680:1",
																		"trueBody": {
																			"id": 2966,
																			"nodeType": "Block",
																			"src": "10186:53:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 2963,
																								"name": "rightValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2950,
																								"src": "10218:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 2961,
																								"name": "leftValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2941,
																								"src": "10204:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2962,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10214:3:1",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3496,
																							"src": "10204:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2964,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10204:25:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2856,
																					"id": 2965,
																					"nodeType": "Return",
																					"src": "10197:32:1"
																				}
																			]
																		}
																	}
																]
															}
														},
														"id": 3187,
														"nodeType": "IfStatement",
														"src": "9638:2207:1",
														"trueBody": {
															"id": 2932,
															"nodeType": "Block",
															"src": "9665:299:1",
															"statements": [
																{
																	"assignments": [
																		2886
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2886,
																			"mutability": "mutable",
																			"name": "childValue",
																			"nameLocation": "9682:10:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 2932,
																			"src": "9674:18:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2885,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "9674:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2893,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 2888,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2848,
																				"src": "9705:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																					"typeString": "struct Equation.Node storage ref[] storage pointer"
																				}
																			},
																			{
																				"expression": {
																					"id": 2889,
																					"name": "node",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2859,
																					"src": "9711:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																						"typeString": "struct Equation.Node storage pointer"
																					}
																				},
																				"id": 2890,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9716:6:1",
																				"memberName": "child0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2189,
																				"src": "9711:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"id": 2891,
																				"name": "xValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2852,
																				"src": "9724:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																					"typeString": "struct Equation.Node storage ref[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2887,
																			"name": "solveMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3194,
																			"src": "9695:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9695:36:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "9674:57:1"
																},
																{
																	"assignments": [
																		2895
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2895,
																			"mutability": "mutable",
																			"name": "temp",
																			"nameLocation": "9748:4:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 2932,
																			"src": "9740:12:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2894,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "9740:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2903,
																	"initialValue": {
																		"arguments": [
																			{
																				"hexValue": "32",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9777:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 2898,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9770:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						}
																					],
																					"expression": {
																						"id": 2896,
																						"name": "childValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2886,
																						"src": "9755:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9766:3:1",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3496,
																					"src": "9755:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9755:17:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9773:3:1",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3450,
																			"src": "9755:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9755:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "9740:39:1"
																},
																{
																	"assignments": [
																		2905
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2905,
																			"mutability": "mutable",
																			"name": "result",
																			"nameLocation": "9796:6:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 2932,
																			"src": "9788:14:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2904,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "9788:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2907,
																	"initialValue": {
																		"id": 2906,
																		"name": "childValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2886,
																		"src": "9805:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "9788:27:1"
																},
																{
																	"body": {
																		"id": 2928,
																		"nodeType": "Block",
																		"src": "9846:89:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 2913,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2911,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2905,
																						"src": "9857:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2912,
																						"name": "temp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2895,
																						"src": "9866:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9857:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2914,
																				"nodeType": "ExpressionStatement",
																				"src": "9857:13:1"
																			},
																			{
																				"expression": {
																					"id": 2926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2915,
																						"name": "temp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2895,
																						"src": "9881:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"hexValue": "32",
																								"id": 2924,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9923:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 2921,
																										"name": "temp",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2895,
																										"src": "9913:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"id": 2918,
																												"name": "temp",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2895,
																												"src": "9903:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 2916,
																												"name": "childValue",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2886,
																												"src": "9888:10:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2917,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "9899:3:1",
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3450,
																											"src": "9888:14:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2919,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9888:20:1",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2920,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "9909:3:1",
																									"memberName": "add",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3496,
																									"src": "9888:24:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2922,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9888:30:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2923,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9919:3:1",
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3450,
																							"src": "9888:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2925,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9888:37:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9881:44:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2927,
																				"nodeType": "ExpressionStatement",
																				"src": "9881:44:1"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2908,
																			"name": "temp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2895,
																			"src": "9831:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2905,
																			"src": "9838:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9831:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2929,
																	"nodeType": "WhileStatement",
																	"src": "9824:111:1"
																},
																{
																	"expression": {
																		"id": 2930,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2905,
																		"src": "9950:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2856,
																	"id": 2931,
																	"nodeType": "Return",
																	"src": "9943:13:1"
																}
															]
														}
													},
													"id": 3188,
													"nodeType": "IfStatement",
													"src": "9576:2269:1",
													"trueBody": {
														"id": 2881,
														"nodeType": "Block",
														"src": "9602:30:1",
														"statements": [
															{
																"expression": {
																	"id": 2879,
																	"name": "xValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "9618:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2856,
																"id": 2880,
																"nodeType": "Return",
																"src": "9611:13:1"
															}
														]
													}
												},
												"id": 3189,
												"nodeType": "IfStatement",
												"src": "9508:2337:1",
												"trueBody": {
													"id": 2875,
													"nodeType": "Block",
													"src": "9536:34:1",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 2872,
																	"name": "node",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "9552:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																		"typeString": "struct Equation.Node storage pointer"
																	}
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9557:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2197,
																"src": "9552:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2856,
															"id": 2874,
															"nodeType": "Return",
															"src": "9545:17:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3190,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "11851:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11851:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3192,
												"nodeType": "ExpressionStatement",
												"src": "11851:8:1"
											}
										]
									},
									"id": 3194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solveMath",
									"nameLocation": "9327:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "9352:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9337:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
													"typeString": "struct Equation.Node[]"
												},
												"typeName": {
													"baseType": {
														"id": 2846,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2845,
															"name": "Node",
															"nameLocations": [
																"9337:4:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2198,
															"src": "9337:4:1"
														},
														"referencedDeclaration": 2198,
														"src": "9337:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														}
													},
													"id": 2847,
													"nodeType": "ArrayTypeName",
													"src": "9337:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
														"typeString": "struct Equation.Node[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "nodeIdx",
												"nameLocation": "9364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9358:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2849,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9358:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "xValue",
												"nameLocation": "9381:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9373:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9336:52:1"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9416:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9415:9:1"
									},
									"scope": 3398,
									"src": "9318:2547:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3396,
										"nodeType": "Block",
										"src": "11978:1512:1",
										"statements": [
											{
												"assignments": [
													3209
												],
												"declarations": [
													{
														"constant": false,
														"id": 3209,
														"mutability": "mutable",
														"name": "node",
														"nameLocation": "11998:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 3396,
														"src": "11985:17:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														},
														"typeName": {
															"id": 3208,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3207,
																"name": "Node",
																"nameLocations": [
																	"11985:4:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2198,
																"src": "11985:4:1"
															},
															"referencedDeclaration": 2198,
															"src": "11985:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																"typeString": "struct Equation.Node"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3213,
												"initialValue": {
													"baseExpression": {
														"id": 3210,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3198,
														"src": "12005:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
															"typeString": "struct Equation.Node storage ref[] storage pointer"
														}
													},
													"id": 3212,
													"indexExpression": {
														"id": 3211,
														"name": "nodeIdx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3200,
														"src": "12010:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12005:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Node_$2198_storage",
														"typeString": "struct Equation.Node storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11985:33:1"
											},
											{
												"assignments": [
													3215
												],
												"declarations": [
													{
														"constant": false,
														"id": 3215,
														"mutability": "mutable",
														"name": "opcode",
														"nameLocation": "12031:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 3396,
														"src": "12025:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 3214,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12025:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3218,
												"initialValue": {
													"expression": {
														"id": 3216,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "12040:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node storage pointer"
														}
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12045:6:1",
													"memberName": "opcode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2187,
													"src": "12040:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12025:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3219,
														"name": "opcode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3215,
														"src": "12062:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3220,
														"name": "OPCODE_NOT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "12072:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "12062:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3231,
																"name": "opcode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3215,
																"src": "12155:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3232,
																"name": "OPCODE_EQ",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "12165:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12155:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3234,
																"name": "opcode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3215,
																"src": "12178:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3235,
																"name": "OPCODE_GE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "12188:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12178:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "12155:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3311,
																	"name": "opcode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3215,
																	"src": "12840:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3312,
																	"name": "OPCODE_AND",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "12850:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "12840:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3314,
																	"name": "opcode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3215,
																	"src": "12864:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 3315,
																	"name": "OPCODE_OR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "12874:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "12864:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12840:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3360,
																	"name": "opcode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3215,
																	"src": "13255:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3361,
																	"name": "OPCODE_IF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "13265:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "13255:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3389,
															"nodeType": "IfStatement",
															"src": "13251:219:1",
															"trueBody": {
																"id": 3388,
																"nodeType": "Block",
																"src": "13276:194:1",
																"statements": [
																	{
																		"assignments": [
																			3364
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3364,
																				"mutability": "mutable",
																				"name": "condValue",
																				"nameLocation": "13290:9:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 3388,
																				"src": "13285:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 3363,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "13285:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3371,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 3366,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3198,
																					"src": "13312:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					}
																				},
																				{
																					"expression": {
																						"id": 3367,
																						"name": "node",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3209,
																						"src": "13318:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																							"typeString": "struct Equation.Node storage pointer"
																						}
																					},
																					"id": 3368,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13323:6:1",
																					"memberName": "child0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2189,
																					"src": "13318:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"id": 3369,
																					"name": "xValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3202,
																					"src": "13331:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																						"typeString": "struct Equation.Node storage ref[] storage pointer"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3365,
																				"name": "solveBool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3397,
																				"src": "13302:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																				}
																			},
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13302:36:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13285:53:1"
																	},
																	{
																		"condition": {
																			"id": 3372,
																			"name": "condValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3364,
																			"src": "13351:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 3381,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3198,
																						"src": "13436:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						}
																					},
																					{
																						"expression": {
																							"id": 3382,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3209,
																							"src": "13442:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																								"typeString": "struct Equation.Node storage pointer"
																							}
																						},
																						"id": 3383,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13447:6:1",
																						"memberName": "child2",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2193,
																						"src": "13442:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					{
																						"id": 3384,
																						"name": "xValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3202,
																						"src": "13455:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						},
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3380,
																					"name": "solveBool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3397,
																					"src": "13426:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																					}
																				},
																				"id": 3385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13426:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"functionReturnParameters": 3206,
																			"id": 3386,
																			"nodeType": "Return",
																			"src": "13419:43:1"
																		},
																		"id": 3387,
																		"nodeType": "IfStatement",
																		"src": "13347:115:1",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 3374,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3198,
																						"src": "13379:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						}
																					},
																					{
																						"expression": {
																							"id": 3375,
																							"name": "node",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3209,
																							"src": "13385:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																								"typeString": "struct Equation.Node storage pointer"
																							}
																						},
																						"id": 3376,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13390:6:1",
																						"memberName": "child1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2191,
																						"src": "13385:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					{
																						"id": 3377,
																						"name": "xValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3202,
																						"src": "13398:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																							"typeString": "struct Equation.Node storage ref[] storage pointer"
																						},
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3373,
																					"name": "solveBool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3397,
																					"src": "13369:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																					}
																				},
																				"id": 3378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13369:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"functionReturnParameters": 3206,
																			"id": 3379,
																			"nodeType": "Return",
																			"src": "13362:43:1"
																		}
																	}
																]
															}
														},
														"id": 3390,
														"nodeType": "IfStatement",
														"src": "12836:634:1",
														"trueBody": {
															"id": 3359,
															"nodeType": "Block",
															"src": "12885:360:1",
															"statements": [
																{
																	"assignments": [
																		3319
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3319,
																			"mutability": "mutable",
																			"name": "leftBoolValue",
																			"nameLocation": "12899:13:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 3359,
																			"src": "12894:18:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 3318,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "12894:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3326,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 3321,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3198,
																				"src": "12925:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																					"typeString": "struct Equation.Node storage ref[] storage pointer"
																				}
																			},
																			{
																				"expression": {
																					"id": 3322,
																					"name": "node",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3209,
																					"src": "12931:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																						"typeString": "struct Equation.Node storage pointer"
																					}
																				},
																				"id": 3323,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12936:6:1",
																				"memberName": "child0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2189,
																				"src": "12931:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"id": 3324,
																				"name": "xValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3202,
																				"src": "12944:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																					"typeString": "struct Equation.Node storage ref[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3320,
																			"name": "solveBool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3397,
																			"src": "12915:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																			}
																		},
																		"id": 3325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12915:36:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "12894:57:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 3329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3327,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3215,
																			"src": "12964:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 3328,
																			"name": "OPCODE_AND",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2253,
																			"src": "12974:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "12964:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3342,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3215,
																				"src": "13107:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3343,
																				"name": "OPCODE_OR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2256,
																				"src": "13117:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "13107:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3357,
																		"nodeType": "IfStatement",
																		"src": "13103:135:1",
																		"trueBody": {
																			"id": 3356,
																			"nodeType": "Block",
																			"src": "13128:110:1",
																			"statements": [
																				{
																					"condition": {
																						"id": 3345,
																						"name": "leftBoolValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3319,
																						"src": "13143:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 3349,
																									"name": "self",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3198,
																									"src": "13202:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																										"typeString": "struct Equation.Node storage ref[] storage pointer"
																									}
																								},
																								{
																									"expression": {
																										"id": 3350,
																										"name": "node",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3209,
																										"src": "13208:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																											"typeString": "struct Equation.Node storage pointer"
																										}
																									},
																									"id": 3351,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "13213:6:1",
																									"memberName": "child1",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2191,
																									"src": "13208:11:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								{
																									"id": 3352,
																									"name": "xValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3202,
																									"src": "13221:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																										"typeString": "struct Equation.Node storage ref[] storage pointer"
																									},
																									{
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 3348,
																								"name": "solveBool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3397,
																								"src": "13192:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																									"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																								}
																							},
																							"id": 3353,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13192:36:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"functionReturnParameters": 3206,
																						"id": 3354,
																						"nodeType": "Return",
																						"src": "13185:43:1"
																					},
																					"id": 3355,
																					"nodeType": "IfStatement",
																					"src": "13139:89:1",
																					"trueBody": {
																						"expression": {
																							"hexValue": "74727565",
																							"id": 3346,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13165:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"functionReturnParameters": 3206,
																						"id": 3347,
																						"nodeType": "Return",
																						"src": "13158:11:1"
																					}
																				}
																			]
																		}
																	},
																	"id": 3358,
																	"nodeType": "IfStatement",
																	"src": "12960:278:1",
																	"trueBody": {
																		"id": 3341,
																		"nodeType": "Block",
																		"src": "12986:111:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 3330,
																					"name": "leftBoolValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3319,
																					"src": "13001:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"expression": {
																						"hexValue": "66616c7365",
																						"id": 3338,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13082:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "false"
																					},
																					"functionReturnParameters": 3206,
																					"id": 3339,
																					"nodeType": "Return",
																					"src": "13075:12:1"
																				},
																				"id": 3340,
																				"nodeType": "IfStatement",
																				"src": "12997:90:1",
																				"trueBody": {
																					"expression": {
																						"arguments": [
																							{
																								"id": 3332,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3198,
																								"src": "13033:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								}
																							},
																							{
																								"expression": {
																									"id": 3333,
																									"name": "node",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3209,
																									"src": "13039:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																										"typeString": "struct Equation.Node storage pointer"
																									}
																								},
																								"id": 3334,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "13044:6:1",
																								"memberName": "child1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2191,
																								"src": "13039:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							{
																								"id": 3335,
																								"name": "xValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3202,
																								"src": "13052:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																									"typeString": "struct Equation.Node storage ref[] storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3331,
																							"name": "solveBool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3397,
																							"src": "13023:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																							}
																						},
																						"id": 3336,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13023:36:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"functionReturnParameters": 3206,
																					"id": 3337,
																					"nodeType": "Return",
																					"src": "13016:43:1"
																				}
																			}
																		]
																	}
																}
															]
														}
													},
													"id": 3391,
													"nodeType": "IfStatement",
													"src": "12151:1319:1",
													"trueBody": {
														"id": 3310,
														"nodeType": "Block",
														"src": "12199:631:1",
														"statements": [
															{
																"assignments": [
																	3239
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3239,
																		"mutability": "mutable",
																		"name": "leftValue",
																		"nameLocation": "12216:9:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 3310,
																		"src": "12208:17:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3238,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12208:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3246,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 3241,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12238:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			}
																		},
																		{
																			"expression": {
																				"id": 3242,
																				"name": "node",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3209,
																				"src": "12244:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																					"typeString": "struct Equation.Node storage pointer"
																				}
																			},
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12249:6:1",
																			"memberName": "child0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2189,
																			"src": "12244:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 3244,
																			"name": "xValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3202,
																			"src": "12257:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3240,
																		"name": "solveMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3194,
																		"src": "12228:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																		}
																	},
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12228:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12208:56:1"
															},
															{
																"assignments": [
																	3248
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3248,
																		"mutability": "mutable",
																		"name": "rightValue",
																		"nameLocation": "12281:10:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 3310,
																		"src": "12273:18:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3247,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12273:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3255,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 3250,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12304:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			}
																		},
																		{
																			"expression": {
																				"id": 3251,
																				"name": "node",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3209,
																				"src": "12310:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																					"typeString": "struct Equation.Node storage pointer"
																				}
																			},
																			"id": 3252,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12315:6:1",
																			"memberName": "child1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2191,
																			"src": "12310:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 3253,
																			"name": "xValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3202,
																			"src": "12323:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3249,
																		"name": "solveMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3194,
																		"src": "12294:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (uint256)"
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12294:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12273:57:1"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 3258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3256,
																		"name": "opcode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3215,
																		"src": "12343:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 3257,
																		"name": "OPCODE_EQ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2235,
																		"src": "12353:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "12343:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 3266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3264,
																			"name": "opcode",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3215,
																			"src": "12425:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 3265,
																			"name": "OPCODE_NE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2238,
																			"src": "12435:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "12425:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3272,
																				"name": "opcode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3215,
																				"src": "12507:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3273,
																				"name": "OPCODE_LT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2241,
																				"src": "12517:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "12507:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 3282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3280,
																					"name": "opcode",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3215,
																					"src": "12588:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3281,
																					"name": "OPCODE_GT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "12598:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12588:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 3290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3288,
																						"name": "opcode",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3215,
																						"src": "12669:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 3289,
																						"name": "OPCODE_LE",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2247,
																						"src": "12679:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "12669:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 3298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3296,
																							"name": "opcode",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3215,
																							"src": "12751:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 3297,
																							"name": "OPCODE_GE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2250,
																							"src": "12761:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "12751:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 3304,
																					"nodeType": "IfStatement",
																					"src": "12747:76:1",
																					"trueBody": {
																						"id": 3303,
																						"nodeType": "Block",
																						"src": "12772:51:1",
																						"statements": [
																							{
																								"expression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3299,
																										"name": "leftValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3239,
																										"src": "12790:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">=",
																									"rightExpression": {
																										"id": 3300,
																										"name": "rightValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3248,
																										"src": "12803:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12790:23:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"functionReturnParameters": 3206,
																								"id": 3302,
																								"nodeType": "Return",
																								"src": "12783:30:1"
																							}
																						]
																					}
																				},
																				"id": 3305,
																				"nodeType": "IfStatement",
																				"src": "12665:158:1",
																				"trueBody": {
																					"id": 3295,
																					"nodeType": "Block",
																					"src": "12690:51:1",
																					"statements": [
																						{
																							"expression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3293,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3291,
																									"name": "leftValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3239,
																									"src": "12708:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"id": 3292,
																									"name": "rightValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3248,
																									"src": "12721:10:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12708:23:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"functionReturnParameters": 3206,
																							"id": 3294,
																							"nodeType": "Return",
																							"src": "12701:30:1"
																						}
																					]
																				}
																			},
																			"id": 3306,
																			"nodeType": "IfStatement",
																			"src": "12584:239:1",
																			"trueBody": {
																				"id": 3287,
																				"nodeType": "Block",
																				"src": "12609:50:1",
																				"statements": [
																					{
																						"expression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3285,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3283,
																								"name": "leftValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3239,
																								"src": "12627:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 3284,
																								"name": "rightValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3248,
																								"src": "12639:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12627:22:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"functionReturnParameters": 3206,
																						"id": 3286,
																						"nodeType": "Return",
																						"src": "12620:29:1"
																					}
																				]
																			}
																		},
																		"id": 3307,
																		"nodeType": "IfStatement",
																		"src": "12503:320:1",
																		"trueBody": {
																			"id": 3279,
																			"nodeType": "Block",
																			"src": "12528:50:1",
																			"statements": [
																				{
																					"expression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3275,
																							"name": "leftValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3239,
																							"src": "12546:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"id": 3276,
																							"name": "rightValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3248,
																							"src": "12558:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12546:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"functionReturnParameters": 3206,
																					"id": 3278,
																					"nodeType": "Return",
																					"src": "12539:29:1"
																				}
																			]
																		}
																	},
																	"id": 3308,
																	"nodeType": "IfStatement",
																	"src": "12421:402:1",
																	"trueBody": {
																		"id": 3271,
																		"nodeType": "Block",
																		"src": "12446:51:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3267,
																						"name": "leftValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3239,
																						"src": "12464:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 3268,
																						"name": "rightValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3248,
																						"src": "12477:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12464:23:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 3206,
																				"id": 3270,
																				"nodeType": "Return",
																				"src": "12457:30:1"
																			}
																		]
																	}
																},
																"id": 3309,
																"nodeType": "IfStatement",
																"src": "12339:484:1",
																"trueBody": {
																	"id": 3263,
																	"nodeType": "Block",
																	"src": "12364:51:1",
																	"statements": [
																		{
																			"expression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3259,
																					"name": "leftValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3239,
																					"src": "12382:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3260,
																					"name": "rightValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3248,
																					"src": "12395:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12382:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"functionReturnParameters": 3206,
																			"id": 3262,
																			"nodeType": "Return",
																			"src": "12375:30:1"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 3392,
												"nodeType": "IfStatement",
												"src": "12058:1412:1",
												"trueBody": {
													"id": 3230,
													"nodeType": "Block",
													"src": "12084:61:1",
													"statements": [
														{
															"expression": {
																"id": 3228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "12100:37:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 3223,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12111:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			}
																		},
																		{
																			"expression": {
																				"id": 3224,
																				"name": "node",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3209,
																				"src": "12117:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
																					"typeString": "struct Equation.Node storage pointer"
																				}
																			},
																			"id": 3225,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12122:6:1",
																			"memberName": "child0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2189,
																			"src": "12117:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 3226,
																			"name": "xValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3202,
																			"src": "12130:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
																				"typeString": "struct Equation.Node storage ref[] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3222,
																		"name": "solveBool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3397,
																		"src": "12101:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr_$_t_uint8_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (struct Equation.Node storage ref[] storage pointer,uint8,uint256) view returns (bool)"
																		}
																	},
																	"id": 3227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12101:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 3206,
															"id": 3229,
															"nodeType": "Return",
															"src": "12093:44:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3393,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "13476:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13476:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3395,
												"nodeType": "ExpressionStatement",
												"src": "13476:8:1"
											}
										]
									},
									"id": 3397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solveBool",
									"nameLocation": "11880:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "11905:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "11890:19:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
													"typeString": "struct Equation.Node[]"
												},
												"typeName": {
													"baseType": {
														"id": 3196,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3195,
															"name": "Node",
															"nameLocations": [
																"11890:4:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2198,
															"src": "11890:4:1"
														},
														"referencedDeclaration": 2198,
														"src": "11890:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Node_$2198_storage_ptr",
															"typeString": "struct Equation.Node"
														}
													},
													"id": 3197,
													"nodeType": "ArrayTypeName",
													"src": "11890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Node_$2198_storage_$dyn_storage_ptr",
														"typeString": "struct Equation.Node[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "nodeIdx",
												"nameLocation": "11917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "11911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3199,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "xValue",
												"nameLocation": "11934:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "11926:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11889:52:1"
									},
									"returnParameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "11969:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11969:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11968:6:1"
									},
									"scope": 3398,
									"src": "11871:1619:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3399,
							"src": "153:13340:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:13460:1"
				},
				"id": 1
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							3497
						]
					},
					"id": 3498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3400,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3401,
								"nodeType": "StructuredDocumentation",
								"src": "60:89:2",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 3497,
							"linearizedBaseContracts": [
								3497
							],
							"name": "SafeMath",
							"nameLocation": "158:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3434,
										"nodeType": "Block",
										"src": "305:98:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3411,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3404,
														"src": "315:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "320:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "315:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3417,
												"nodeType": "IfStatement",
												"src": "311:35:2",
												"trueBody": {
													"id": 3416,
													"nodeType": "Block",
													"src": "323:23:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "338:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3410,
															"id": 3415,
															"nodeType": "Return",
															"src": "331:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3418,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3409,
														"src": "351:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3419,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3404,
															"src": "355:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 3420,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3406,
															"src": "359:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "355:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "351:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3423,
												"nodeType": "ExpressionStatement",
												"src": "351:9:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3425,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3409,
																	"src": "373:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3426,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3404,
																	"src": "377:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "373:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3406,
																"src": "382:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "373:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3424,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "366:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "366:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3431,
												"nodeType": "ExpressionStatement",
												"src": "366:18:2"
											},
											{
												"expression": {
													"id": 3432,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3409,
													"src": "397:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3410,
												"id": 3433,
												"nodeType": "Return",
												"src": "390:8:2"
											}
										]
									},
									"documentation": {
										"id": 3402,
										"nodeType": "StructuredDocumentation",
										"src": "172:61:2",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 3435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "245:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3404,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "257:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "249:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "268:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "260:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:22:2"
									},
									"returnParameters": {
										"id": 3410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3409,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "302:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "294:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:11:2"
									},
									"scope": 3497,
									"src": "236:167:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3449,
										"nodeType": "Block",
										"src": "552:205:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3445,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3438,
														"src": "747:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3446,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "751:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3444,
												"id": 3448,
												"nodeType": "Return",
												"src": "740:12:2"
											}
										]
									},
									"documentation": {
										"id": 3436,
										"nodeType": "StructuredDocumentation",
										"src": "407:75:2",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 3450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "494:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "506:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "498:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "517:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "509:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:22:2"
									},
									"returnParameters": {
										"id": 3444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "543:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:9:2"
									},
									"scope": 3497,
									"src": "485:272:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3470,
										"nodeType": "Block",
										"src": "936:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3461,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3455,
																"src": "949:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3462,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3453,
																"src": "954:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "949:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3460,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "942:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3465,
												"nodeType": "ExpressionStatement",
												"src": "942:14:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3466,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3453,
														"src": "969:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3467,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3455,
														"src": "973:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "969:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3459,
												"id": 3469,
												"nodeType": "Return",
												"src": "962:12:2"
											}
										]
									},
									"documentation": {
										"id": 3451,
										"nodeType": "StructuredDocumentation",
										"src": "761:105:2",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 3471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "878:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "890:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3471,
												"src": "882:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "901:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3471,
												"src": "893:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:22:2"
									},
									"returnParameters": {
										"id": 3459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3471,
												"src": "927:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:9:2"
									},
									"scope": 3497,
									"src": "869:110:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3495,
										"nodeType": "Block",
										"src": "1110:54:2",
										"statements": [
											{
												"expression": {
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3481,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3479,
														"src": "1116:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3482,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3474,
															"src": "1120:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3483,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "1124:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1120:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1116:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3486,
												"nodeType": "ExpressionStatement",
												"src": "1116:9:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3488,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3479,
																"src": "1138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3489,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3474,
																"src": "1143:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3487,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1131:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3492,
												"nodeType": "ExpressionStatement",
												"src": "1131:14:2"
											},
											{
												"expression": {
													"id": 3493,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3479,
													"src": "1158:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3480,
												"id": 3494,
												"nodeType": "Return",
												"src": "1151:8:2"
											}
										]
									},
									"documentation": {
										"id": 3472,
										"nodeType": "StructuredDocumentation",
										"src": "983:55:2",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 3496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1050:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1062:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "1054:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1073:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "1065:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:22:2"
									},
									"returnParameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1107:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3496,
												"src": "1099:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:11:2"
									},
									"scope": 3497,
									"src": "1041:123:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3498,
							"src": "150:1016:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1134:2"
				},
				"id": 2
			}
		}
	}
}